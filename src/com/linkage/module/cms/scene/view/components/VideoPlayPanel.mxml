<?xml version="1.0" encoding="utf-8"?>
<ailk_compts:Window xmlns:fx="http://ns.adobe.com/mxml/2009"
					xmlns:s="library://ns.adobe.com/flex/spark"
					xmlns:mx="library://ns.adobe.com/flex/mx"
					xmlns:ailk_compts="http://www.asiainfo-linkage.com.cn/flex/components"
					width="100%"
					height="100%"
					styleName="windowScene"
					close="window1_closeHandler(event)"
					maximize="window1_maximizeHandler(event)"
					restore="window1_restoreHandler(event)"
					minimize="window1_minimizeHandler(event)"
					dragable="true"
					title="监控视频"
					creationComplete="window1_creationCompleteHandler(event)"
					xmlns:util="com.linkage.module.cms.scene.view.util.*"
					xmlns:parsley="http://www.spicefactory.org/parsley">
	<!--
		 ***************************************
		 This is Content
		 @author hurw (69065)
		 @version 1.0
		 @date 2013-8-14
		 @langversion 3.0
		 @playerversion Flash 11
		 @productversion Flex 4
		 @copyright Ailk NBS-Network Mgt. RD Dept.
		 ***************************************
	-->
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
		<parsley:Configure/>
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import com.ailk.common.system.logging.ILogger;
			import com.ailk.common.system.logging.Log;
			import com.ailk.common.ui.components.window.standardwindow.event.WindowEvent;
			import com.linkage.module.cms.scene.event.VideoPlayPanelEvent;
			import com.linkage.module.cms.scene.view.util.IFrame;

			import flash.utils.setTimeout;

			import mx.collections.ArrayCollection;
			import mx.core.FlexGlobals;
			import mx.events.DragEvent;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;

			private var log:ILogger = Log.getLoggerByClass(VideoPlayPanel);

			private var arr:ArrayCollection = new ArrayCollection();

			public var isShow:Boolean = false;

			[Bindable]
			public var isFinish:Boolean = false;

			[Bindable]
			public var isMini:Boolean = false;


			//			[MessageHandler(selector="CMS_SCENE_VIEWPLAYPANEL_ADDVIDEOPLAYHANDLER")]
			public function addVideoIntoIFrame(moId:String):void
			{
				log.info("isFinish:{0},isMini:{1}", isFinish, isMini);
				if (!isFinish)
				{
					setTimeout(function():void
						{
							addVideoIntoIFrame(moId);
						}, 200);
					return;
				}
				log.info("加入面板");
				if (arr.length == 2)
				{
					videoGroup.removeAllElements();
					arr.removeItemAt(0);
					if (!isMini)
						videoGroup.addElement(arr.getItemAt(0) as IFrame);
				}

				var iframe:IFrame = new IFrame();
				iframe.source = "http://211.103.0.17:8080/ZXNJ/main.jsp?id=" + moId;
				iframe.width = this.width / 2 - 10;
				iframe.height = this.height - 30;
				iframe.toolTip = "http://211.103.0.17:8080/ZXNJ/main.jsp?id=" + moId;
				arr.addItem(iframe);
				if (!isMini)
					videoGroup.addElement(iframe);

				log.info("video 加入完成！！");

			}

			protected function window1_closeHandler(event:WindowEvent):void
			{
				// TODO Auto-generated method stub
				videoGroup.removeAllElements();
				arr.removeAll();
				PopUpManager.removePopUp(this);
				isShow = false;

			}

			protected function window1_maximizeHandler(event:WindowEvent):void
			{

				this.width = FlexGlobals.topLevelApplication.width;
				this.height = FlexGlobals.topLevelApplication.height;
				videoGroup.removeAllElements();
				for each (var ifr:IFrame in arr)
				{
					ifr.width = this.width / 2 - 10;
					ifr.height = this.height - 30;
					videoGroup.addElement(ifr);
				}
				isMini = false;
			}

			protected function window1_restoreHandler(event:WindowEvent):void
			{
				this.width = 800;
				this.height = 300;
				videoGroup.removeAllElements();
				for each (var ifr:IFrame in arr)
				{
					ifr.width = this.width / 2 - 10;
					ifr.height = this.height - 30;
					videoGroup.addElement(ifr);
				}
				isMini = false;
			}


			protected function window1_creationCompleteHandler(event:FlexEvent):void
			{
				// TODO Auto-generated method stub
				this.addEventListener("xChanged", xchange);
				this.addEventListener("yChanged", xchange);
				isFinish = true;

			}

			private function xchange(e:Event):void
			{
				log.info("^^^^xchange^^^^^");
				videoGroup.removeAllElements();
				for each (var ifr:IFrame in arr)
				{
					videoGroup.addElement(ifr);
				}
				log.info("^^^^xchange^^edn^^^^^^");
			}

			protected function window1_minimizeHandler(event:WindowEvent):void
			{
				log.info("________minimize________");
				isMini = true;
				videoGroup.removeAllElements();
				this.removeEventListener("xChanged", xchange);
				this.removeEventListener("yChanged", xchange);
				log.info("________minimize________" + videoGroup.numElements);
				this.width = 200;
				this.height = 20;
				this.x = parent.x + 10;
				this.y = parent.height - 30;
//				var p:Point = new Point(10, FlexGlobals.topLevelApplication.height - 30);
				log.info("…………………………………………" + this.x + "---" + this.y);
				this.addEventListener("xChanged", xchange);
				this.addEventListener("yChanged", xchange);
				log.info("……………………end……………………");

			}
		]]>
	</fx:Script>
	<s:HGroup id="videoGroup"
			  width="100%"
			  height="100%"
			  gap="3">
	</s:HGroup>
</ailk_compts:Window>
