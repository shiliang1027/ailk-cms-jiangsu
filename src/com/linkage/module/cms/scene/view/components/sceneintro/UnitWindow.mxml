<?xml version="1.0" encoding="utf-8"?>
<ailk_compts:Window xmlns:fx="http://ns.adobe.com/mxml/2009"
                    xmlns:s="library://ns.adobe.com/flex/spark"
                    xmlns:mx="library://ns.adobe.com/flex/mx"
                    xmlns:ailk_compts="http://www.asiainfo-linkage.com.cn/flex/components"
                    close="unitWindow_closeHandler(event)"
                    minimizable="false"
                    dragable="true"
                    styleName="windowScene"
                    titleIcon="@Embed(source='../../../img/title_ico03.png')"
                    title="网元级劣化详情"
                    width="470"
                    height="260"
                    maximize="unit_maximizeHandler()"
                    restore="unitWindow_restoreHandler(event)"
                    resizable="true"
                    visible="false"
                    minWidth="200"
                    xmlns:parsley="http://www.spicefactory.org/parsley">

    <fx:Script>
        <![CDATA[
			import com.ailk.common.system.logging.ILogger;
			import com.ailk.common.system.logging.Log;
			import com.ailk.common.system.utils.ExcelUtil;
			import com.ailk.common.ui.components.requestserver.RequestServerUtil;
			import com.ailk.common.ui.components.window.standardwindow.event.WindowEvent;
			import com.linkage.module.cms.scene.event.SceneEvent;
			import com.linkage.module.cms.scene.view.components.KpiMoBadDetail;
			import com.linkage.module.cms.scene.view.components.SceneIntroPM;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.controls.advancedDataGridClasses.AdvancedDataGridColumn;
			import mx.managers.PopUpManager;

            private var log:ILogger = Log.getLoggerByClass(UnitWindow);

            [Inject("sceneIntroPM")]
            [Bindable]
            public var sceneIntroPM:SceneIntroPM;
            [MessageDispatcher]
            public var msgDispatcher:Function;
            private var unitWindowWidth:Number;
            private var unitWindowHeight:Number;
			[Inject("requestServerUtil")]
			public var requestServerUtil:RequestServerUtil;
            protected function unitWindow_closeHandler(event:WindowEvent):void
            {
                PopUpManager.removePopUp(this);
                this.visible = false;
            }

            protected function unit_maximizeHandler():void
            {
                unitWindowWidth = this.width;
                unitWindowHeight = this.height;
                this.width = this.parentApplication.width;
                this.height = this.parentApplication.height;
                closeButton.visible = false;
                closeButton.includeInLayout = false;

            }

            protected function unitWindow_restoreHandler(event:WindowEvent):void
            {
                // TODO Auto-generated method stub
                this.width = unitWindowWidth;
                this.height = unitWindowHeight;
                closeButton.visible = true;
                closeButton.includeInLayout = true;
            }

            protected function image2_clickHandler(event:MouseEvent):void
            {
                var headArr:Array = new Array;
                log.info("劣化网元详情导出开始");
                var data:Object = sceneIntroPM.sceneIntroDM.moBadList;

                if (data == null || data.length < 1)
                {
                    Alert.show("没有数据");
                    return;
                }

                var datas:ArrayCollection = new ArrayCollection();

                for each (var kpiInfo:Object in sceneIntroPM.sceneIntroDM.moBadList)
                {
                    datas.addAll(kpiInfo["values"] as ArrayCollection);
                }

                headArr.push({"id": "kpiName", "name": "指标名称"});

                for each (var col:AdvancedDataGridColumn in(moBadGroup.getElementAt(0) as KpiMoBadDetail).moDataGrid.columns)
                {
                    if (col.dataField != "" && col.headerText != "")
                        headArr.push({"id": col.dataField, "name": col.headerText});
                }

                log.info(datas);
                ExcelUtil.exportSimpleExcel("劣化网元详情列表", headArr, datas);
                log.info("劣化网元详情导出结束");
            }

            protected function button1_clickHandler(event:MouseEvent):void
            {
                log.info("多网元gis定位", event);
                moBadGroup.numElements;
                var tempItem:Object;
                var arr:ArrayCollection = new ArrayCollection();

                for (var i:int = 0; i < moBadGroup.numElements; i++)
                {
                    var kmbd:KpiMoBadDetail = moBadGroup.getElementAt(i) as KpiMoBadDetail;

                    for each (var item:Object in kmbd.moDataGrid.dataProvider)
                    {
                        if (item.selected)
                        {
                            tempItem = item;
                            tempItem.alarmLevel = item["warnLevel"];
                            arr.addItem(tempItem);
                        }
                    }
                }
                log.info(arr);

                if (arr.length > 0)
                {
                    var evt:SceneEvent = new SceneEvent(SceneEvent.MOIDS_COORDINATE_SEARCH);
                    evt.param = new Object;
                    evt.param = arr;
//                    msgDispatcher(evt);
					
					requestServerUtil.addRequest(evt);
                }
            }

            //全部gis定位
            protected function button2_clickHandler(event:MouseEvent):void
            {
                log.info("全部gis定位：" + sceneIntroPM.sceneIntroDM.moBadList.length);

                if (sceneIntroPM.sceneIntroDM.moBadList.length > 0)
                {
                    var tempItem:Object;

                    var evt:SceneEvent = new SceneEvent(SceneEvent.MOIDS_COORDINATE_SEARCH);
                    evt.param = new Object;
                    //					evt.param = sceneIntroPM.sceneIntroDM.moBadList;
                    var moBadList:ArrayCollection = new ArrayCollection;

                    for each (var obj:Object in sceneIntroPM.sceneIntroDM.moBadList)
                    {
                        if ((obj["values"] as ArrayCollection).length > 0)
                        {
                            for each (var item:Object in obj["values"])
                            {
                                tempItem = item;
                                tempItem.alarmLevel = item["warnLevel"];
                                moBadList.addItem(tempItem);
                            }

                        }
                    }
                    evt.param = moBadList;
                    log.info("全部gis定位：MOIDS_COORDINATE_SEARCH");
//                    msgDispatcher(evt);
					requestServerUtil.addRequest(evt);
                }
            }

            private function expandAllGridButton():void
            {
                var kmbd:KpiMoBadDetail;

                if (expBtn.label == "全部展开")
                {
                    expBtn.label = "全部关闭";

                    for (var i:int = 0; i < moBadGroup.numElements; i++)
                    {
                        kmbd = moBadGroup.getElementAt(i) as KpiMoBadDetail;
                        kmbd.height = 200;
                        kmbd.moDataGrid.dataProvider = kmbd.moDataList;
                        kmbd.moDataGrid.visible = true;
                        kmbd.moDataGrid.includeInLayout = true;
                    }
                }
                else
                {
                    expBtn.label = "全部展开";

                    for (i = 0; i < moBadGroup.numElements; i++)
                    {
                        kmbd = moBadGroup.getElementAt(i) as KpiMoBadDetail;
                        kmbd.height = 20;
                        kmbd.moDataGrid.visible = false;
                        kmbd.moDataGrid.includeInLayout = false;
                    }
                }
            }
        ]]>
    </fx:Script>
    <fx:Declarations>
        <!-- 将非可视元素（例如服务、值对象）放在此处 -->
        <parsley:Configure/>
    </fx:Declarations>
    <s:Scroller width="100%"
                height="100%"
                horizontalScrollPolicy="auto"
                verticalScrollPolicy="auto"
                styleName="sceneScroller">
        <s:VGroup id="moBadGroup"
                  width="100%"
                  height="100%"
                  gap="2">
        </s:VGroup>
    </s:Scroller>
    <mx:Image source="@Embed('../../../img/icon_export.png')"
              width="30"
              height="20"
              right="40"
              toolTip="导出"
              top="-23"
              buttonMode="true"
              click="image2_clickHandler(event)"/>
    <s:Button label="GIS定位"
              top="-23"
              right="83"
              click="button1_clickHandler(event)"/>
    <s:Button label="全部gis定位"
              top="-23"
              right="150"
              click="button2_clickHandler(event)"/>
    <s:Button id="expBtn"
              label="全部展开"
              top="-23"
              right="240"
              click="expandAllGridButton()"/>
</ailk_compts:Window>
