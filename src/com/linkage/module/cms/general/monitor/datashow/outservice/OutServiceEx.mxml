<?xml version="1.0" encoding="utf-8"?>
<datashow:DataWindow xmlns:fx="http://ns.adobe.com/mxml/2009"
					 xmlns:s="library://ns.adobe.com/flex/spark"
					 xmlns:mx="library://ns.adobe.com/flex/mx"
					 xmlns:datashow="com.linkage.module.cms.general.monitor.datashow.*"
					 width="100%"
					 height="100%">
	<datashow:layout>
		<s:BasicLayout/>
	</datashow:layout>
	<fx:Script>
		<![CDATA[
			import com.linkage.module.cms.components.loadmanager.LoadManager;
			import com.linkage.module.cms.general.monitor.datamanager.RemoteDataManager;
			import com.linkage.system.utils.StringUtils;

			import mx.collections.ArrayCollection;
			import mx.collections.ArrayList;
			import mx.containers.Canvas;
			import mx.controls.Alert;
			import mx.controls.DataGrid;
			import mx.controls.advancedDataGridClasses.AdvancedDataGridColumn;
			import mx.controls.advancedDataGridClasses.AdvancedDataGridColumnGroup;
			import mx.controls.dataGridClasses.DataGridColumn;
			import mx.events.ListEvent;
			import mx.logging.ILogger;
			import mx.logging.Log;

			import spark.components.Group;

			//日志
			public var log:ILogger = Log.getLogger("com.linkage.module.cms.general.monitor.datashow.outservice");

			//数据接口
			private var _remoteData:RemoteDataManager = null;

			//属地编号
			private var _cityId:String = null;

			//专业列表
			private var _specList:ArrayList = null;

			//定时调度
			private var t:Timer = new Timer(5000);

			public var outServiceList:ArrayCollection = new ArrayCollection([
				{title: "退服统计"
					, name: ["区域", "2G退服基站数", "2G退服小区数", "退服原因"]
					, group: [{name: "退服原因", arr: ["动环原因", "传输原因"]}]
					, column: ["city", "bts_2g", "cell_2g", "r_en", "r_line"]
					, datalist: [{city: "全省", bts_2g: "10", cell_2g: "2", r_en: "2", r_line: "2"}
						, {city: "南京", bts_2g: "8", cell_2g: "2", r_en: "2", r_line: "2"}
						, {city: "苏州", bts_2g: "2", cell_2g: "2", r_en: "2", r_line: "2"}]}
				]);

			public function get specList():ArrayList
			{
				return _specList;
			}

			public function set specList(value:ArrayList):void
			{
				_specList = value;
			}

			public function get cityId():String
			{
				return _cityId;
			}

			public function set cityId(value:String):void
			{
				_cityId = value;
			}

			public function get remoteData():RemoteDataManager
			{
				return _remoteData;
			}

			public function set remoteData(value:RemoteDataManager):void
			{
				_remoteData = value;
			}

			override public function initData():void
			{
				//显示等待界面
				//loadInfo = new LoadManager(this.info);
				//loadInfo.showLoading("正在加载数据，请稍候");

				//加载数据
				loadData();

				//定时调度
				t.addEventListener(TimerEvent.TIMER, loadData);
				t.start();
				//-------------------------------------历史回退修改------------------------------------
				this.parentApplication.add(t);
				//-------------------------------------历史回退修改------------------------------------
			}

			//显示页面，启动定时任务
			override public function showView():void
			{
				if(t != null && !t.running)
				{
					t.start();
					//-------------------------------------历史回退修改------------------------------------
					this.parentApplication.add(t);
						//-------------------------------------历史回退修改------------------------------------
				}
			}

			//隐藏页面，停止定时任务
			override public function hideView():void
			{
				if(t != null && t.running)
				{
					t.stop();
					//-------------------------------------历史回退修改------------------------------------
					this.parentApplication.remove(t);
						//-------------------------------------历史回退修改------------------------------------
				}
			}

			//加载数据
			public function loadData(event:TimerEvent = null):void
			{
				if(_cityId != null && !StringUtils.isEmpty(_cityId))
				{
					_remoteData.getCityAllOutService(_cityId, getResInfo, null, getResInfoErr);
				}
				else
				{
					_remoteData.getAllProvinceOutService(getResInfo, null, getResInfoErr);
				}
			}

			public function getResInfo(obj:Object):void
			{
				log.info("退服设备统计结果：" + obj);
				this.grid.visible = true;
				if(obj != null && obj[0] != null)
				{
					createTable(obj);
					obj = null;
				}
				//查询无数据
				else
				{
					log.info("退服设备统计：查询无数据");
					Alert.show("查询退服统计数据为空！");
						//createTable(outServiceList);
				}

				//loadInfo.hideLoading();
			}

			private function createTable(obj:Object):void
			{
				//生成列
				var workList:Object = obj[0];
				var index:int = 0;
				var flag:Boolean = false;
				var tmpGroup:Object = null;

				if(this.grid.groupedColumns == null || this.grid.groupedColumns.length != workList.name.length)
				{
					var columnArr:Array = new Array();
					for(var i:String in workList.name)
					{
						flag = false;

						//判断是否是分组标题
						for each(tmpGroup in workList.group)
						{
							if(workList.name[i] == tmpGroup.name)
							{
								flag = true;
								break;
							}
						}

						if(flag)
						{
							//跨列显示
							var mcol:AdvancedDataGridColumnGroup = new AdvancedDataGridColumnGroup();
							mcol.headerText = workList.name[i];

							var tmpColArr:Array = new Array();
							for each(var sName:String in tmpGroup.arr)
							{
								var tmpcol:AdvancedDataGridColumn = new AdvancedDataGridColumn();
								tmpcol.dataField = workList.column[index];
								tmpcol.headerText = sName;
								tmpcol.width = 150;
								tmpColArr = tmpColArr.concat(tmpcol);

								index++;
							}
							mcol.children = tmpColArr;

							columnArr = columnArr.concat(mcol);
						}
						else
						{
							//单列显示
							var scol:AdvancedDataGridColumn = new AdvancedDataGridColumn();
							scol.dataField = workList.column[index];
							scol.headerText = workList.name[i];
							if(workList.column[index] == "city")
							{
								scol.width = 80;
							}
							else
							{
								scol.width = 150;
							}

							columnArr = columnArr.concat(scol);
							index++;
						}
					}

					//由于有跨列存在，使用groupedColumns
					this.grid.groupedColumns = columnArr;
				}

				//数据
				this.grid.dataProvider = workList.datalist;
				this.grid.visible = true;

				tmpGroup = null;
				workList = null;
				obj = null;
			}

			public function getResInfoErr(obj:Object):void
			{
				log.info("退服设备统计：查询数据异常");
				Alert.show("查询退服统计数据异常！");
				//createTable(outServiceList);
				//loadInfo.hideLoading();
			}

			override public function hideDataGroup():void
			{
				this.showGroup.visible = false;
				this.showGroup.includeInLayout = false;
			}

			override public function showDataGroup():void
			{
				this.showGroup.visible = true;
				this.showGroup.includeInLayout = true;
			}

			override public function showGroupInfo():Group
			{
				return this.showGroup;
			}

			protected function grid_itemClickHandler(e:ListEvent):void
			{
				var cityName:String = e.target.dataProvider[e.rowIndex].city;

				//取当前点击的属地和网元类型
				if(e.columnIndex > 0)
				{
					general.reloadAlarm(cityName, "", "", "68,69,70,71");
				}
				else
				{
					if(e.rowIndex > 0)
					{
						if(this._cityId == "")
						{
							general.locationView(cityName, "2");
						}
						else
						{
							general.locationView(cityName, "3");
						}
					}
				}
			}
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<s:VGroup id="showGroup"
			  width="100%"
			  height="100%"
			  visible="false"
			  includeInLayout="false">
		<s:Scroller width="100%"
					height="100%"
					horizontalScrollPolicy="auto"
					verticalScrollPolicy="auto">
			<s:Group>
				<mx:AdvancedDataGrid id="grid"
									 height="100%"
									 sortableColumns="false"
									 horizontalScrollPolicy="off"
									 verticalScrollPolicy="auto"
									 itemClick="grid_itemClickHandler(event)"
									 visible="false">
				</mx:AdvancedDataGrid>
			</s:Group>
		</s:Scroller>
	</s:VGroup>
</datashow:DataWindow>
