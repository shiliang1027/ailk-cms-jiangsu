<?xml version="1.0" encoding="utf-8"?>
<datashow:DataGroup xmlns:fx="http://ns.adobe.com/mxml/2009"
                    xmlns:s="library://ns.adobe.com/flex/spark"
                    xmlns:mx="library://ns.adobe.com/flex/mx"
                    width="100%"
                    height="100%"
                    xmlns:components="com.fusioncharts.components.*"
                    xmlns:datashow="com.linkage.module.cms.general.monitor.datashow.*"
                    preinitialize="datagroup1_preinitializeHandler(event)">
    <datashow:layout>
        <s:BasicLayout/>
    </datashow:layout>
    <fx:Declarations>
        <!-- 将非可视元素（例如服务、值对象）放在此处 -->
    </fx:Declarations>
    <fx:Script>
        <![CDATA[
            import com.linkage.common.fusioncharts.FusionChartsLK;
            import com.linkage.common.fusioncharts.events.FusionChartsLKEvent;
            import com.linkage.module.cms.components.loadmanager.LoadManager;
            import com.linkage.module.cms.general.monitor.datamanager.RemoteDataManager;
            import com.linkage.system.utils.StringUtils;

            import mx.collections.ArrayCollection;
            import mx.collections.ArrayList;
            import mx.collections.IList;
            import mx.containers.Canvas;
            import mx.controls.Alert;
            import mx.controls.DataGrid;
            import mx.controls.advancedDataGridClasses.AdvancedDataGridColumn;
            import mx.controls.advancedDataGridClasses.AdvancedDataGridColumnGroup;
            import mx.controls.dataGridClasses.DataGridColumn;
            import mx.events.FlexEvent;
            import mx.logging.ILogger;
            import mx.logging.Log;
            import mx.rpc.events.FaultEvent;

            import spark.components.Group;
            import spark.components.supportClasses.ItemRenderer;

            //日志
            public var log:ILogger = Log.getLogger("com.linkage.module.cms.general.monitor.datashow.complaintStat");

            //数据接口
            private var _remoteData:RemoteDataManager = null;

            //属地编号
            private var _cityId:String = null;

            //属地名称
            private var _cityName:String = null;

            //专业列表
            private var _specList:ArrayList = null;

            //定时调度
            private var t:Timer = new Timer(300000);

            //图标背景
            private var fcBgColor:Object = null;

            public var workStateList:ArrayCollection = new ArrayCollection([
                                                                           {title: "集中投诉预警"
                                                                               , name: ["地市/投诉分类", "语音基本业务", "语音增值业务", "其他"]
                                                                               , group: [{name: "语音基本业务", arr: ["网络覆盖", "漫游障碍", "通话质量"]}, {name: "语音增值业务", arr: ["来电显示", "呼叫转移", "呼叫限制"]}, {name: "其他", arr: ["其他互联网业务"]}]
                                                                               , column: ["city", "a", "b", "c", "d", "e", "f", "g"]
                                                                               , datalist: [{city: "全省", a: "10", a_change: "2", b: "2", b_change: "0", c: "2", c_change: "0", d: "2", d_change: "0", e: "2", e_change: "0", f: "2", f_change: "0", g: "2", g_change: "0"}
                                                                                            , {city: "南京", a: "8", a_change: "2", b: "2", b_change: "0", c: "2", c_change: "0", d: "2", d_change: "0", e: "2", e_change: "0", f: "2", f_change: "0", g: "2", g_change: "0"}
                                                                                            , {city: "苏州", a: "2", a_change: "2", b_change: "0", c: "2", c_change: "0", d: "2", d_change: "0", e: "2", e_change: "0", f: "2", f_change: "0", g: "2", g_change: "0"}]}
                                                                           ]);

            // 图表数据
            private var chartData:ArrayCollection = new ArrayCollection([
                                                                        {label: '南京', value: '96'},
                                                                        {label: '泰州', value: '90'},
                                                                        {label: '苏州', value: '58'},
                                                                        {label: '常州', value: '50'},
                                                                        {label: '无锡', value: '28'}
                                                                        ]);

            // 图表参数
            private var chartParams:ArrayCollection = new ArrayCollection([
                                                                          {caption: "越限投诉增量"},
                                                                          {subcaption: "(点击查看详情)"},
                                                                          {numberPrefix: ""},
                                                                          {showValues: "0"}]);

            public function get cityName():String
            {
                return _cityName;
            }

            public function set cityName(value:String):void
            {
                _cityName = value;
            }

            public function get specList():ArrayList
            {
                return _specList;
            }

            public function set specList(value:ArrayList):void
            {
                _specList = value;
            }

            public function get cityId():String
            {
                return _cityId;
            }

            public function set cityId(value:String):void
            {
                _cityId = value;
            }

            public function get remoteData():RemoteDataManager
            {
                return _remoteData;
            }

            public function set remoteData(value:RemoteDataManager):void
            {
                _remoteData = value;
            }

            public function initData():void
            {
                //显示等待界面
                //loadInfo = new LoadManager(this.info);
                //loadInfo.showLoading("正在加载数据，请稍候");

                //加载数据
                loadData();

                //初始化图表

                loadChartData();

                //定时调度
                t.addEventListener(TimerEvent.TIMER, loadData);
                t.addEventListener(TimerEvent.TIMER, loadChartData);
                t.start();
//-------------------------------------历史回退修改------------------------------------
                this.parentApplication.add(t);
                //-------------------------------------历史回退修改------------------------------------
            }

            //显示页面，启动定时任务

            override public function showView():void
            {
                if (t != null && !t.running)
                {
                    t.start();
//-------------------------------------历史回退修改------------------------------------
                    this.parentApplication.add(t);
                        //-------------------------------------历史回退修改------------------------------------
                }
            }

            //隐藏页面，停止定时任务

            override public function hideView():void
            {
                if (t != null && t.running)
                {
                    t.stop();
//-------------------------------------历史回退修改------------------------------------
                    this.parentApplication.remove(t);
                        //-------------------------------------历史回退修改------------------------------------
                }
            }

            //改变显示类型
            private function changeType(type:int):void
            {
                if (type == 1)
                {
                    this.tableShow.visible = true;
                    this.tableShow.includeInLayout = true;
                    this.chartShow.visible = false;
                    this.chartShow.includeInLayout = false;
                }
                else
                {
//                    this.tableShow.visible = false;
//                    this.tableShow.includeInLayout = false;
//                    this.chartShow.visible = true;
//                    this.chartShow.includeInLayout = true;
                }
            }

            private function loadChartData(event:TimerEvent = null):void
            {
                if (_cityId != null && !StringUtils.isEmpty(_cityId))
                {
                    _remoteData.getCityComplaintDispatchGraphics(_cityId, _specList, initChart, null, initChartErr);
                }
                else
                {
                    _remoteData.getProvinceComplaintDispatchGraphics(_specList, initChart, null, initChartErr);
                }
            }

            private function initChart(obj:Object):void
            {
                if (obj != null)
                {
                    log.info("查询集中投诉预警图表数据成功！");

                    //生成图表
                    //给每列添加事件

                    for each (var tmp:Object in chartData)
                    {
                        if (cityId != "")
                        {
                            tmp.link = "S-" + _cityName + "," + tmp.label + "," + tmp.value;
                        }
                        else
                        {
                            tmp.link = "S-" + tmp.label + "," + tmp.value;
                        }
                    }

                    this.chartShow.removeAllElements();
                    //生成图表
                    var chart1:FusionChartsLK = new FusionChartsLK();
                    chart1.width = 300;
                    chart1.height = 220;
                    chart1.FCFolder = "/cms/flex-release/FusionCharts";
                    chart1.FCChartType = "Column3D";
                    chart1.addEventListener(FusionChartsLKEvent._F_C_CLICK_EVENT, onFCClickHandler);

                    //添加背景色

                    if (fcBgColor != null)
                    {
                        var p:Object = new Object();
                        p.bgColor = fcBgColor;
                        chartParams.addItem(p);
                    }
                    chart1.FCParams = chartParams;
                    chart1.FCData = chartData;

                    this.chartShow.addElement(chart1);
                }
                else
                {
                    log.info("查询集中投诉预警图表数据为空！");
                }
            }

            private function onFCClickHandler(event:FusionChartsLKEvent):void
            {
                showNextData(String(event.param));
            }

            //点击图表查看详情
            private function showNextData(linkParam:String):void
            {
                var arr:Array = linkParam.split("_");

//				if (arr != null)
//				{
//					if (arr.length == 3)
//					{
//						this.compChart.initData(arr[0],arr[1],arr[2]);
//						this.compChart.visible = true;
//						this.compChart.includeInLayout = true;
//					}
//					else
//					{
//						Alert.show("参数错误！");
//					}
//				}
            }


            private function initChartErr(obj:Object):void
            {
                log.info("查询集中投诉预警图表数据失败！");
            }

            //加载数据
            public function loadData(event:TimerEvent = null):void
            {
                if (_cityId != null && !StringUtils.isEmpty(_cityId))
                {
                    _remoteData.getCityComplaintDispatch(_cityId, _specList, getResInfo, null, getResInfoErr);
                }
                else
                {
                    _remoteData.getAllProvinceComplaintDispatch(_specList, getResInfo, null, getResInfoErr);
                }
            }

            public function getResInfo(obj:Object):void
            {
                log.info("查询集中投诉预警统计结果：" + obj['datas'].length);

                if (obj != null && obj['datas'] != null)
                {
                    createTable(obj);
                    obj = null;
                }
                //查询无数据

                else
                {
                    log.info("集中投诉预警统计：查询无数据");
                    //createTable(workStateList);
                    Alert.show("查询集中投诉预警数据为空！");
                }

                //loadInfo.hideLoading();
            }

            private function createTable(obj:Object):void
            {
                log.info(obj['datas']);
                var arrayc:ArrayCollection = new ArrayCollection;
                arrayc.addAll(obj['datas'] as IList);
                log.info(arrayc);
                grid.dataProvider = arrayc;
                return;
                //生成列

                var workList:Object = obj[0];
                var index:int = 0;
                var flag:Boolean = false;
                var tmpGroup:Object = null;

                if (this.grid.groupedColumns == null || this.grid.groupedColumns.length != workList.name.length)
                {
                    var columnArr:Array = new Array();

                    for (var i:String in workList.name)
                    {
                        flag = false;

                        //判断是否是分组标题

                        for each (tmpGroup in workList.group)
                        {
                            if (workList.name[i] == tmpGroup.name)
                            {
                                flag = true;
                                break;
                            }
                        }

                        if (flag)
                        {
                            //跨列显示
                            var mcol:AdvancedDataGridColumnGroup = new AdvancedDataGridColumnGroup();
                            mcol.headerText = workList.name[i];

                            var tmpColArr:Array = new Array();

                            for each (var sName:String in tmpGroup.arr)
                            {
                                var tmpcol:AdvancedDataGridColumn = new AdvancedDataGridColumn();
                                tmpcol.dataField = workList.column[index];
                                tmpcol.headerText = sName;

                                if (workList.column[index] == "city")
                                {
                                    tmpcol.width = 200;
                                }
                                else
                                {
                                    tmpcol.width = 150;
                                }

                                //增加列事件

                                if (workList.column[index] != "city")
                                {
                                    tmpcol.itemRenderer = new ClassFactory(CompColumnRenderer);
                                }

                                tmpColArr = tmpColArr.concat(tmpcol);

                                index++;
                            }
                            mcol.children = tmpColArr;

                            columnArr = columnArr.concat(mcol);
                        }
                        else
                        {
                            //单列显示
                            var scol:AdvancedDataGridColumn = new AdvancedDataGridColumn();
                            scol.dataField = workList.column[index];
                            scol.headerText = workList.name[i];
                            scol.width = 100;

                            if (workList.column[index] == "city")
                            {
                                scol.width = 120;
                            }
                            else
                            {
                                scol.width = 150;
                            }

                            //增加列事件

                            if (workList.column[index] != "city")
                            {
                                scol.itemRenderer = new ClassFactory(CompColumnRenderer);
                            }

                            columnArr = columnArr.concat(scol);
                            index++;
                        }
                    }


                    //由于有跨列存在，使用groupedColumns
                    this.grid.groupedColumns = columnArr;
                }

                //数据
                this.grid.dataProvider = workList.datalist;

                obj = null;
            }

            public function getResInfoErr(obj:Object):void
            {
                log.info("集中投诉预警统计：查询数据异常" + (obj as FaultEvent).fault.faultString);
                Alert.show("查询集中投诉预警数据异常！");
                //createTable(workStateList);
                //loadInfo.hideLoading();
            }

            protected function datagroup1_preinitializeHandler(event:FlexEvent):void
            {
                var sd:CSSStyleDeclaration = styleManager.getStyleDeclaration("fcBgColor");

                if (sd != null)
                {
                    fcBgColor = sd.getStyle("bgc");
                }
            }

            protected function typeButton_clickHandler(event:MouseEvent):void
            {
                var url:String = general.param["context"] + "warn/config/compliantthrd/CompliantThrdConfAction!queryCompliantThrdConfList.action";
                navigateToURL(new URLRequest(url));
            }

            override public function showToolBar():void
            {
                this.toolBar.visible = true;
                this.toolBar.includeInLayout = true;
            }

            override public function hideToolBar():void
            {
                this.toolBar.visible = false;
                this.toolBar.includeInLayout = false;
            }

            override public function showWindowTool():void
            {
                this.img1.visible = true;
                this.img1.includeInLayout = true;
            }

            override public function hideWindowTool():void
            {
                this.img1.visible = false;
                this.img1.includeInLayout = false;
            }
        ]]>
    </fx:Script>
    <s:VGroup id="info"
              width="100%"
              height="100%">
        <s:HGroup width="100%"
                  height="20"
                  id="toolBar">
            <s:HGroup width="50%"
                      height="20"
                      horizontalAlign="left">
                <s:Label text=""
                         visible="false"
                         id="showTitle">
                </s:Label>
            </s:HGroup>
            <s:HGroup width="50%"
                      height="20"
                      horizontalAlign="right">
                <mx:Image id="typeButton"
                          source="{config}"
                          buttonMode="true"
                          click="typeButton_clickHandler(event)"
                          toolTip="投诉预警配置">
                </mx:Image>
                <mx:Image id="img1"
                          source="{window}"
                          click="moveWindow(this.img, showTitle);"
                          buttonMode="true">
                </mx:Image>
                <mx:Image id="img"
                          source="{open}"
                          click="openWindow(this.img,this.showTitle);"
                          buttonMode="true">
                </mx:Image>
            </s:HGroup>
        </s:HGroup>
        <s:VGroup width="100%"
                  height="100%">
            <s:HGroup width="100%"
                      height="20"
                      visible="false"
                      includeInLayout="false"
                      horizontalAlign="right">
                <s:RadioButton label="列表"
                               value="1"
                               buttonMode="true"
                               selected="true"
                               click="changeType(1);"/>
                <s:RadioButton label="图表"
                               value="2"
                               buttonMode="true"
                               click="changeType(2);"/>
            </s:HGroup>
            <s:VGroup id="chartShow"
                      width="100%"
                      height="100%"
                      visible="false"
                      includeInLayout="false"
                      horizontalAlign="center">
            </s:VGroup>
            <s:Group id="tableShow"
                     width="100%"
                     height="100%"
                     visible="true"
                     includeInLayout="true">
                <s:Scroller width="100%"
                            height="100%"
                            horizontalScrollPolicy="auto"
                            verticalScrollPolicy="auto">
                    <s:Group>
                        <mx:AdvancedDataGrid id="grid"
                                             height="100%"
                                             sortableColumns="false"
                                             horizontalScrollPolicy="off"
                                             verticalScrollPolicy="auto">
                            <mx:columns>
                                <mx:AdvancedDataGridColumn headerText="主题"
                                                           dataField="sheettitle"/>
                                <mx:AdvancedDataGridColumn headerText="时间"
                                                           dataField="time"/>
                                <mx:AdvancedDataGridColumn headerText="属地"
                                                           dataField="city"/>
                                <mx:AdvancedDataGridColumn headerText="紧急程度"
                                                           dataField="severity"/>
                                <mx:AdvancedDataGridColumn headerText="操作人部门"
                                                           dataField="department"/>
                                <mx:AdvancedDataGridColumn headerText="投诉分类"
                                                           dataField="complainclass"/>
                            </mx:columns>
                        </mx:AdvancedDataGrid>
                    </s:Group>
                </s:Scroller>
            </s:Group>
        </s:VGroup>
    </s:VGroup>
</datashow:DataGroup>
