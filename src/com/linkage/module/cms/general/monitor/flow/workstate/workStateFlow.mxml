<?xml version="1.0" encoding="utf-8"?>
<flow:FlowGroup xmlns:fx="http://ns.adobe.com/mxml/2009"
				xmlns:s="library://ns.adobe.com/flex/spark"
				xmlns:mx="library://ns.adobe.com/flex/mx"
				width="100%"
				height="100%"
				xmlns:flow="com.linkage.module.cms.general.monitor.flow.*">
	<flow:layout>
		<s:BasicLayout/>
	</flow:layout>
	<fx:Script>
		<![CDATA[
			import com.linkage.module.cms.general.monitor.datamanager.RemoteDataManager;
			import com.linkage.system.utils.StringUtils;

			import mx.collections.ArrayCollection;
			import mx.collections.ArrayList;
			import mx.controls.Alert;
			import mx.controls.advancedDataGridClasses.AdvancedDataGridColumn;
			import mx.logging.ILogger;
			import mx.logging.Log;

			//日志
			public var log:ILogger = Log.getLogger("com.linkage.module.cms.general.monitor.datashow.workStateFlow");

			//数据接口
			private var _remoteData:RemoteDataManager = null;

			//属地编号
			private var _cityId:String = null;

			//专业列表
			private var _specList:ArrayList = null;

			//属地级别
			private var _cityLayer:String = null;

			//定时任务
			private var t:Timer = new Timer(300000);

			private var stateList:ArrayCollection = new ArrayCollection([
				{name: ["网元名称", "网元类型", "网元信息", "厂家", "工程名称", "覆盖范围", "是否影响业务", "工程开始时间", "工程结束时间", "现场随工人员", "预约账号"],
					column: ["a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k"],
					datalist: [{a: "南京BSC1", b: "BSC", c: "1111", d: "ZTE", e: "健康检查", f: "高淳", g: "是", h: "2011-05-14 12:00:00", i: "2011-05-14 20:00:00", j: "XXX", k: "XXX"},
						{a: "南京RNC1", b: "RNC", c: "2222", d: "华为", e: "更换IP接口", f: "下关", g: "否", h: "2011-05-14 12:00:00", i: "2011-05-14 20:00:00", j: "XXX", k: "XXX"}]
				}
				]);


			public function get cityLayer():String
			{
				return _cityLayer;
			}

			public function set cityLayer(value:String):void
			{
				_cityLayer = value;
			}

			public function get specList():ArrayList
			{
				return _specList;
			}

			public function set specList(value:ArrayList):void
			{
				_specList = value;
			}

			public function get cityId():String
			{
				return _cityId;
			}

			public function set cityId(value:String):void
			{
				_cityId = value;
			}

			public function get remoteData():RemoteDataManager
			{
				return _remoteData;
			}

			public function set remoteData(value:RemoteDataManager):void
			{
				_remoteData = value;
			}

			public function initData():void
			{
				//加载数据
				loadData();

				//启动定时任务
				t.addEventListener(TimerEvent.TIMER, loadData);
				t.start();
				//-------------------------------------历史回退修改------------------------------------
				this.parentApplication.add(t);
				//-------------------------------------历史回退修改------------------------------------
			}

			public function reload():void
			{
				//加载数据
				loadData();
			}

			//显示页面，启动定时任务
			override public function showView():void
			{
				if(t != null && !t.running)
				{
					t.start();
					//-------------------------------------历史回退修改------------------------------------
					this.parentApplication.add(t);
						//-------------------------------------历史回退修改------------------------------------
				}
			}

			//隐藏页面，停止定时任务
			override public function hideView():void
			{
				if(t != null && t.running)
				{
					t.stop();
					//-------------------------------------历史回退修改------------------------------------
					this.parentApplication.remove(t);
						//-------------------------------------历史回退修改------------------------------------
				}
			}

			//加载数据
			public function loadData(event:TimerEvent = null):void
			{
				//加载数据
				if(_cityId != null && !StringUtils.isEmpty(_cityId))
				{
					//_remoteData.getCityCurrProject(_cityId,_specList,getResInfo,null,getResInfoErr);
					_remoteData.getFilterProjInfo(_cityId, _cityLayer, getResInfo, null, getResInfoErr);
				}
				else
				{
					_remoteData.getAllProvinceCurrPorject(_specList, getResInfo, null, getResInfoErr);
				}
			}

			public function getResInfo(obj:Object):void
			{
				log.info("工程流水查询结果：" + obj);
				if(obj != null)
				{
					createTable(obj);
					obj = null;
				}
				//查询无数据
				else
				{
					log.info("工程流水：查询无数据");
						//createTable(stateList);
				}
			}

			private function createTable(obj:Object):void
			{
				var stateData:Object = obj[0];

				if(this.grid.columns == null || this.grid.columns.length != stateData.column.length)
				{
					var colArr:Array = new Array();
					for(var index:String in stateData.name)
					{
						var col:AdvancedDataGridColumn = new AdvancedDataGridColumn();
						col.dataField = stateData.column[index];
						col.headerText = stateData.name[index];
						colArr = colArr.concat(col);
					}
					this.grid.columns = colArr;
				}

				this.grid.dataProvider = stateData.datalist;

				stateData = null;
				obj = null;
			}

			public function getResInfoErr(obj:Object):void
			{
				log.info("工程流水：查询数据异常");
				//createTable(stateList);
			}
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<mx:AdvancedDataGrid sortableColumns="false"
						 id="grid"
						 width="100%"
						 height="100%">
	</mx:AdvancedDataGrid>
</flow:FlowGroup>
