<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:parsley="http://www.spicefactory.org/parsley" xmlns:ailk_compts="http://www.asiainfo-linkage.com.cn/flex/components">
	<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ properties of parent ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
	
	<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
	
	<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Style ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
	
	<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Script ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
	
	<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Declarations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
	<fx:Declarations>
		<parsley:Configure/>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ UI Components ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
	<fx:Script>
		<![CDATA[
			import com.ailk.common.system.logging.ILogger;
			import com.ailk.common.system.logging.Log;
			import com.linkage.module.cms.gsscene.view.components.common.domain.IUser;
			import com.linkage.module.cms.gsscene.view.components.common.event.SceneEvent;
			import com.linkage.module.cms.gsscene.view.components.common.util.GsSceneResource;
			import com.linkage.module.cms.gsscene.view.components.keyareas.components.KeyAreasGroupTip;
			import com.linkage.module.cms.gsscene.view.components.scenethumbnail.SceneThumbnailCompPM;
			import com.linkage.module.cms.gsscene.view.components.scenethumbnail.event.SceneThumbnailEvent;
			
			import mx.collections.ArrayCollection;
			import mx.core.IVisualElement;
			import mx.managers.PopUpManager;
			
			import spark.events.IndexChangeEvent;
			
			[Inject("user")]
			public var user:IUser;
			
//			[Inject("sceneThumbnailCompPM")]
//			public var stcPM:SceneThumbnailCompPM;
			[Inject("scenePM")]
			[Bindable]
			public var scenePM:ScenePM;
			[Inject("keyAreasDetail")]
			[Bindable]
			public var keyAreasDetail:KeyAreasDetailNew;
			
			[MessageDispatcher]
			public var dispatchMsg:Function;
			
			private var log:ILogger = Log.getLoggerByClass(KeyAreasCompNew);
			
			[Bindable]
			private var areaNums:int = 0;
			protected function image1_clickHandler():void
			{
				log.info("KeyAreasComp 显示keyAreasDetail");
//				log.info("[showGroup.numElements:" + showGroup.numElements + "]");
				PopUpManager.addPopUp(keyAreasDetail, this.parent.parent);
//				keyAreasDetail.visible = true;
				PopUpManager.centerPopUp(keyAreasDetail);//居中显示;
//				if(showGroup.numElements==0){
//					doAddAreas();
//				}
			}
			
//			private function doAddAreas():void
//			{
//				for each (var obj:Object in areasArr)
//				{
//					showGroup.addElement(obj as IVisualElement);
//				}
//			}
//			
//			public function closeWindowDetail():void
//			{
//				PopUpManager.removePopUp(keyAreasDetail);
//			}
//			private var areasArr:ArrayCollection=new ArrayCollection();
//			//生成缩略图组
//			[MessageHandler(selector = "THUMBNAIL_CREATEHANDLER")]
//			public function createThumbnailInit(e:SceneThumbnailEvent):void
//			{
//				if(areaNums>0){
//					log.info("KeyAreasComp-->keyAreasDetail----已经初始化过！");
//					return;
//				}else{
//					log.info("KeyAreasComp createThumbnailInit keyAreasDetail");
//				}
//				for each (var obj:Object in scenePM.sceneThumbnailDM.data)
//				{
//					var gt:KeyAreasGroupTip = new KeyAreasGroupTip();
//					gt.param = obj;
//					gt.source = user.context + obj.imgUrl;
//					gt.addEventListener(MouseEvent.CLICK, getSceneInfo);
//					gt.addEventListener(MouseEvent.CLICK, gt_clickHandler);
//					areasArr.addItem(gt);
//				}
//				areaNums = areasArr.length;
//				log.info("KeyAreasComp缩略图加载完成！！keyAreasDetail[showGroup.numElements:" + areaNums + "]");
//			}
//			
			private function gt_clickHandler(event:MouseEvent):void
			{
				log.info("keyAreasDetail：区域点击事件--->关闭keyAreasDetail-->closeWindowDetail()");
//				this.closeWindowDetail();
			}
			
			public function getSceneInfo(e:MouseEvent=null):void
			{
				
			}
			
		]]>
	</fx:Script>
	
	<mx:Image source="{GsSceneResource.keyAreas}"
			  mouseChildren="true"
			  useHandCursor="true"
			  buttonMode="true"
			  click="image1_clickHandler()"/>
	<s:Group width="20" height="20" right="-6" top="-6">
		<s:Rect radiusX="10" radiusY="10" width="100%" height="100%">
			<s:fill>
				<s:LinearGradient rotation="45">
					<s:GradientEntry color="0XF7F9F9"/> 
					<s:GradientEntry color="0XF2F6F7"/> 
					<s:GradientEntry color="0XD5E9EE"/> 
				</s:LinearGradient>
			</s:fill>
			<s:stroke>
				<s:LinearGradientStroke weight="1" >
					<s:GradientEntry color="0XA7B9C7"/>
				</s:LinearGradientStroke>
			</s:stroke>
		</s:Rect>
		<s:Label id="areaNum" text="{scenePM.sceneThumbnailDM.data.length}" verticalCenter="0" horizontalCenter="0" color="0x000000"/>
	</s:Group>
</s:Group>
