<?xml version="1.0" encoding="utf-8"?>
<viewnew:PopUpCompWindow xmlns:fx="http://ns.adobe.com/mxml/2009"
					xmlns:s="library://ns.adobe.com/flex/spark"
					xmlns:mx="library://ns.adobe.com/flex/mx"
					xmlns:viewnew="com.linkage.module.cms.gsscene.viewnew.*"
					titleIcon="@Embed(source='../../img/title_ico03.png')"
					creationComplete="popupcompwindow1_creationCompleteHandler()"
					minimizableBottom="10"
					minimizable="false"
					title="区域级劣化详情"
					width="470"
					height="260">
	<fx:Script>
		<![CDATA[
			import com.ailk.common.system.logging.ILogger;
			import com.ailk.common.system.logging.Log;
			import com.ailk.common.system.utils.ExcelUtil;
			import com.ailk.common.ui.components.requestserver.RequestServerUtil;
			import com.ailk.common.ui.components.window.standardwindow.event.WindowEvent;
			import com.linkage.module.cms.gsscene.view.components.common.domain.IUser;
			import com.linkage.module.cms.gsscene.view.components.sceneintro.components.KpiAreaBadDetail;
			import com.linkage.module.cms.gsscene.view.components.sceneintro.event.SceneIntroEvent;
			import com.linkage.module.cms.gsscene.viewnew.ScenePM;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.controls.advancedDataGridClasses.AdvancedDataGridColumn;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			[Inject("scenePM")]
			[Bindable]
			public var scenePM:ScenePM;
			[Inject("user")]
			[Bindable]
			public var user:IUser;
			[MessageDispatcher]
			public var dispatchMsg:Function;
			[Inject("requestServerUtil")]
			public var requestServerUtil:RequestServerUtil;
			
			private var log:ILogger = Log.getLoggerByClass(SceneIntroAreaWin);
			protected function image1_clickHandler(event:MouseEvent):void
			{
				log.debug("场景介绍：区域级劣化网元导出begin...");
				var areaDataStr:String = "";
				var data:ArrayCollection = scenePM.sceneIntroDM.areaBadList as ArrayCollection;
				var headArr:Array = new Array;
				
				if (data == null || data.length < 1)
				{
					Alert.show("没有数据");
					return;
				}
				
				headArr.push({"id": "kpiName", "name": "指标名称"});
				
				for each (var col:AdvancedDataGridColumn in(areaBadGroup.getElementAt(0) as KpiAreaBadDetail).areaDataGrid.columns)
				{
					if (col.dataField != "" && col.headerText != "")
						headArr.push({"id": col.dataField, "name": col.headerText});
				}
				
				ExcelUtil.exportSimpleExcel("区域网元详情列表", headArr, data);
				log.info("区域网元详情导出结束");
			}
			[MessageHandler(selector = "SCENEINTROAREA_SHOWDATA")]
			public function popupcompwindow1_creationCompleteHandler(event:SceneIntroEvent=null):void
			{
				areaBadGroup.removeAllElements();
				if (scenePM.sceneIntroDM.areaBadList.length > 0)
				{
					var kpiAr:Array = new Array();
					var kpiMap:Object = new Object();
					//处理数据
					for each (var obj:Object in scenePM.sceneIntroDM.areaBadList)
					{
						if (kpiMap.hasOwnProperty(obj["moTypeId"] + obj["kpiId"]))
						{
							(kpiMap[obj["moTypeId"] + obj["kpiId"]] as ArrayCollection).addItem(obj);
						}
						else
						{
							kpiMap[obj["moTypeId"] + obj["kpiId"]] = new ArrayCollection();
							(kpiMap[obj["moTypeId"] + obj["kpiId"]] as ArrayCollection).addItem(obj);
							kpiAr.push(obj["moTypeId"] + obj["kpiId"]);
						}
					}
					
					//放入数据
					var serialNum:int = 1;
					
					for each (var kpiName:String in kpiAr)
					{
						
						var kabd:KpiAreaBadDetail = new KpiAreaBadDetail();
						kabd.areaDataList = kpiMap[kpiName] as ArrayCollection;
						kabd.label = (kabd.areaDataList.getItemAt(0))["kpiName"] + "(" + kabd.areaDataList.length + ")";
						kabd.serialNum = String(serialNum++);
						kabd.addEventListener(SceneIntroEvent.CMS_SCENE_SCENEINTRO_AREAGETBADTREND, getBadTrend);
						log.info("KpiAreaBadDetail 高度：{0}", kabd.height);
						areaBadGroup.addElement(kabd);
					}
					
				}
			}
			public function getBadTrend(e:SceneIntroEvent):void
			{
				if (e.params.badType == "1")
				{
					e.params.sceneId = user.sceneId;
				}
				dispatchMsg(e);
			}
		]]>
	</fx:Script>
	<fx:Declarations>
	</fx:Declarations>
		<s:Scroller width="100%"
					height="100%"
					horizontalScrollPolicy="auto"
					verticalScrollPolicy="auto"
					styleName="sceneScroller">
			<s:VGroup id="areaBadGroup"
					  width="100%"
					  height="100%"
					  gap="5">
			</s:VGroup>
		</s:Scroller>
		<mx:Image source="@Embed('../../img/icon_export.png')"
				  width="30"
				  height="20"
				  right="40"
				  toolTip="导出"
				  top="-23"
				  buttonMode="true"
				  click="image1_clickHandler(event)"/>
</viewnew:PopUpCompWindow>
