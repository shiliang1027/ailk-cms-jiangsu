<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%" xmlns:components="com.linkage.module.cms.gsscene.view.components.*"
		  showEffect="{showE}" hideEffect="{hideE}" clipAndEnableScrolling="true">
	<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ properties of parent ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
	
	<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
	
	<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Style ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
	
	<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Script ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
	<fx:Script>
		<![CDATA[
			import com.ailk.common.ui.components.window.standardwindow.event.WindowEvent;
			
			import mx.managers.PopUpManager;
			[Embed(source = "../img/left_gray.png")]
			[Bindable]
			private var _left_gray:Class;
			
			[Embed(source = "../img/left_blue.png")]
			[Bindable]
			private var _left_blue:Class;
			
			[Embed(source = "../img/right_gray.png")]
			[Bindable]
			private var _right_gray:Class;
			
			[Embed(source = "../img/right_blue.png")]
			[Bindable]
			private var _right_blue:Class;
			
			protected function scenecentercomp_maximizeHandler(event:WindowEvent):void
			{
				// TODO Auto-generated method stub
				this.removeElementAt(0);
				event.window.width=parentApplication.width;
				event.window.height=parentApplication.height;
				PopUpManager.addPopUp(event.window,parentApplication as DisplayObject);
				PopUpManager.centerPopUp(event.window);
			}
			
			protected function scenecentercomp_restoreHandler(event:WindowEvent):void
			{
				// TODO Auto-generated method stub
				PopUpManager.removePopUp(event.window);
				event.window.percentWidth=100;
				event.window.percentHeight=100;
				this.addElementAt(event.window,0);
				
			}
			
		]]>
	</fx:Script>
	<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Declarations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
		
		<s:Animate id="hideE"
				   target="{this}"
				   duration="500">
			<s:motionPaths>
				<s:SimpleMotionPath property="percentWidth"
									valueFrom="100"
									valueTo="0"/>
				<!--<s:SimpleMotionPath property="left"
				valueFrom="0"
				valueTo="{this.width}"/>-->
			</s:motionPaths>
		</s:Animate>
		
		<s:Animate id="showE"
				   target="{this}"
				   duration="500"  effectEnd="Group(this.parent).setElementIndex(this,Group(this.parent).numElements-1);">
			<s:motionPaths>
				<s:SimpleMotionPath property="percentWidth"
									valueFrom="0"
									valueTo="100"/>
				<!--<s:SimpleMotionPath property="left"
				valueFrom="{this.width}"
				valueTo="0"/>-->
			</s:motionPaths>
		</s:Animate>
	</fx:Declarations>
	<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ UI Components ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
	<components:SceneCenterComp maximize="scenecentercomp_maximizeHandler(event)" restore="scenecentercomp_restoreHandler(event)"/>
	<mx:Image id="picImg" click="this.visible=false;"
			  name="left"
			  source="{_left_gray}"
			  toolTip=""
			  buttonMode="true"
			  mouseOver="this.picImg.name == 'left'? this.picImg.source = _left_blue : this.picImg.source = _right_blue;"
			  mouseOut="this.picImg.name == 'left' ? this.picImg.source = _left_gray : this.picImg.source = _right_gray;" bottom="0" right="0"/>
</s:Group>
