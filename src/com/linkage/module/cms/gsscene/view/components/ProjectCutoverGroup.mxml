<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:parsley="http://www.spicefactory.org/parsley"
		 width="100%"
		 height="100%">
    <fx:Declarations>
        <parsley:Configure/>
    </fx:Declarations>
	<!--工程割接模块，现在按需求加入到指标-->
    <fx:Script>
        <![CDATA[
			import com.ailk.common.system.logging.ILogger;
			import com.ailk.common.system.logging.Log;
			import com.linkage.module.cms.gsscene.view.components.common.domain.IUser;
			import com.linkage.module.cms.gsscene.view.components.common.event.SceneEvent;
			import com.linkage.module.cms.gsscene.view.components.projectcutover.ProjectCutoverStatDM;
			import com.linkage.module.cms.gsscene.view.components.projectcutover.ProjectCutoverStatPM;
			
			import mx.collections.ArrayCollection;
			import mx.events.ListEvent;
			import mx.managers.PopUpManager;
			
			import spark.components.Group;

            private var log:ILogger = Log.getLoggerByClass(ProjectCutoverStat);

            public var location:String;
            public var index:String;
            private var maxFlag:Boolean = false;

            [MessageDispatcher]
            public var msgDispatcher:Function;
			
			[Inject("user")]
			public var user:IUser;
			
            [Inject("projectCutoverStatPM")]
            [Bindable]
            public var projectCutoverStatPM:ProjectCutoverStatPM;

            [Inject("projectCutoverStatDM")]
            [Bindable]
            public var projectCutoverStatDM:ProjectCutoverStatDM;

            [MessageHandler(selector = "COMPONENT_REFRESH_DATA")]
            public function loadData(e:SceneEvent = null):void
            {
                log.info("开始加载工程割接数据。");
//				projectCutoverStatPM.loadDetailData(user);
            }
			protected function projectAlarmDG_itemClickHandler(event:ListEvent):void
			{
				var param:String = "";
				param += "alarmuniqueid=" + projectAlarmDG.selectedItem.alarmuniqueid;
				param += "&moId=" + projectAlarmDG.selectedItem.moId;
				param += "&daltime=" + projectAlarmDG.selectedItem.daltime;
				var url:String = "warn/sheet/sheetAction.action?" + param;
				log.info("跳转到投诉工单详情：" +　url);
				navigateToURL(new URLRequest(this.parentApplication.parameters.context + url));
				
			}
			protected function exportKPI():void
			{
				var param:String = user.getImportParams();
				var url:String = "gsscene/panels/panelsAction!exportComplaintSheet.action?" + param;
				log.info("跳转到工程割接导出：" +　url);
				navigateToURL(new URLRequest(this.parentApplication.parameters.context + url));
			}
			
		]]>

    </fx:Script>
    <fx:Declarations>
        <!-- 将非可视元素（例如服务、值对象）放在此处 -->
    </fx:Declarations>
	<s:Scroller	width="100%" height="100%" styleName="sceneScroller">
		<s:Group width="100%"  height="100%">
			<mx:AdvancedDataGrid id="projectAlarmDG" width="100%"
								 dataProvider="{projectCutoverStatDM.projectAlarmsList['datas']}"
								 height="100%" itemClick="projectAlarmDG_itemClickHandler(event)"
								 styleName="sceneDG"
								 verticalAlign="middle"
								 horizontalScrollPolicy="auto">
				<mx:columns>
					<mx:AdvancedDataGridColumn dataField="projectName"
											   headerText="工程名称"/>
					<mx:AdvancedDataGridColumn dataField="projectType"
											   headerText="工程类型"/>
					<mx:AdvancedDataGridColumn dataField="moName"
											   headerText="工程对象"/>
					<mx:AdvancedDataGridColumn dataField="beginTime"
											   headerText="开始时间"/>
					<mx:AdvancedDataGridColumn dataField="endTime"
											   headerText="结束时间"/>
					<mx:AdvancedDataGridColumn dataField="linkMan"
											   headerText="联系人"/>
					<mx:AdvancedDataGridColumn dataField="sheetno"
											   headerText="工单号"/>
				</mx:columns>
			</mx:AdvancedDataGrid>
	</s:Group>
</s:Scroller>
<mx:Image top="-28" right="35" source="@Embed('../../img/icon_export.png')"
		  buttonMode="true"
		  toolTip="导出"
		  click="exportKPI()"/>
</s:Group>