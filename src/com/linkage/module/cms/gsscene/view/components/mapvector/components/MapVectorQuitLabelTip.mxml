<?xml version="1.0" encoding="utf-8"?>
<s:BorderContainer xmlns:fx="http://ns.adobe.com/mxml/2009"
				   xmlns:s="library://ns.adobe.com/flex/spark"
				   xmlns:mx="library://ns.adobe.com/flex/mx"
				   backgroundAlpha="0"
				   borderAlpha="0"
				   width="{quitLabelWidth}"
				   height="{quitLabelHeight}">
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>

	<fx:Script>
		<![CDATA[
			
			import com.ailk.common.system.logging.ILogger;
			import com.ailk.common.system.logging.Log;
			
			
			private var log:ILogger = Log.getLoggerByClass(MapVectorQuitLabelTip);
			private var _data:Object;
			[Bindable]
			private var quitLabelWidth:Number = 55;
			[Bindable]
			private var quitLabelHeight:Number = 40;
			[Bindable]
			private var quitGroupHeight:Number = quitLabelHeight;
			
			private var _Offset_X:int = -15;
			private var _Offset_Y:int = -44;
			
			[Bindable]
			private var gsm:String = "";
			[Bindable]
			private var gsmShow:Boolean = true;
			[Bindable]
			private var td:String = "";
			[Bindable]
			private var tdShow:Boolean = true;
			[Bindable]
			private var lte:String = "";
			[Bindable]
			private var lteShow:Boolean = true;
			private var _loadMapShowKey:Object;//展示地图数据的样式，{eq:true,perf:false}
			
			public function set loadMapShowKey(value:Object):void
			{
				_loadMapShowKey = value;
			}
			private function doRefresh():void
			{
				log.info("MapVectorQuitLabelTip");
				log.info(_data);
				gsm = _data["gsm"];
				td = _data["td"];
				lte = _data["lte"];
				
				var rowCount:Number = 0;
				if(null!=_loadMapShowKey){
					gsmShow = _loadMapShowKey.gsm as Boolean;
					tdShow = _loadMapShowKey.td as Boolean;
					lteShow = _loadMapShowKey.lte as Boolean;
					if( gsmShow ) rowCount++;
					if( tdShow ) rowCount++;
					if( lteShow ) rowCount++;
					if(rowCount<3){
						quitGroupHeight = (quitLabelHeight - 4) * rowCount/3 + 4;
					}
				}
			}
			public function get Offset_X():int
			{
				return _Offset_X;
			}
			public function get Offset_Y():int
			{
				return _Offset_Y;
			}

			public function set data(value:Object):void
			{
				_data = value;
				doRefresh();
			}
			
		]]>
	</fx:Script>
	<s:VGroup  width="100%" height="100%" verticalAlign="bottom">
		<s:Group id="quitGroup" height="{quitGroupHeight}" width="100%">
			<s:Rect alpha="1" x="0" y="0" width="100%" height="100%" 
					radiusX="10" radiusY="10">
				<s:fill>
					<s:LinearGradient id="redLinearGradient">
						<s:GradientEntry color="0X366A9C" ratio="0"/> 
						<s:GradientEntry color="0X487BAE" ratio="0.5"/> 
						<s:GradientEntry color="0x5983AD" ratio="1"/> 
					</s:LinearGradient>
				</s:fill>
				<s:stroke>
					<s:LinearGradientStroke weight="1" >
						<s:GradientEntry color="0x111111" alpha="0.5"/>
					</s:LinearGradientStroke>
				</s:stroke>
			</s:Rect>
			<s:VGroup width="95%" height="100%" gap="2" verticalAlign="middle" horizontalCenter="5">
				<s:Label text="G:{gsm}" styleName="label" verticalCenter="0" id="gsmId" color="0xffffff" fontSize="10" visible="{gsmShow}" includeInLayout="{gsmShow}"/>
				<s:Label text="T:{td}" styleName="label" verticalCenter="0" id="tdId" color="0xffffff" fontSize="10" visible="{tdShow}" includeInLayout="{tdShow}"/>
				<s:Label text="L:{lte}" styleName="label" verticalCenter="0" id="lteId" color="0xffffff" fontSize="10" visible="{lteShow}" includeInLayout="{lteShow}"/>
			</s:VGroup>
		</s:Group>
	</s:VGroup>
</s:BorderContainer>
