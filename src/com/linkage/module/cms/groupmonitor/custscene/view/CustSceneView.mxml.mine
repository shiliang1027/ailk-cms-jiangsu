<?xml version="1.0" encoding="utf-8"?>
<s:HGroup xmlns:fx="http://ns.adobe.com/mxml/2009"
		  xmlns:s="library://ns.adobe.com/flex/spark"
		  xmlns:mx="library://ns.adobe.com/flex/mx"
		  width="100%"
		  height="100%"
		  left="2"
		  right="2"
		  gap="2"
		  xmlns:local="*"
		  xmlns:parsley="http://www.spicefactory.org/parsley"
		  xmlns:components="com.linkage.module.cms.groupmonitor.custscene.view.components.*"
		  creationComplete="hgroup1_creationCompleteHandler(event)"
		  xmlns:cms="http://www.ailk.com/2011/ailk"
		  xmlns:panel="com.linkage.system.component.panel.*"
		  xmlns:functionchain="com.linkage.module.cms.scenedaily.view.components.functionchain.*"
		  xmlns:ailk_chart="http://www.asiainfo-linkage.com.cn/flex/chart">
	<!--
		 ***************************************
		 This is Content
		 @author huawei (Ailk No.69088)
		 @version 1.0
		 @date 2012-10-11
		 @langversion 3.0
		 @playerversion Flash 11
		 @productversion Flex 4
		 @copyright Ailk NBS-Network Mgt. RD Dept.
		 ***************************************
	-->
	<fx:Declarations>
		
		<s:HTTPService >
			
		</s:HTTPService>
		
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
		<parsley:Configure/>

		<mx:ProgressBar id="progressBar"
						visible="false"
						width="200"
						labelPlacement="center"
						mode="manual"/>
		<!--省-->
		<local:ankang_a id="sx_ankang_a"/>
		<local:ankang_b id="sx_ankang_b"/>
		<local:baoji_a id="sx_baoji_a"/>
		<local:baoji_b id="sx_baoji_b"/>
		<local:hanzhong_a id="sx_hanzhong_a"/>
		<local:hanzhong_b id="sx_hanzhong_b"/>
		<local:shangluo_a id="sx_shangluo_a"/>
		<local:shangluo_b id="sx_shangluo_b"/>
		<local:shanxi_a id="sx_shanxi_a"/>
		<local:shanxi_b id="sx_shanxi_b"/>
		<local:tongchuan_a id="sx_tongchuan_a"/>
		<local:tongchuan_b id="sx_tongchuan_b"/>
		<local:weinan_a id="sx_weinan_a"/>
		<local:weinan_b id="sx_weinan_b"/>
		<local:xian_a id="sx_xian_a"/>
		<local:xian_b id="sx_xian_b"/>
		<local:xianyang_a id="sx_xianyang_a"/>
		<local:xianyang_b id="sx_xianyang_b"/>
		<local:yanan_a id="sx_yanan_a"/>
		<local:yanan_b id="sx_yanan_b"/>
		<local:yulin_a id="sx_yulin_a"/>
		<local:yulin_b id="sx_yulin_b"/>
		<!--xi an -->
		<local:xian_changan id="xian_changan_a"/>
		<local:xian_gaolin id="xian_gaoling_a"/>
		<local:xian_hu id="xian_hu_a"/>
		<local:xian_lantian id="xian_lantian_a"/>
		<local:xian_lintong id="xian_lintong_a"/>
		<local:xian_yanliang id="xian_yanliang_a"/>
		<local:xian_zhouzi id="xian_zhouzi_a"/>
		<local:xian_weiyang id="xian_weiyang_a"/>
		<local:xian_xinchen id="xian_xinchen_a"/>
		<local:xian_lianhu id="xian_lianhu_a"/>
		<local:xian_baqiao id="xian_baqiao_a"/>
		<local:xian_yanta id="xian_yanta_a"/>
		<local:xian_beilin id="xian_beilin_a"/>
		<local:xian_c id="c"/>
		<!--xian end-->
		<!--shangluo  begin-->
		<local:shangluo_c id="shangluo_c_a"/>
		<local:shangluo_danfeng id="shangluo_danfeng_a"/>
		<local:shanglou_luonan id="shangluo_luonan_a"/>
		<local:shangluo_shangnan id="shangluo_shangnan_a"/>
		<local:shangluo_shanyang id="shangluo_shanyang_a"/>
		<local:shangluo_zhengan id="shangluo_zhengan_a"/>
		<local:shangluo_zashui id="shangluo_zuoshui_a"/>
		<local:shangluo_shangluo id="shangluo_shangzhou_a"/>
		<!--shangluo end-->
		<!--tongchuan  begin-->
		<local:tongchuan_c id="tongchuan_c_a"/>
		<local:tongchuan_yijun id="tongchuan_yijun_a"/>
		<local:tongchuan_tongchuan id="tongchuan_xinqu_a"/>
		<!--tongchuan  end-->
		<!--weinan  begin-->
		<local:weinan_c id="weinan_c_a"/>
		<local:weinan_hancheng id="weinan_hancheng_a"/>
		<local:weinan_huayin id="weinan_huayin_a"/>
		<local:weinan_hua id="weinan_hua_a"/>
		<local:weinan_tongguan id="weinan_tongguan_a"/>
		<local:weinan_fuping id="weinan_fuping_a"/>
		<local:weinan_baishui id="weinan_baishui_a"/>
		<local:weinan_pucheng id="weinan_pucheng_a"/>
		<local:weian_dali id="weinan_dali_a"/>
		<local:weinan_chencheng id="weinan_chencheng_a"/>
		<local:weinan_heyang id="weinan_heyang_a"/>
		<local:weinan_weinan id="weinan_linwei_a"/>
		<!--weian  end-->
		<local:baoji_c id="baoji_c_a"/>
		<local:baoji_baojixian id="baoji_chencang_a"/>
		<local:baoji_fufeng id="baoji_fufeng_a"/>
		<local:baoji_fengxiang id="baoji_fengxiang_a"/>
		<local:baoji_qishan id="baoji_qishan_a"/>
		<local:baoji_mei id="baoji_mei_a"/>
		<local:baoji_qianyang id="baoji_qianyang_a"/>
		<local:baoji_long id="baoji_long_a"/>
		<local:baoji_taibai id="baoji_taibai_a"/>
		<local:baoji_feng id="baoji_feng_a"/>
		<local:baoji_lingyou id="baoji_linyou_a"/>
		<local:baoji_baoji id="baoji_jintai_a"/>

		<local:ankang_c id="ankang_c_a"/>
		<local:ankang_pingli id="ankang_pingli_a"/>
		<local:ankang_shiquan id="ankang_shiquan_a"/>
		<local:ankang_zhenping id="ankang_zhenping_a"/>
		<local:ankang_hanyin id="ankang_hanyin_a"/>
		<local:ankang_xunyang id="ankang_xunyang_a"/>
		<local:ankang_baihe id="ankang_baihe_a"/>
		<local:ankang_ningxia id="ankang_ningshan_a"/>
		<local:ankang_ziyang id="ankang_ziyang_a"/>
		<local:ankang_langao id="ankang_langao_a"/>
		<local:ankang_ankang id="ankang_hanbin_a"/>

		<local:hanzhong_c id="hanzhong_c_a"/>
		<local:hanzhong_chenggu id="hanzhong_chenggu_a"/>
		<local:hanzhong_fopin id="hanzhong_fopin_a"/>
		<local:hanzhong_liuba id="hanzhong_liuba_a"/>
		<local:hanzhong_lueyang id="hanzhong_lueyang_a"/>
		<local:hanzhong_mian id="hanzhong_mian_a"/>
		<local:hanzhong_nanzhen id="hanzhong_nanzhen_a"/>
		<local:hanzhong_yang id="hanzhong_yang_a"/>
		<local:hanzhong_zhenba id="hanzhong_zhenba_a"/>
		<local:hanzhong_xixiang id="hanzhong_xixiang_a"/>
		<local:hanzhong_ningqiang id="hanzhong_ningqiang_a"/>
		<local:hanzhong_hanzhong id="hanzhong_hantai_a"/>

		<local:yanan_c id="yanan_c_a"/>
		<local:yanan_huanglong id="yanan_huanglong_a"/>
		<local:yanan_luochuan id="yanan_luochuan_a"/>
		<local:yanan_ganquan id="yanan_ganquan_a"/>
		<local:yanan_zhidan id="yanan_zhidan_a"/>
		<local:yanan_zichang id="yanan_zichang_a"/>
		<local:yanan_yanchang id="yanan_yanchang_a"/>
		<local:yanan_huangling id="yanan_huangling_a"/>
		<local:yanan_yichuan id="yanan_yichuan_a"/>
		<local:yanan_fu id="yanan_fu_a"/>
		<local:yanan_wuqi id="yanan_wuqi_a"/>
		<local:yanan_ansai id="yanan_ansai_a"/>
		<local:yanan_yanchuan id="yanan_yanchuan_a"/>
		<local:yanan_yanan id="yanan_baota_a"/>

		<local:yulin_c id="yulin_c_a"/>
		<local:yulin_mizhi id="yulin_mizhi_a"/>
		<local:yulin_suide id="yulin_suide_a"/>
		<local:yulin_dingbian id="yulin_dingbian_a"/>
		<local:yulin_shenmu id="yulin_shenmu_a"/>
		<local:yulin_jingbian id="yulin_jingbian_a"/>
		<local:yulin_hengshan id="yulin_hengshan_a"/>
		<local:yulin_fugu id="yulin_fugu_a"/>
		<local:yulin_jia id="yulin_jia_a"/>
		<local:yulin_wubao id="yulin_wubao_a"/>
		<local:yulin_qingjian id="yulin_qingjian_a"/>
		<local:yulin_zizhou id="yulin_zizhou_a"/>
		<local:yulin_yulin id="yulin_yuyang_a"/>

		<local:xianyang_c id="xianyang_c_a"/>
		<local:xianyang_xingping id="xianyang_xingping_a"/>
		<local:xianyang_wugong id="xianyang_wugong_a"/>
		<local:xianyang_sanyuan id="xianyang_sanyuan_a"/>
		<local:xianyang_jingyang id="xianyang_jingyang_a"/>
		<local:xianyang_liquan id="xianyang_liquan_a"/>
		<local:xianyang_qian id="xianyang_qian_a"/>
		<local:xianyang_yongshou id="xianyang_yongshou_a"/>
		<local:xianyang_bin id="xianyang_bin_a"/>
		<local:xianyang_chunhua id="xianyang_chunhua_a"/>
		<local:xianyang_xunyi id="xianyang_xunyi_a"/>
		<local:xianyang_changwu id="xianyang_changwu_a"/>
		<local:xianyang_xianyang id="xianyang_qingdu_a"/>

		<mx:Glow id="glowProCust"
				 duration="1000"
				 alphaFrom="0"
				 alphaTo="1.0"
				 blurXFrom="50.0"
				 blurXTo="0.0"
				 blurYFrom="50.0"
				 blurYTo="0.0"
				 repeatCount="0"
				 color="0XFF0000"/>
		<mx:Glow id="glowProSpec"
				 duration="1000"
				 alphaFrom="0"
				 alphaTo="1.0"
				 blurXFrom="50.0"
				 blurXTo="0.0"
				 blurYFrom="50.0"
				 blurYTo="0.0"
				 repeatCount="0"
				 color="0XFF0000"/>

		<s:RadioButtonGroup id="typeRadioGroup"/>
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import com.adobe.protocols.dict.Database;
			import com.ailk.common.system.logging.ILogger;
			import com.ailk.common.system.logging.Log;
			import com.ailk.common.ui.chart.core.ChartParam;
			import com.ailk.common.ui.chart.core.PrettyChartType;
			import com.ailk.common.ui.chart.core.SerialParam;
			import com.linkage.module.cms.alarm.framework.module.server.source.CustCollection;
			import com.linkage.module.cms.components.dummymap.MapNode;
			import com.linkage.module.cms.components.dummymap.MapWork;
			import com.linkage.module.cms.components.extend.WindowExtEvent;
			import com.linkage.module.cms.groupmonitor.custscene.domain.common.IUser;
			import com.linkage.module.cms.groupmonitor.custscene.event.CustSceneEvent;
			import com.linkage.module.cms.groupmonitor.custscene.view.components.DistrictComp;
			import com.linkage.module.cms.groupmonitor.custscene.view.components.FileUpDownLoad;
			import com.linkage.module.cms.groupmonitor.custscene.view.components.ImageComp;
			import com.linkage.module.cms.scenedaily.event.mainchart.ChartCompEvent;
			import com.linkage.system.component.panel.events.WindowEvent;
			import com.supermap.web.iServerJava6R.supportClasses.UserInfo;
			
			import flash.net.navigateToURL;
			import flash.utils.setTimeout;
			
			import mx.collections.ArrayCollection;
			import mx.collections.IList;
			import mx.controls.Alert;
			import mx.controls.Image;
			import mx.events.CalendarLayoutChangeEvent;
			import mx.events.DragEvent;
			import mx.events.FlexEvent;
			import mx.events.ListEvent;
			import mx.graphics.ImageSnapshot;
			import mx.managers.PopUpManager;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.http.mxml.HTTPService;
			
			import spark.components.Label;
			import spark.components.TextArea;
			import spark.events.IndexChangeEvent;
			import spark.filters.ColorMatrixFilter;

			private var log:ILogger=Log.getLoggerByClass(CustSceneView);

//			[MessageDispatcher]
//			public var msgDispatcher:Function;

			[Bindable]
			[Embed(source="../../../../../../../assets/shiftBtn4_1.png")] 
			public var pic11:Class;
			[Bindable]
			[Embed(source="../../../../../../../assets/shiftBtn3_1.png")]
			public var pic21:Class;

			private var leftNormalWidth:Number;
			private var isLeftShow:Boolean=true;
			private var isRightShow:Boolean=true;

			//记录实际高度
			private var alarmWindowHeight:Number=0;
			private var topuWindowHeight:Number=0;
			private var runWindowHeight:Number=0;
			private var faultWindowHeight:Number=0;
			private var complintWindowHeight:Number=0;

			//大客户ID
			[Bindable]
			public var cust_id:String="";

			[Bindable]
			public var cust_name:String="";

			[Bindable]
			public var perfCustId:String="";
			
			[Bindable]
			public var exportCustId:String="";

			[Bindable]
			public var perfCustName:String="";
			
			[Bindable]
			public var totalComplaintCount:String = "";
			
			[Bindable]
			public var totalComplaintTime:String = "";
			
			[Bindable]
			public var totalFaultCount:String = "";
			
			[Bindable]
			public var totalFaultTime:String = "";
			
			public var speLineFaultAnalysisChartFinish:Boolean = false;
			
			public var speLineComplaintsAnalysisChartFinish:Boolean = false;

			//选中地市
			private var cId:String="";

			//使用客户X偏移量
			private var xu:int=0;

			//使用客户Y偏移量
			private var yu:int=0;

			private var x1:int=0;
			private var y1:int=0;
			private var x2:int=0;
			private var y2:int=0;
			private var x3:int=0;
			private var y3:int=0;
			private var x4:int=0;
			private var y4:int=0;
			private var graphic:Graphics=null;
			private var graphicProOverCity:Graphics=null;
			private var graphicUser:Graphics=null;
			private var graphicDis:Graphics=null;
			private var grapCityCust:Graphics=null;
			private var grapCitySpec:Graphics=null;
			private var defFirstFlag:Boolean=true;

			private var count:int=0;

			private var oldX:Number, oldY:Number;

			private var sxMapArray:Array=new Array;

			private var sxXaMapArray:Array=new Array;

			private var sxSlMap:Array=new Array();

			private var sxTCMapArray:Array=new Array;

			private var sxWeiNanMapArray:Array=new Array;

			private var sxBaojiMapArray:Array=new Array;
			private var sxAnKangMapArray:Array=new Array;

			private var sxHangZhongMap:Array=new Array();
			private var sxYananMap:Array=new Array();
			private var sxYulinMap:Array=new Array();
			private var sxXianyangMap:Array=new Array();

			private var httpService:HTTPService;
			private var httpXianService:HTTPService;
			private var httpShangluoService:HTTPService;
			private var httpTongchuanService:HTTPService;
			private var httpWeinanService:HTTPService;
			private var httpBaojiService:HTTPService;
			private var httpAnkangService:HTTPService;
			private var httpHanZhongService:HTTPService;
			private var httpYananService:HTTPService;
			private var httpYulinService:HTTPService;
			private var httpXianyangService:HTTPService;
			//大客户
			private var startImg:ImageComp=new ImageComp();

			//根据ID保存图片
			private var imgMap:Object=new Object();

			//大客户图片
			[Bindable]
			[Embed(source="com/linkage/module/cms/groupmonitor/custscene/img/cust.png")]
//			[Embed(source="./img/cust.png")]
			private var bigCustImg:Class;

			[Bindable]
			[Embed(source="com/linkage/module/cms/groupmonitor/custscene/img/cust.png")]
//			[Embed(source="./img/cust.png")]
			private var userCust:Class;

			[Bindable]
			private var picUrl:String="";

			private var filter:String="";
			
			[Bindable]
			public var myDP:ArrayCollection = new ArrayCollection(
					[ {type:"word", num:0},
					  {type:"pdf", num:1} ]);



			[Inject]
			[Bindable]
			public var pm:CustSceneViewPM;

			private var treeOpenItem:Object;

			[Inject]
			public var user:IUser;
			
			[MessageDispatcher]
			public var msgDispatcher:Function;

			private var cityMapArr:Array=new Array();

			private var custGroup:Group=null;

			private static const LEVEL1_COLOR_FILTER:ColorMatrixFilter=new ColorMatrixFilter([0, 0, 0, 0, 255].concat([1, 1, 1, 0, -370], [1, 1, 1, 0, -370], [0, 0, 0, 1, 0]));
			private static const LEVEL2_COLOR_FILTER:ColorMatrixFilter=new ColorMatrixFilter([0, 0, 0, 0, 255].concat([0.116, 0.116, 0.116, 0, 140], [1, 1, 1, 0, -370], [0, 0, 0, 1, 0]));
			private static const LEVEL3_COLOR_FILTER:ColorMatrixFilter=new ColorMatrixFilter([0, 0, 0, 0, 255].concat([0, 0, 0, 0, 255], [1, 1, 1, 0, -370], [0, 0, 0, 1, 0]));
			private static const LEVEL4_COLOR_FILTER:ColorMatrixFilter=new ColorMatrixFilter([0.248, 0.248, 0.248, 0, 65].concat([0.196, 0.196, 0.196, 0, 105], [0.039, 0.039, 0.039, 0, 225], [0, 0, 0, 1, 0]));

			//[Init]
			public function init():void
			{
				pm.params.mapInfo=user.user;
				log.info("pm.params.mapInfo");
				log.info(pm.params.mapInfo);
				log.info("begin to init");
				if (pm)
				{
					log.info("pm inject success");
					pm.loadBaseTree();
				}
			}

			protected function hgroup1_creationCompleteHandler(event:FlexEvent):void
			{
				//加载配置选择条件
				msgDispatcher(new CustSceneEvent(CustSceneEvent.LOAD_SELECT_CONDITION));

				//为树增加右键菜单
				navTree.contextMenu=new ContextMenu();
				navTree.contextMenu.hideBuiltInItems();
				var item:ContextMenuItem=new ContextMenuItem("配置图标");
				item.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, function(evt:ContextMenuEvent):void
					{
						if (evt.mouseTarget['parentDocument'].hasOwnProperty('data'))
						{
							var item:Object=evt.mouseTarget['parentDocument']['data'];
							log.info("item data");
							log.info(item);
							if (Boolean(String(item.@cust_id)))
							{
								cust_id=String(item.@cust_id);
								cust_name=String(item.@A);
								log.info("右击ID{0}", cust_id);
								picUrl=user.context + String(item.@path);
								showImg.source=picUrl;
								log.info("picUrl" + picUrl);
								picWindow.visible=true;
								treeOpenItem=item;
									//navTree.selectedItem=item;
							}
						}
					});
				navTree.contextMenu.customItems.push(item);

				log.info("hgroup1_creationCompleteHandler");
				// TODO Auto-generated method stub
				navTree.addEventListener(ListEvent.CHANGE, treeChang);
				//graphic=topuPicPanel.graphics;
				graphic=picLine.graphics;
				graphicProOverCity=picLineProOverCity.graphics;
				graphicUser=tupoGroup.graphics;
				graphicDis=districtGroup.graphics;
				grapCityCust=cityCustLine.graphics;
				grapCitySpec=citySpecLine.graphics;
				glowProCust.target=picLine;
				glowProCust.play();
				glowProSpec.target=picLineProOverCity;
				glowProSpec.play();

//				faultWindow.dispatchEvent(new WindowExtEvent(WindowExtEvent.MINIMIZE));
//				alarmWindow.dispatchEvent(new WindowExtEvent(WindowExtEvent.MINIMIZE));
//				runWindow.dispatchEvent(new WindowExtEvent(WindowExtEvent.MINIMIZE));
//				complintWindow.dispatchEvent(new WindowExtEvent(WindowExtEvent.MINIMIZE));

				//加载地图
				/******************* shanxi *********************/
				sxMapArray["0001_a"]=sx_xian_a;
				sxMapArray["0001_b"]=sx_xian_b;
				sxMapArray["0002_a"]=sx_baoji_a;
				sxMapArray["0002_b"]=sx_baoji_b;
				sxMapArray["0003_a"]=sx_xianyang_a;
				sxMapArray["0003_b"]=sx_xianyang_b;
				sxMapArray["0004_a"]=sx_ankang_a;
				sxMapArray["0004_b"]=sx_ankang_b;
				sxMapArray["0005_a"]=sx_hanzhong_a;
				sxMapArray["0005_b"]=sx_hanzhong_b;
				sxMapArray["0006_a"]=sx_shangluo_a;
				sxMapArray["0006_b"]=sx_shangluo_b;
				sxMapArray["0007_a"]=sx_tongchuan_a;
				sxMapArray["0007_b"]=sx_tongchuan_b;
				sxMapArray["0008_a"]=sx_weinan_a;
				sxMapArray["0008_b"]=sx_weinan_b;
				sxMapArray["0009_a"]=sx_yanan_a;
				sxMapArray["0009_b"]=sx_yanan_b;
				sxMapArray["0010_a"]=sx_yulin_a;
				sxMapArray["0010_b"]=sx_yulin_b;

				httpService=new HTTPService();
				httpService.method="get";
				httpService.resultFormat="e4x";
				httpService.addEventListener(ResultEvent.RESULT, httpService_resultHandler);
				httpService.url="xml/map_shanxi.xml";
				httpService.send();

				sxXaMapArray["c"]=c;
				sxXaMapArray["000101_a"]=xian_changan_a;
				sxXaMapArray["000102_a"]=xian_gaoling_a;
				sxXaMapArray["000103_a"]=xian_hu_a;
				sxXaMapArray["000104_a"]=xian_lantian_a;
				sxXaMapArray["000105_a"]=xian_lintong_a;
				sxXaMapArray["000106_a"]=xian_yanliang_a;
				sxXaMapArray["000107_a"]=xian_zhouzi_a;
				sxXaMapArray["000109_a"]=xian_weiyang_a;
				sxXaMapArray["000110_a"]=xian_xinchen_a;
				sxXaMapArray["000111_a"]=xian_lianhu_a;
				sxXaMapArray["000112_a"]=xian_baqiao_a;
				sxXaMapArray["000113_a"]=xian_yanta_a;
				sxXaMapArray["000114_a"]=xian_beilin_a;
				httpXianService=new HTTPService();
				httpXianService.method="get";
				httpXianService.resultFormat="e4x";
				httpXianService.addEventListener(ResultEvent.RESULT, httpServiceXian_resultHandler);
				httpXianService.url="xml/map_shanxi_xian.xml";
				httpXianService.send();

				sxSlMap["c"]=shangluo_c_a;
				sxSlMap["000601_a"]=shangluo_danfeng_a;
				sxSlMap["000602_a"]=shangluo_luonan_a;
				sxSlMap["000603_a"]=shangluo_shangnan_a;
				sxSlMap["000604_a"]=shangluo_shanyang_a;
				sxSlMap["000605_a"]=shangluo_zhengan_a;
				sxSlMap["000606_a"]=shangluo_zuoshui_a;
				sxSlMap["000607_a"]=shangluo_shangzhou_a;
				httpShangluoService=new HTTPService();
				httpShangluoService.method="get";
				httpShangluoService.resultFormat="e4x";
				httpShangluoService.addEventListener(ResultEvent.RESULT, httpServiceShangluo_resultHandler);
				httpShangluoService.url="xml/map_shanxi_shangluo.xml";
				httpShangluoService.send();

				sxTCMapArray["c"]=tongchuan_c_a;
				sxTCMapArray["000701_a"]=tongchuan_yijun_a;
				sxTCMapArray["000705_a"]=tongchuan_xinqu_a;
				httpTongchuanService=new HTTPService();
				httpTongchuanService.method="get";
				httpTongchuanService.resultFormat="e4x";
				httpTongchuanService.addEventListener(ResultEvent.RESULT, httpServiceTongchuan_resultHandler);
				httpTongchuanService.url="xml/map_shanxi_tongchuan.xml";
				httpTongchuanService.send();

				sxWeiNanMapArray["c"]=tongchuan_c_a;
				sxWeiNanMapArray["000801_a"]=weinan_hancheng_a;
				sxWeiNanMapArray["000802_a"]=weinan_huayin_a;
				sxWeiNanMapArray["000803_a"]=weinan_hua_a;
				sxWeiNanMapArray["000804_a"]=weinan_tongguan_a;
				sxWeiNanMapArray["000805_a"]=weinan_fuping_a;
				sxWeiNanMapArray["000806_a"]=weinan_baishui_a;
				sxWeiNanMapArray["000807_a"]=weinan_pucheng_a;
				sxWeiNanMapArray["000808_a"]=weinan_dali_a;
				sxWeiNanMapArray["000809_a"]=weinan_chencheng_a;
				sxWeiNanMapArray["000810_a"]=weinan_heyang_a;
				sxWeiNanMapArray["000811_a"]=weinan_linwei_a;
				httpWeinanService=new HTTPService();
				httpWeinanService.method="get";
				httpWeinanService.resultFormat="e4x";
				httpWeinanService.addEventListener(ResultEvent.RESULT, httpServiceWeinan_resultHandler);
				httpWeinanService.url="xml/map_shanxi_weinan.xml";
				httpWeinanService.send();

				sxBaojiMapArray["c"]=baoji_c_a;
				sxBaojiMapArray["000201_a"]=baoji_chencang_a;
				sxBaojiMapArray["000202_a"]=baoji_fufeng_a;
				sxBaojiMapArray["000203_a"]=baoji_fengxiang_a;
				sxBaojiMapArray["000204_a"]=baoji_qishan_a;
				sxBaojiMapArray["000205_a"]=baoji_mei_a;
				sxBaojiMapArray["000206_a"]=baoji_qianyang_a;
				sxBaojiMapArray["000207_a"]=baoji_long_a;
				sxBaojiMapArray["000208_a"]=baoji_taibai_a;
				sxBaojiMapArray["000209_a"]=baoji_feng_a;
				sxBaojiMapArray["000210_a"]=baoji_linyou_a;
				sxBaojiMapArray["000212_a"]=baoji_jintai_a;
				httpBaojiService=new HTTPService();
				httpBaojiService.method="get";
				httpBaojiService.resultFormat="e4x";
				httpBaojiService.addEventListener(ResultEvent.RESULT, httpServiceBaoji_resultHandler);
				httpBaojiService.url="xml/map_shanxi_baoji.xml";
				httpBaojiService.send();

				sxAnKangMapArray["c"]=ankang_c_a;
				sxAnKangMapArray["000401_a"]=ankang_pingli_a;
				sxAnKangMapArray["000402_a"]=ankang_shiquan_a;
				sxAnKangMapArray["000403_a"]=ankang_zhenping_a;
				sxAnKangMapArray["000404_a"]=ankang_hanyin_a;
				sxAnKangMapArray["000405_a"]=ankang_xunyang_a;
				sxAnKangMapArray["000406_a"]=ankang_baihe_a;
				sxAnKangMapArray["000407_a"]=ankang_ningshan_a;
				sxAnKangMapArray["000408_a"]=ankang_ziyang_a;
				sxAnKangMapArray["000409_a"]=ankang_langao_a;
				sxAnKangMapArray["000410_a"]=ankang_hanbin_a;

				httpAnkangService=new HTTPService();
				httpAnkangService.method="get";
				httpAnkangService.resultFormat="e4x";
				httpAnkangService.addEventListener(ResultEvent.RESULT, httpServiceAnkang_resultHandler);
				httpAnkangService.url="xml/map_shanxi_ankang.xml";
				httpAnkangService.send();

				sxHangZhongMap["c"]=hanzhong_c_a;
				sxHangZhongMap["000501_a"]=hanzhong_chenggu_a;
				sxHangZhongMap["000502_a"]=hanzhong_fopin_a;
				sxHangZhongMap["000503_a"]=hanzhong_liuba_a;
				sxHangZhongMap["000504_a"]=hanzhong_lueyang_a;
				sxHangZhongMap["000505_a"]=hanzhong_mian_a;
				sxHangZhongMap["000506_a"]=hanzhong_nanzhen_a;
				sxHangZhongMap["000507_a"]=hanzhong_yang_a;
				sxHangZhongMap["000508_a"]=hanzhong_zhenba_a;
				sxHangZhongMap["000509_a"]=hanzhong_xixiang_a;
				sxHangZhongMap["000510_a"]=hanzhong_ningqiang_a;
				sxHangZhongMap["000511_a"]=hanzhong_hantai_a;
				httpHanZhongService=new HTTPService();
				httpHanZhongService.method="get";
				httpHanZhongService.resultFormat="e4x";
				httpHanZhongService.addEventListener(ResultEvent.RESULT, httpServiceHanZhong_resultHandler);
				httpHanZhongService.url="xml/map_shanxi_hanzhong.xml";
				httpHanZhongService.send();

				sxYananMap["c"]=yanan_c_a;
				sxYananMap["000901_a"]=yanan_huanglong_a;
				sxYananMap["000902_a"]=yanan_luochuan_a;
				sxYananMap["000903_a"]=yanan_ganquan_a;
				sxYananMap["000904_a"]=yanan_zhidan_a;
				sxYananMap["000905_a"]=yanan_zichang_a;
				sxYananMap["000906_a"]=yanan_yanchang_a;
				sxYananMap["000907_a"]=yanan_huangling_a;
				sxYananMap["000908_a"]=yanan_yichuan_a;
				sxYananMap["000909_a"]=yanan_fu_a;
				sxYananMap["000910_a"]=yanan_wuqi_a;
				sxYananMap["000911_a"]=yanan_ansai_a;
				sxYananMap["000912_a"]=yanan_yanchuan_a;
				sxYananMap["000913_a"]=yanan_baota_a;
				httpYananService=new HTTPService();
				httpYananService.method="get";
				httpYananService.resultFormat="e4x";
				httpYananService.addEventListener(ResultEvent.RESULT, httpServiceYanan_resultHandler);
				httpYananService.url="xml/map_shanxi_yanan.xml";
				httpYananService.send();

				sxYulinMap["c"]=yulin_c_a;
				sxYulinMap["001001_a"]=yulin_mizhi_a;
				sxYulinMap["001002_a"]=yulin_suide_a;
				sxYulinMap["001003_a"]=yulin_dingbian_a;
				sxYulinMap["001004_a"]=yulin_shenmu_a;
				sxYulinMap["001005_a"]=yulin_jingbian_a;
				sxYulinMap["001006_a"]=yulin_hengshan_a;
				sxYulinMap["001007_a"]=yulin_fugu_a;
				sxYulinMap["001008_a"]=yulin_jia_a;
				sxYulinMap["001009_a"]=yulin_wubao_a;
				sxYulinMap["001010_a"]=yulin_qingjian_a;
				sxYulinMap["001011_a"]=yulin_zizhou_a;
				sxYulinMap["001012_a"]=yulin_yuyang_a;
				httpYulinService=new HTTPService();
				httpYulinService.method="get";
				httpYulinService.resultFormat="e4x";
				httpYulinService.addEventListener(ResultEvent.RESULT, httpServiceYulin_resultHandler);
				httpYulinService.url="xml/map_shanxi_yulin.xml";

				sxXianyangMap["c"]=xianyang_c_a;
				sxXianyangMap["000301_a"]=xianyang_xingping_a;
				sxXianyangMap["000302_a"]=xianyang_wugong_a;
				sxXianyangMap["000303_a"]=xianyang_sanyuan_a;
				sxXianyangMap["000304_a"]=xianyang_jingyang_a;
				sxXianyangMap["000305_a"]=xianyang_liquan_a;
				sxXianyangMap["000306_a"]=xianyang_qian_a;
				sxXianyangMap["000307_a"]=xianyang_yongshou_a;
				sxXianyangMap["000308_a"]=xianyang_bin_a;
				sxXianyangMap["000309_a"]=xianyang_chunhua_a;
				sxXianyangMap["000310_a"]=xianyang_xunyi_a;
				sxXianyangMap["000311_a"]=xianyang_changwu_a;
				sxXianyangMap["000312_a"]=xianyang_qingdu_a;
				httpXianyangService=new HTTPService();
				httpXianyangService.method="get";
				httpXianyangService.resultFormat="e4x";
				httpXianyangService.addEventListener(ResultEvent.RESULT, httpServiceXianyang_resultHandler);
				httpXianyangService.url="xml/map_shanxi_xianyang.xml";
				httpXianyangService.send();

				//加载空流水
				//var filter:String="groupcustomerid=\"null\"";
				//var filter:String="groupcustomerid=\"" + "\"";
				filter="";
//				alarmWindow.loadAlarm(filter);

				//隐藏WINDOW的还原图标
				alarmWindow.restoreButton.visible=false;
				alarmWindow.restoreButton.includeInLayout=false;
				topuWindow.restoreButton.visible=false;
				topuWindow.restoreButton.includeInLayout=false;

				faultWindow.restoreButton.visible=false;
				faultWindow.restoreButton.includeInLayout=false;

				complintWindow.restoreButton.visible=false;
				complintWindow.restoreButton.includeInLayout=false;

			}

			protected function httpService_resultHandler(event:ResultEvent):void
			{
				log.info("mapWork.xmlData:" + event.result);
				mapWork.mapObjArray=sxMapArray;
				mapWork.xmlData=event.result as XML;
				mapWork.showMap();
			}

			protected function httpServiceXian_resultHandler(event:ResultEvent):void
			{
				log.info("xianMao.xmlData:" + event.result);
				xianMap.mapObjArray=sxXaMapArray;
				xianMap.xmlData=event.result as XML;
				xianMap.showMap();
				cityMapArr["0001"]=xianMap;
			}

			protected function httpServiceShangluo_resultHandler(event:ResultEvent):void
			{
				log.info("shangluoMao.xmlData:" + event.result);
				shangLuoMap.mapObjArray=sxSlMap;
				shangLuoMap.xmlData=event.result as XML;
				shangLuoMap.showMap();
				cityMapArr["0006"]=shangLuoMap;
			}

			protected function httpServiceTongchuan_resultHandler(event:ResultEvent):void
			{
				log.info("TongchuanMap.xmlData:" + event.result);
				tongChuanMap.mapObjArray=sxTCMapArray;
				tongChuanMap.xmlData=event.result as XML;
				tongChuanMap.showMap();
				cityMapArr["0007"]=tongChuanMap;
			}

			protected function httpServiceWeinan_resultHandler(event:ResultEvent):void
			{
				log.info("weinanaMap.xmlData:" + event.result);
				weiNanMap.mapObjArray=sxWeiNanMapArray;
				weiNanMap.xmlData=event.result as XML;
				weiNanMap.showMap();
				cityMapArr["0008"]=weiNanMap;
			}

			protected function httpServiceBaoji_resultHandler(event:ResultEvent):void
			{
				log.info("baojiMap.xmlData:" + event.result);
				baoJiMap.mapObjArray=sxBaojiMapArray;
				baoJiMap.xmlData=event.result as XML;
				baoJiMap.showMap();
				cityMapArr["0002"]=baoJiMap;
			}

			protected function httpServiceAnkang_resultHandler(event:ResultEvent):void
			{
				log.info("ankangMap.xmlData:" + event.result);
				anKangMap.mapObjArray=sxAnKangMapArray;
				anKangMap.xmlData=event.result as XML;
				anKangMap.showMap();
				cityMapArr["0004"]=anKangMap;
			}

			protected function httpServiceHanZhong_resultHandler(event:ResultEvent):void
			{
				log.info("hanzhongMap.xmlData:" + event.result);
				hanZhongMap.mapObjArray=sxHangZhongMap;
				hanZhongMap.xmlData=event.result as XML;
				hanZhongMap.showMap();
				cityMapArr["0005"]=hanZhongMap;
			}

			protected function httpServiceYanan_resultHandler(event:ResultEvent):void
			{
				log.info("yananMap.xmlData:" + event.result);
				yanAnMap.mapObjArray=sxYananMap;
				yanAnMap.xmlData=event.result as XML;
				yanAnMap.showMap();
				cityMapArr["0009"]=yanAnMap;
			}

			protected function httpServiceYulin_resultHandler(event:ResultEvent):void
			{
				log.info("yulinMap.xmlData:" + event.result);
				yuLinMap.mapObjArray=sxYulinMap;
				yuLinMap.xmlData=event.result as XML;
				yuLinMap.showMap();
				cityMapArr["0010"]=yuLinMap;
			}

			protected function httpServiceXianyang_resultHandler(event:ResultEvent):void
			{
				log.info("xianyangMap.xmlData:" + event.result);
				xianYangMap.mapObjArray=sxXianyangMap;
				xianYangMap.xmlData=event.result as XML;
				xianYangMap.showMap();
				cityMapArr["0003"]=xianYangMap;
			}


			/**
			 *树选择处理
			 * @param event
			 *
			 */
			public function treeChang(event:ListEvent):void
			{
				log.info("4444]]]]]]]]]]]");
				var item:Object=event.target.selectedItem;
				treeOpenItem=item;
				log.info("name1" + String(item.@A) + "cp" + String(item.@cp));
				//点击客户树
				//var filter:String="groupcustomerid=\"null\"";
				filter="groupcustomerid=\"null\"";
				log.info("treeChang filter="+filter);
				tupoGroup.visible=false;
				districtGroup.visible=false;
				mapWork.visible=true;
				picLine.visible=true;
				picLineProOverCity.visible=true;

				if (Boolean(String(item.@cust_id)))
				{
					defFirstFlag=false;
					perfCustName=String(item.@A);
					perfCustId=String(item.@cust_id);
					cust_id=String(item.@cust_id);
					cust_name=String(item.@A);
					picUrl=user.context + String(item.@path);
					showImg.source=picUrl;
//					picWindow.visible=true;
					topuWindow.title="陕西移动集团大客户场景监控图(" + cust_name + ")";
					funPerfComp.showFirst=true;
					funPerfComp.big="1";
					picWindow.visible=false
					//加载完再加载所有客户的流水
					filter="groupcustomerid=\"" + String(item.@cust_id) + "\"";
					log.info("treeChang if filter="+filter);
					alarmWindow.loadAlarm(filter);

					//加载大客户对应的使用客户为加载流水提供
					var alarmEvt:CustSceneEvent=new CustSceneEvent(CustSceneEvent.LOADA_LARM_CUSTS_SQL);
					alarmEvt.param=new Object();
					alarmEvt.param.cust_id=String(item.@cust_id);
					msgDispatcher(alarmEvt);

					log.info("treeChang load big cust data");
					var evtPanel:CustSceneEvent=new CustSceneEvent(CustSceneEvent.LOAD_PANEL_DATA_BY_CUSTID);
					var paramPanel:Object=new Object();
					paramPanel.cust_id=cust_id;
					evtPanel.param=paramPanel;
					msgDispatcher(evtPanel);


					proSaveList.removeAll();
					proSaveList.refresh();
					proUserCustList.removeAll();
					proUserCustList.refresh();
					proForSpecList=new Object;
					if (pm.columnarGroup)
					{
						try
						{
							mapWork.removeElement(pm.columnarGroup);
						}
						catch (e:Error)
						{
						}
					}
					graphic.clear();
					picLine.removeAllElements();
					graphicProOverCity.clear();
					var evt1:CustSceneEvent=new CustSceneEvent(CustSceneEvent.LOAS_USER_CUST_DATA);
					var param1:Object=new Object();
					param1.custName=cust_name;
					param1.cust_id=cust_id;
					evt1.param=param1;
					msgDispatcher(evt1);

				 	var evt2:CustSceneEvent=new CustSceneEvent(CustSceneEvent.LOAD_OTHER_DATA_BYCUSTBYID);
					var param2:Object=new Object();
					param2.cust_id=cust_id;
					evt2.param=param2;
					msgDispatcher(evt2);

					//				var evt3:CustSceneEvent=new CustSceneEvent(CustSceneEvent.LOAD_SERVER_TYPE_BY_CUSTID);
					//				var param3:Object=new Object();
					//				param3.cust_id=cust_id;
					//				evt3.param=param3;
					//				msgDispatcher(evt3);

					var evt3:CustSceneEvent=new CustSceneEvent(CustSceneEvent.LOAD_USER_CUST_BY_BIGCUST);
					var param3:Object=new Object();
					param3.custNo=cust_id;
					param3.type=1;
					evt3.param=param3;
					msgDispatcher(evt3); 
					
					
					
//					var evt4:CustSceneEvent=new CustSceneEvent(CustSceneEvent.LOAD_SPE_LINE_FAULT_ANALYSIS);
//					var param4:Object=new Object();
//					param4.cust_no=cust_id;
//					param4.cust_name=cust_name;
//					param4.startTime = exportStartTime.text;
//					param4.endTime = exportEndTime.text;
//					evt4.param=param4;
//					msgDispatcher(evt4);
//					
//					var evt5:CustSceneEvent=new CustSceneEvent(CustSceneEvent.LOAD_SPE_LINE_COMP_ANALYSIS);
//					var param5:Object=new Object();
//					param5.cust_no=cust_id;
//					param5.cust_name=cust_name;
//					param5.startTime = exportStartTime.text;
//					param5.endTime = exportEndTime.text;
//					evt5.param=param5;
//					msgDispatcher(evt5);

					if (pm.columnarGroup)
					{
						try
						{
							mapWork.removeElement(pm.columnarGroup);
						}
						catch (e:Error)
						{
						}
					}
					graphic.clear();
					picLine.removeAllElements();
//					if (custRealPerfComp)
//					{
//						custRealPerfComp.clear();
//					}
					funPerfComp.clear();
					visPanel();
				}
				//点击分页或小图标
				else if (Boolean(String(item.@servClick)))
				{
					
					topuWindow.title="陕西移动集团大客户场景监控图";
					//cust_id=String(item.@cust_id);
					filter="groupcustomerid=\"null\"";
					log.info("treeChang else if filter="+filter);
					flagTag=true;
					var evtCust:CustSceneEvent=new CustSceneEvent(CustSceneEvent.LOAD_PAGE_TREE_DATA);
					var paramCust:Object=new Object();
					paramCust.name=String(item.@B);
					paramCust.cp=String(item.@cp);
					paramCust.type=typeRadioGroup.selection.value.toString();
					evtCust.param=paramCust;
					msgDispatcher(evtCust);
					//topuPicPanel.removeAllElements();
					//mapWork.removeAllElements();
					if (pm.columnarGroup)
					{
						try
						{
							mapWork.removeElement(pm.columnarGroup);
						}
						catch (e:Error)
						{
						}
					}
					graphic.clear();
					picLine.removeAllElements();
					pm.dm.complaintDispatch.removeAll();
					pm.dm.complaintDispatch.refresh();
					pm.dm.faultDispatchList.removeAll();
					pm.dm.faultDispatchList.refresh();
					//runMon.clear();
//					if (custRealPerfComp)
//					{
//						custRealPerfComp.clear();
//					}
					visPanel();
					funPerfComp.clear();
					alarmWindow.loadAlarm(filter);
				}
				else
				{
					topuWindow.title="陕西移动集团大客户场景监控图";
					filter="groupcustomerid=\"null\"";
					log.info("treeChang else filter="+filter);
					log.info("other condition");
					//topuPicPanel.removeAllElements();
					//mapWork.removeAllElements();
					if (pm.columnarGroup)
					{
						try
						{
							mapWork.removeElement(pm.columnarGroup);
						}
						catch (e:Error)
						{
						}
					}
					graphic.clear();
					picLine.removeAllElements();
					pm.dm.complaintDispatch.removeAll();
					pm.dm.complaintDispatch.refresh();
					pm.dm.faultDispatchList.removeAll();
					pm.dm.faultDispatchList.refresh();
					//runMon.clear();
//					if (custRealPerfComp)
//					{
//						custRealPerfComp.clear();
//					}
					funPerfComp.clear();
					visPanel();
					alarmWindow.loadAlarm(filter);

				}
				item.@servClick="";
			}

			[MessageHandler(selector="loadPageTreeDataComp")]
			public function treeItemOpenHandler(event:CustSceneEvent):void
			{
				log.info("33333]]]]]]]]]]]");
				var result:XML=new XML(event.param.child);
				log.info("[treeItemOpenHandler]");
				log.info(result);
				treeOpenItem.@cp=result.@cp;
				treeOpenItem.@tp=result.@tp;
				(treeOpenItem as XML).setChildren(result.children());
				log.info("treeOpenItem" + treeOpenItem);
				navTree.expandItem(treeOpenItem, false);
				expandParent(treeOpenItem as XML);
				navTree.selectedItem=treeOpenItem;
				var index:Number=navTree.getItemIndex(treeOpenItem);
				navTree.verticalScrollPosition=index;
				log.info("creat tree end");
				var exFlag:Boolean=false;
				var item:Object;
				if (!flagTag)
				{
					forEachTree(treeOpenItem as XML, function(node:XML):void
						{
							if (Boolean(String(node.@cust_id)))
							{
								log.info("cust_id" + String(node.@cust_id) + "cust_no" + String(tempData.cust_no));
								if (String(node.@cust_id) == String(tempData.cust_no))
								{
									exFlag=true;
									item=node;
								}
							}
						});
					if (!exFlag)
					{
						item=<N A={tempData.cust_name} cust_id={tempData.cust_no} path={tempData.path}></N>;
						(treeOpenItem as XML).appendChild(item);
					}
					log.info("treeOpenItem" + item);
					navTree.expandItem(item, false);
					navTree.selectedItem=item;
					var index2:Number=navTree.getItemIndex(item);
					navTree.verticalScrollPosition=index2;
					log.info("treeOpenItem  end");

					log.info("name" + String(item.@A) + "cp" + String(item.@cp));
					//点击客户树
					filter="groupcustomerid=\"null\"";
					tupoGroup.visible=false;
					districtGroup.visible=false;
					mapWork.visible=true;
					picLine.visible=true;
					picLineProOverCity.visible=true;


					defFirstFlag=false;
					perfCustName=String(item.@A);
					perfCustId=String(item.@cust_id);
					cust_id=String(item.@cust_id);
					cust_name=String(item.@A);
					topuWindow.title="陕西移动集团大客户场景监控图(" + cust_name + ")";
					picUrl=user.context + String(item.@path);
					showImg.source=picUrl;
					funPerfComp.showFirst=true;
					funPerfComp.big="1";
					picWindow.visible=false
					//加载完再加载所有客户的流水
					filter="groupcustomerid=\"" + String(item.@cust_id) + "\"";
					alarmWindow.loadAlarm(filter);
					var evtPanel:CustSceneEvent=new CustSceneEvent(CustSceneEvent.LOAD_PANEL_DATA_BY_CUSTID);
					var paramPanel:Object=new Object();
					paramPanel.cust_id=cust_id;
					evtPanel.param=paramPanel;
					msgDispatcher(evtPanel);

					proSaveList.removeAll();
					proSaveList.refresh();
					proUserCustList.removeAll();
					proUserCustList.refresh();
					proForSpecList=new Object;
					if (pm.columnarGroup)
					{
						try
						{
							mapWork.removeElement(pm.columnarGroup);
						}
						catch (e:Error)
						{
						}
					}
					graphic.clear();
					picLine.removeAllElements();
					graphicProOverCity.clear();
					var evt1:CustSceneEvent=new CustSceneEvent(CustSceneEvent.LOAS_USER_CUST_DATA);
					var param1:Object=new Object();
					param1.custName=cust_name;
					param1.cust_id=cust_id;
					evt1.param=param1;
					msgDispatcher(evt1);

					var evt2:CustSceneEvent=new CustSceneEvent(CustSceneEvent.LOAD_OTHER_DATA_BYCUSTBYID);
					var param2:Object=new Object();
					param2.cust_id=cust_id;
					evt2.param=param2;
					msgDispatcher(evt2);

					var evt3:CustSceneEvent=new CustSceneEvent(CustSceneEvent.LOAD_USER_CUST_BY_BIGCUST);
					var param3:Object=new Object();
					param3.custNo=cust_id;
					param3.type=1;
					evt3.param=param3;
					msgDispatcher(evt3);

					if (pm.columnarGroup)
					{
						try
						{
							mapWork.removeElement(pm.columnarGroup);
						}
						catch (e:Error)
						{
						}
					}
					graphic.clear();
					picLine.removeAllElements();
					funPerfComp.clear();
					visPanel();

					selDataGird.visible=false;
					selDataGird.includeInLayout=false;
				}
			}

			/**
			 *层层展开父节点
			 * @param item
			 *
			 */
			private function expandParent(item:XML):void
			{
				if (item && !navTree.isItemOpen(item))
				{
					navTree.expandItem(item, true);
					expandParent(item.parent());
				}
			}

			private var bigCust:ImageComp=null;
			private var spceSaveList:ArrayCollection=new ArrayCollection();
			private var specLineList:ArrayCollection=new ArrayCollection();

			[MessageHandler(selector="loadBigCustDataComp")]
			public function drowTopnPic(event:CustSceneEvent):void
			{
				log.info("第三");
				var temp:Object=new Object;
				spceSaveList.removeAll();
				spceSaveList.refresh();
				specLineList.removeAll();
				specLineList.refresh();
				var cusnos:String="";
				log.info("[drowTopnPic in] pm.dm.topuData length" + pm.dm.topuData.length);
				count=0;
				if (custGroup)
				{
					try
					{
						tupoGroup.removeElement(custGroup);
					}
					catch (e:Error)
					{
						log.error(e.getStackTrace());
					}
				}
				graphicUser.clear();

				custGroup=new Group();
				tupoGroup.addElement(custGroup);

				var endImg:ImageComp=null;
				//var filter:String="";
				filter="";
				var cityIdBig:String;
				var cityId:String;
				var mapNode:MapNode;
				var x:Number;
				var y:Number;
				var lo:Object=new Object();
				for each (var data:Object in pm.dm.topuData)
				{
					temp=new Object();
//					log.info("big" + data.isbig);
//					//先画大客户 要求后台把大客户拼在数据集第一位方便画线
					if ("1" == data.isbig)
					{
						bigCust=new ImageComp();
						bigCust.cuName="使用客户:" + data.custname;
						bigCust.id=data.custid + "_" + data.custname
						bigCust.col=data.color;
						bigCust.w=40;
						bigCust.h=50;
						bigCust.width=40;
						bigCust.height=50;
						bigCust.url=picUrl;
						bigCust.show=true;
						if (data.x && data.y && data.x != "" && data.y != "")
						{
							bigCust.x=data.x;
							bigCust.y=data.y;
						}
						else
						{
							bigCust.x=tupoGroup.width / 2;
							bigCust.y=tupoGroup.height / 2;
						}

						bigCust.addEventListener(MouseEvent.MOUSE_DOWN, function(e:MouseEvent):void
							{
								(e.currentTarget as ImageComp).startDrag();
							});

						bigCust.addEventListener(MouseEvent.MOUSE_UP, function(e:MouseEvent):void
							{
								(e.currentTarget as ImageComp).stopDrag();
								graphicUser.clear();
								for each (var spe:Object in specLineList)
								{
									drawLine3(bigCust, spe.spec as ImageComp);
								}
								for each (var t:Object in spceSaveList)
								{
									if (t.item_type == "2")
									{
										var id:String=(e.currentTarget as ImageComp).id.split("_")[0];
										if (id == t.item_name)
										{
											t.x=(e.currentTarget as ImageComp).x;
											t.y=(e.currentTarget as ImageComp).y;
											log.info("for each t.x="+t.x+"   t.y="+t.y);
										}
										
									}
									
								}
							});

						temp.city_id=areaId;
						temp.cust_no=cust_id;
						temp.item_name=data.custid;
						temp.x=bigCust.x;
						temp.y=bigCust.y;
						temp.item_type="2";
						spceSaveList.addItem(temp);
						log.info("111 bigCust.x="+bigCust.x+"   bigCust.y="+bigCust.y);

						bigCust.contextMenu=new ContextMenu();
						bigCust.contextMenu.hideBuiltInItems();
						var item:ContextMenuItem=new ContextMenuItem("修改客户名字");
						item.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, function(evt:ContextMenuEvent):void
							{
								modifyCustNamePanl.visible=true;
								custNameInput.text=String(evt.contextMenuOwner['id']).split("_")[1];
								modifyId=String(evt.contextMenuOwner['id']).split("_")[0];
								type="1";
							});
						bigCust.contextMenu.customItems.push(item);

						var itemCol:ContextMenuItem=new ContextMenuItem("修改字体颜色");
						itemCol.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, function(evt:ContextMenuEvent):void
							{
								modifyColPanl.visible=true;
								type="1";
								fColorPicker.selectedColor=uint("0x" + (evt.contextMenuOwner as ImageComp).col);
							});
						bigCust.contextMenu.customItems.push(itemCol);

						custGroup.addElement(bigCust);

						filter=filter + "groupcustomerid=\"" + cust_id + "\"";
						imgMap[cust_id]=bigCust;
						cusnos="\'" + cust_id + "\'";
					}
					else
					{
						endImg=new ImageComp();
						endImg.id=data.custid + "_" + data.custname;
						endImg.cust_id = data.custid;
						log.info("图片名字="+endImg.id +"----"+endImg.cust_id);
						endImg.cuName="专线名称:" + data.custname;
						endImg.buttonMode=true;
						endImg.col=data.color;
						endImg.w=20;
						endImg.h=30;
						endImg.width=20;
						endImg.height=30;
						endImg.show=true;
						endImg.url=picUrl;
						endImg.addEventListener(MouseEvent.DOUBLE_CLICK, imgClick);
						endImg.doubleClickEnabled=true;

						switch (data.lvl)
						{
							case "1":
								endImg.picShow.filters=[LEVEL1_COLOR_FILTER];
								break;
							case "2":
								endImg.picShow.filters=[LEVEL2_COLOR_FILTER];
								break;
							case "3":
								endImg.picShow.filters=[LEVEL3_COLOR_FILTER];
								break;
							case "4":
								endImg.picShow.filters=[LEVEL4_COLOR_FILTER];
								break;
							case "0":
							default:
								break;
						}

//					endImg.addEventListener(MouseEvent.MOUSE_MOVE, onMouseMove);
//					endImg.addEventListener(MouseEvent.MOUSE_DOWN, onMouseDown);
						
						var obj:Object=getRa(pm.dm.topuData.length);
						lo=getCirleNewPoint(bigCust.x, bigCust.y, Number(obj.de) * count, Number(obj.ra));
						if (data.x && data.y && data.x != "" && data.y != "")
						{
							endImg.x=data.x;
							endImg.y=data.y;
						}
						else
						{
							endImg.x=lo.x;
							endImg.y=lo.y;
						}
					
						endImg.addEventListener(MouseEvent.MOUSE_DOWN, function(e:MouseEvent):void
						{
							(e.currentTarget as ImageComp).startDrag();
						});
						
						endImg.addEventListener(MouseEvent.MOUSE_UP, function(e:MouseEvent):void
						{
							var num:int=(e.currentTarget as ImageComp).id.lastIndexOf("_");
							var id:String=(e.currentTarget as ImageComp).id.substr(0,num);
							log.info("num="+num+"   id="+id);
							
							(e.currentTarget as ImageComp).stopDrag();
							graphicUser.clear();
							for each (var spe:Object in specLineList)
							{
								drawLine3(bigCust, spe.spec as ImageComp);
							}
							for each (var t:Object in spceSaveList)
							{
								log.info("t.item_type="+t.item_type);
								
								if (t.item_type == "3")
								{
									log.info("id="+id+"     t.item_name="+t.item_name);
									if (id == t.item_name || id == String(t.item_name).split("_")[0])
									{
										t.x=(e.currentTarget as ImageComp).x;
										t.y=(e.currentTarget as ImageComp).y;
										log.info("移动到 t.x="+t.x+"   --t.y="+t.y);
									}
									
								}
							}
						});

						temp.city_id=areaId;
						temp.cust_no=cust_id;
						//temp.specId=data.custid;
						temp.item_name=data.custid;
						temp.x=endImg.x;
						temp.y=endImg.y;
						temp.item_type="3";
						spceSaveList.addItem(temp);
						log.info("@endImg.x +"+endImg.x+"   endImg.y="+endImg.y);
						specLineList.addItem({"spec": endImg});

						endImg.contextMenu=new ContextMenu();
						endImg.contextMenu.hideBuiltInItems();
						var item2:ContextMenuItem=new ContextMenuItem("修改专线名字");
						item2.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, function(evt:ContextMenuEvent):void
							{
								modifyCustNamePanl.visible=true;
								custNameInput.text=String(evt.contextMenuOwner['id']).split("_")[1];
								modifyId=String(evt.contextMenuOwner['id']).split("_")[0];
								type="2";
							});
						endImg.contextMenu.customItems.push(item2);

						var itemCo2:ContextMenuItem=new ContextMenuItem("修改字体颜色");
						itemCo2.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, function(evt:ContextMenuEvent):void
							{
								modifyColPanl.visible=true;
								type="2";
								fColorPicker.selectedColor=uint("0x" + (evt.contextMenuOwner as ImageComp).col);
							});
						endImg.contextMenu.customItems.push(itemCo2);

						custGroup.addElement(endImg);

						//添加专线名称label
						//custGroup.addElement(nameLabel);

						//绘制线
						drawLine3(bigCust, endImg);
						filter=filter + "|groupcustomerid=\"" + data.custid + "\"";
						imgMap[data.custid]=endImg;
						cusnos=cusnos + "," + "\'" + data.custid + "\'";
					}
					count++;
				}

				log.info("drowTopnPic  filter" + filter);
				alarmWindow.loadAlarm(filter);

//				var evt:CustSceneEvent=new CustSceneEvent(CustSceneEvent.QUERY_HAS_ALARM);
//				var param:Object=new Object();
//				param.custnos=cusnos;
//				evt.param=param;
				//msgDispatcher(evt);
			}

			private function getRa(len:Number):Object
			{
				var data:Object=new Object;
				if (len < 30)
				{
					data.ra=240;
					data.de=24;
				}
				else
				{
					data.ra=300;
					data.de=11;
				}
				return data;
			}

			/**
			 *通过确定圆心,半径和角度获取新的坐标点
			 * radarCenterX:雷达中心x坐标
			 * radarCenterY:雷达中心y坐标
			 * degree:角度
			 * radius:半径
			 */
			public function getCirleNewPoint(radarCenterX:Number, radarCenterY:Number, degree:Number, radius:Number):Object
			{
				var obj:Object=new Object;
				obj.x=radarCenterX + radius * Math.cos(degree * Math.PI / 180) + 0.5;
				obj.y=radarCenterY + radius * Math.sin(degree * Math.PI / 180) + 0.5;
				return obj;
			}

			/**
			 * 返回指定最大值，最小值范围内随机数
			 */
			public function getRandomNum(max:Number, min:Number):Number
			{
				return Math.random() * (max - min) + min;
			}

			private var proSaveList:ArrayCollection=new ArrayCollection();
			private var proUserCustList:ArrayCollection=new ArrayCollection();
			private var proForSpecList:Object=new Object;
			private var bigProCity:String="";

			[MessageHandler(selector="LOAS_USER_CUST_DATA_COMP")]
			public function LoadUserCustComp(event:CustSceneEvent):void
			{
				if (pm.columnarGroup)
				{
					log.info("进 LOAS_USER_CUST_DATA_COMP");
					try
					{
						log.info("清除pm.columnarGroup");
						mapWork.removeElement(pm.columnarGroup);
					}
					catch (e:Error)
					{
					}
				}
				
				if (picLine)
				{
					try
					{
						log.info("清除picLine,clear");
						graphic.clear();
						picLine.removeAllElements();
					}
					catch (e:Error)
					{
					}
				}
				var temp:Object;
				pm.columnarGroup=new Group();
				mapWork.addElement(pm.columnarGroup);
				var endImg:ImageComp=null;
				var cityIdBig:String;
				var cityId:String;
				var mapNode:MapNode;
				var x:Number;
				var y:Number;
				
				for each (var data:Object in pm.dm.userCustList)
				{
					temp=new Object;
					log.info("city id" + data.cityId);
					bigProCity=data.cityId;
					cityId=data.cityId;
					mapNode=mapWork.elementBox.getElementById(cityId + "_a") as MapNode;
					x=mapNode.x;
					y=mapNode.y;
					//先画大客户 要求后台把大客户拼在数据集第一位方便画线
					if ("1" == data.isbig)
					{
						log.info("big1");
						cityIdBig=cityId;
						startImg=new ImageComp();
						startImg.col=data.color;
						startImg.w=20;
						startImg.h=30;
						startImg.width=20;
						startImg.height=30;
						startImg.url=picUrl;
						startImg.show=true;
						startImg.cuName=cust_name;

						startImg.addEventListener(MouseEvent.MOUSE_DOWN, function(e:MouseEvent):void
							{
								(e.currentTarget as ImageComp).startDrag();
							});

						startImg.addEventListener(MouseEvent.MOUSE_UP, function(e:MouseEvent):void
							{
								(e.currentTarget as ImageComp).stopDrag();
								graphic.clear();
								picLine.removeAllElements();
								for each (var cu:Object in proUserCustList)
								{
									drawLine(startImg, (cu as ImageComp));
								}
								graphicProOverCity.clear();
								for each (var az:Object in proAZList)
								{
									drawLineProOverCity((az["A"] as ImageComp), (az["Z"] as ImageComp));
								}
								for each (var t:Object in proSaveList)
								{
									if (t.item_type == "1")
									{
										t.x=(e.currentTarget as ImageComp).x;
										t.y=(e.currentTarget as ImageComp).y;
									}
								}
							});

						if (data.x && data.x != "" && data.y && data.y != "")
						{
							startImg.x=data.x;
							startImg.y=data.y;
						}
						else
						{
							startImg.x=x;
							startImg.y=y;
						}

						startImg.contextMenu=new ContextMenu();
						startImg.contextMenu.hideBuiltInItems();
						var item:ContextMenuItem=new ContextMenuItem("修改客户名字");
						item.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, function(evt:ContextMenuEvent):void
							{
								modifyCustNamePanl.visible=true;
								custNameInput.text=cust_name;
								modifyId=cust_id;
								type="0";
							});
						startImg.contextMenu.customItems.push(item);

						var itemCol:ContextMenuItem=new ContextMenuItem("修改字体颜色");
						itemCol.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, function(evt:ContextMenuEvent):void
							{
								modifyColPanl.visible=true;
								type="0";
								fColorPicker.selectedColor=uint("0x" + (evt.contextMenuOwner as ImageComp).col);
							});
						startImg.contextMenu.customItems.push(itemCol);

						switch (data.lvl)
						{
							case "1":
								startImg.picShow.filters=[LEVEL1_COLOR_FILTER];
								break;
							case "2":
								startImg.picShow.filters=[LEVEL2_COLOR_FILTER];
								break;
							case "3":
								startImg.picShow.filters=[LEVEL3_COLOR_FILTER];
								break;
							case "4":
								startImg.picShow.filters=[LEVEL4_COLOR_FILTER];
								break;
							case "0":
							default:
								break;
						}

						temp.city_id="00";
						temp.cust_no=cust_id;
						temp.item_name=cust_id;
						temp.x=startImg.x;
						temp.y=startImg.y;
						temp.item_type="1";
						proSaveList.addItem(temp);
						proForSpecList[cust_id + "_" + data.cityId]=startImg;
						pm.columnarGroup.addElement(startImg);
					}
					else
					{
						endImg=new ImageComp();
						endImg.buttonMode=true;
						endImg.speNum=data.speNum;
						endImg.id=cityId;
						endImg.url=picUrl;
						endImg.toolTip=data.num;
						endImg.w=20;
						endImg.h=30;
						endImg.width=20;
						endImg.height=30;
						endImg.show=false;
						endImg.addEventListener(MouseEvent.DOUBLE_CLICK, userCustPicClick);
						endImg.doubleClickEnabled=true;
						endImg.addEventListener(MouseEvent.MOUSE_DOWN, function(e:MouseEvent):void
							{
								(e.currentTarget as ImageComp).startDrag();
							});

						endImg.addEventListener(MouseEvent.MOUSE_UP, function(e:MouseEvent):void
							{
								(e.currentTarget as ImageComp).stopDrag();
								graphic.clear();
								picLine.removeAllElements();
								for each (var cu:Object in proUserCustList)
								{
									drawLine(startImg, (cu as ImageComp));
								}
								graphicProOverCity.clear();
								for each (var az:Object in proAZList)
								{
									drawLineProOverCity((az["A"] as ImageComp), (az["Z"] as ImageComp));
								}
								for each (var t:Object in proSaveList)
								{
									if (t.item_type == "2")
									{
										var item_nameTemp:String=(e.currentTarget as ImageComp).id + "_" + cust_id;
										if (item_nameTemp == t.item_name)
										{
											t.x=(e.currentTarget as ImageComp).x;
											t.y=(e.currentTarget as ImageComp).y;
										}
									}
								}
							});

						if (data.x && data.x != "" && data.y && data.y != "")
						{
							endImg.x=data.x;
							endImg.y=data.y
						}
						else
						{
							if (cityId == cityIdBig)
							{
								if ("0007" == cityIdBig)
								{
									endImg.x=x - 20;
									endImg.y=y - 10;
								}
								endImg.x=x + 15;
								endImg.y=y;
							}
							else
							{
								endImg.x=x;
								endImg.y=y;
							}
						}

						temp.city_id="00";
						temp.cust_no=cust_id;
						temp.item_name=cityId + "_" + cust_id;
						temp.x=endImg.x;
						temp.y=endImg.y;
						temp.item_type="2";
						proUserCustList.addItem(endImg);
						proSaveList.addItem(temp);
						proForSpecList[data.cityId]=endImg;
						switch (data.lvl)
						{
							case "1":
								endImg.picShow.filters=[LEVEL1_COLOR_FILTER];
								break;
							case "2":
								endImg.picShow.filters=[LEVEL2_COLOR_FILTER];
								break;
							case "3":
								endImg.picShow.filters=[LEVEL3_COLOR_FILTER];
								break;
							case "4":
								endImg.picShow.filters=[LEVEL4_COLOR_FILTER];
								break;
							case "0":
							default:
								break;
						}

						pm.columnarGroup.addElement(endImg);
						//clearDrawLine();
						//绘制线
						drawLine(startImg, endImg);
//						filter=filter + "|groupcustomerid=\"" + data.custid + "\"";
//						imgMap[data.custid]=endImg;
					}

				}
				//数据集清空后加载跨地市专线
				var evt:CustSceneEvent=new CustSceneEvent(CustSceneEvent.LOAD_PRO_SPEC_BYCUSTID);
				evt.param=new Object();
				evt.param.custName=cust_name;
				evt.param.cust_id=cust_id;
				msgDispatcher(evt);
			}

			//缓存省级跨地市专线对象方便移动画线
			private var proAZList:ArrayCollection=new ArrayCollection();

			[MessageHandler(selector="LOAD_PRO_SPEC_BYCUSTID_COMP")]
			public function drawProOverCitySpec(event:CustSceneEvent):void
			{
				proAZList.removeAll();
				proAZList.refresh();
				var aCity:ImageComp;
				var zCity:ImageComp;
				var amapNode:MapNode;
				var ax:Number;
				var ay:Number;
				var zmapNode:MapNode;
				var zx:Number;
				var zy:Number;
				var temp:Object;
				var ate:Object;
				var zte:Object;
				for each (var data:Object in pm.dm.proOverCitySpecList)
				{
					temp=new Object;
					ate=new Object;
					if ((proForSpecList[data.a_city] && proForSpecList[data.a_city] != null) || (proForSpecList[cust_id + "_" + data.a_city] && proForSpecList[cust_id + "_" + data.a_city] != null))
					{
						if (bigProCity == data.a_city)
						{
							log.info("drawProOverCitySpec=======ate  bigCust");
							if (proForSpecList[data.a_city] && proForSpecList[data.a_city] != null)
							{
								log.info("ate user acity");
								aCity=proForSpecList[data.a_city];
							}
							else
							{
								log.info("ate user acity big");
								aCity=proForSpecList[cust_id + "_" + data.a_city];
							}

						}
						else
						{
							log.info("ate user acity");
							aCity=proForSpecList[data.a_city];
						}
					}
					else
					{
						log.info("creat new ate");
						amapNode=mapWork.elementBox.getElementById(data.a_city + "_a") as MapNode;
						ax=amapNode.x;
						ay=amapNode.y;
						aCity=new ImageComp();
						aCity.id="a_" + data.prod_no;
						aCity.toolTip=data.specName;
						aCity.w=20;
						aCity.h=30;
						aCity.height=30;
						aCity.width=20;
						aCity.show=false;
						aCity.url=picUrl;
						if (data.ax && data.ax != "" && data.ay && data.ay != "")
						{
							aCity.x=data.ax;
							aCity.y=data.ay;
						}
						else
						{
							aCity.x=ax - 10;
							aCity.y=ay + 10;
						}

						aCity.addEventListener(MouseEvent.MOUSE_DOWN, function(e:MouseEvent):void
							{
								(e.currentTarget as ImageComp).startDrag();
							});

						aCity.addEventListener(MouseEvent.MOUSE_UP, function(e:MouseEvent):void
							{
								(e.currentTarget as ImageComp).stopDrag();
								graphicProOverCity.clear();
								for each (var az:Object in proAZList)
								{
									drawLineProOverCity((az["A"] as ImageComp), (az["Z"] as ImageComp));
								}
								for each (var t:Object in proSaveList)
								{
									if (t.item_type == "3")
									{
										var item_nameTemp:String=(e.currentTarget as ImageComp).id;
										if (item_nameTemp == t.item_name)
										{
											t.x=(e.currentTarget as ImageComp).x;
											t.y=(e.currentTarget as ImageComp).y;
										}
									}
								}
							});
						proForSpecList[data.a_city]=aCity;
						pm.columnarGroup.addElement(aCity);
						log.info("creat new ate end");
					}
					ate.city_id="00";
					ate.cust_no=cust_id;
					ate.item_name="a_" + data.prod_no;
					ate.x=aCity.x;
					ate.y=aCity.y;
					ate.item_type="3";
					proSaveList.addItem(ate);
					temp["A"]=aCity;

					zte=new Object;
					if ((proForSpecList[data.z_city] && proForSpecList[data.z_city] != null) || (proForSpecList[cust_id + "_" + data.z_city] && proForSpecList[cust_id + "_" + data.z_city] != null))
					{
						if (bigProCity == data.z_city)
						{
							log.info("drawProOverCitySpec=======zte  bigCust");
							if (proForSpecList[data.z_city] && proForSpecList[data.z_city] != null)
							{
								log.info("zte user zcity");
								zCity=proForSpecList[data.z_city];
							}
							else
							{
								log.info("zte user zcity big");
								zCity=proForSpecList[cust_id + "_" + data.z_city];
							}

						}
						else
						{
							log.info("zte user zcity");
							zCity=proForSpecList[data.z_city];
						}
					}
					else
					{
						log.info("zte creat new");
						zmapNode=mapWork.elementBox.getElementById(data.z_city + "_a") as MapNode;
						zx=zmapNode.x;
						zy=zmapNode.y;
						zCity=new ImageComp();
						zCity.id="z_" + data.prod_no;
						zCity.toolTip=data.specName;
						zCity.w=20;
						zCity.h=30;
						zCity.width=20;
						zCity.height=30;
						zCity.show=false;
						zCity.url=picUrl;
						if (data.zx && data.zy && data.za != "" && data.zy != "")
						{
							zCity.x=data.zx;
							zCity.y=data.zy;
						}
						else
						{

							zCity.x=zx - 10;
							zCity.y=zy + 10;
						}

						zCity.addEventListener(MouseEvent.MOUSE_DOWN, function(e:MouseEvent):void
							{
								(e.currentTarget as ImageComp).startDrag();
							});

						zCity.addEventListener(MouseEvent.MOUSE_UP, function(e:MouseEvent):void
							{
								(e.currentTarget as ImageComp).stopDrag();
								graphicProOverCity.clear();
								for each (var az:Object in proAZList)
								{
									drawLineProOverCity((az["A"] as ImageComp), (az["Z"] as ImageComp));
								}
								for each (var t:Object in proSaveList)
								{
									if (t.item_type == "3")
									{
										var item_nameTemp:String=(e.currentTarget as ImageComp).id;
										if (item_nameTemp == t.item_name)
										{
											t.x=(e.currentTarget as ImageComp).x;
											t.y=(e.currentTarget as ImageComp).y;
										}
									}
								}
							});
						proForSpecList[data.z_city]=zCity;
						pm.columnarGroup.addElement(zCity);
					}
					zte.city_id="00";
					zte.cust_no=cust_id;
					zte.item_name="z_" + data.prod_no;
					zte.x=zCity.x;
					zte.y=zCity.y;
					zte.item_type="3";
					proSaveList.addItem(zte);
					temp["Z"]=zCity;
					proAZList.addItem(temp);
					drawLineProOverCity(aCity, zCity);
				}
			}

			private var citySaveList:ArrayCollection=new ArrayCollection();
			private var cityCustLineList:ArrayCollection=new ArrayCollection();
			private var cityForSpecMap:Array=new Array();
			private var bigDis:ImageComp;

			[MessageHandler(selector="LOAD_SPECOUNT_INDISTRICT_COMP")]
			public function drawDistrictMap(event:CustSceneEvent):void
			{
				log.info("第二");
				
				if (pm.disGroup)
				{
					
					try
					{
						cityMapWork.removeElement(pm.disGroup);
					}
					catch (e:Error)
					{
						
					}
				}
				
				var temp:Object=new Object();
				pm.disGroup=new Group();
				cityMapWork.addElement(pm.disGroup);

				var dis:ImageComp;
				var i:int=0;
				var j:Number=1;
				var obj:Object;
				var mapNode:MapNode=null;
				var x:Number;
				var y:Number;
				var areaId:String;

				for each (var data:Object in pm.dm.disSpecNumList)
				{
					temp=new Object;
					if (data.isbig == "1")
					{
						bigDis=new ImageComp();
						bigDis.cuName=cust_name;
						bigDis.col=data.color;
						bigDis.w=30;
						bigDis.h=40;
						bigDis.width=30;
						bigDis.height=40;
						bigDis.url=picUrl;
						bigDis.show=true;
						if (data.x && data.y && data.x != "" && data.y != "")
						{
							bigDis.x=data.x;
							bigDis.y=data.y;
						}
						else
						{
							bigDis.x=cityMapWork.width / 2;
							bigDis.y=cityMapWork.height / 2;
						}
						bigDis.addEventListener(MouseEvent.MOUSE_DOWN, function(e:MouseEvent):void
							{
								(e.currentTarget as ImageComp).startDrag();
							});

						bigDis.addEventListener(MouseEvent.MOUSE_UP, function(e:MouseEvent):void
							{
								(e.currentTarget as ImageComp).stopDrag();
								grapCityCust.clear();
								cityCustLine.removeAllElements();
								for each (var cu:Object in cityCustLineList)
								{
									drawLine2(bigDis, (cu as ImageComp));
								}
								grapCitySpec.clear();
								for each (var az:Object in areaAZList)
								{
									drawLineCityOverArea((az["A"] as ImageComp), (az["Z"] as ImageComp));
								}
								for each (var t:Object in citySaveList)
								{
									if (t.item_type == "1")
									{
										t.x=(e.currentTarget as ImageComp).x;
										t.y=(e.currentTarget as ImageComp).y;
									}
								}
							});

						temp.city_id=city_Id;
						temp.cust_no=cust_id;
						temp.item_name=cust_id;
						temp.x=bigDis.x;
						temp.y=bigDis.y;
						temp.item_type="1";
						citySaveList.addItem(temp);

						bigDis.contextMenu=new ContextMenu();
						bigDis.contextMenu.hideBuiltInItems();
						var item:ContextMenuItem=new ContextMenuItem("修改客户名字");
						item.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, function(evt:ContextMenuEvent):void
							{
								modifyCustNamePanl.visible=true;
								custNameInput.text=cust_name;
								modifyId=cust_id;
								type="0";
							});
						bigDis.contextMenu.customItems.push(item);

						var itemCol:ContextMenuItem=new ContextMenuItem("修改字体颜色");
						itemCol.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, function(evt:ContextMenuEvent):void
							{
								modifyColPanl.visible=true;
								type="0";
								fColorPicker.selectedColor=uint("0x" + (evt.contextMenuOwner as ImageComp).col);
							});
						bigDis.contextMenu.customItems.push(itemCol);

						pm.disGroup.addElement(bigDis);
					}
					else
					{
						areaId=data.districtId;
						mapNode=cityMapWork.elementBox.getElementById(areaId + "_a") as MapNode;
						//mapNode=cityMapWork.elementBox.getElementById("000107_a") as MapNode;
						x=mapNode.centerPoint.x;
						y=mapNode.centerPoint.y;
						dis=new ImageComp();
						dis.col=data.color;
						dis.speNum=data.speNum;
						dis.cust_id=data.cust_id;
						dis.buttonMode=true;
						dis.id=data.districtId;
						dis.cuName=data.custName;
						dis.show=true;
						dis.w=20;
						dis.h=30;
						dis.width=20;
						dis.height=30;
						dis.url=picUrl;
						//dis.toolTip=data.count;
						dis.addEventListener(MouseEvent.DOUBLE_CLICK, disPicClick);
						dis.doubleClickEnabled=true;
						dis.addEventListener(MouseEvent.MOUSE_DOWN, function(e:MouseEvent):void
							{
								(e.currentTarget as ImageComp).startDrag();
							});

						dis.addEventListener(MouseEvent.MOUSE_UP, function(e:MouseEvent):void
							{
								(e.currentTarget as ImageComp).stopDrag();
								grapCityCust.clear();
								cityCustLine.removeAllElements();
								for each (var cu:Object in cityCustLineList)
								{
									drawLine2(bigDis, (cu as ImageComp));
								}
								grapCitySpec.clear();
								for each (var az:Object in areaAZList)
								{
									drawLineCityOverArea((az["A"] as ImageComp), (az["Z"] as ImageComp));
								}
								for each (var t:Object in citySaveList)
								{
									if (t.item_type == "2")
									{
										//var item_nameTemp:String=(e.currentTarget as ImageComp).id + "_" + cust_name;
										var item_nameTemp:String=(e.currentTarget as ImageComp).cust_id;
										if (item_nameTemp == t.item_name)
										{
											t.x=(e.currentTarget as ImageComp).x;
											t.y=(e.currentTarget as ImageComp).y;
										}
									}
								}
							});

						if (data.x && data.x != "" && data.y && data.y != "")
						{
							dis.x=data.x;
							dis.y=data.y
						}
						else
						{

							dis.x=x;
							dis.y=y;
						}

						temp.city_id=city_Id;
						temp.cust_no=cust_id;
						//temp.item_name=areaId + "_" + cust_name;
						temp.item_name=data.cust_id;
						temp.x=dis.x;
						temp.y=dis.y;
						temp.item_type="2";
						citySaveList.addItem(temp);
						cityCustLineList.addItem(dis);
						if (cityForSpecMap[areaId])
						{
							(cityForSpecMap[areaId] as ArrayCollection).addItem(dis);
						}
						else
						{
							cityForSpecMap[areaId]=new ArrayCollection();
							(cityForSpecMap[areaId] as ArrayCollection).addItem(dis);
						}
						//cityForSpecMap[areaId]=dis;

						dis.contextMenu=new ContextMenu();
						dis.contextMenu.hideBuiltInItems();
						var item2:ContextMenuItem=new ContextMenuItem("修改客户名字");
						item2.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, function(evt:ContextMenuEvent):void
							{
								custNameInput.text=(evt.contextMenuOwner as ImageComp).cuName;
								modifyId=(evt.contextMenuOwner as ImageComp).cust_id;
								type="1";
								modifyCustNamePanl.visible=true;
							});
						dis.contextMenu.customItems.push(item2);

						var itemCol2:ContextMenuItem=new ContextMenuItem("修改字体颜色");
						itemCol2.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, function(evt:ContextMenuEvent):void
							{
								modifyColPanl.visible=true;
								type="1";
								fColorPicker.selectedColor=uint("0x" + (evt.contextMenuOwner as ImageComp).col);
							});
						dis.contextMenu.customItems.push(itemCol2);

						switch (data.lvl)
						{
							case "1":
								dis.picShow.filters=[LEVEL1_COLOR_FILTER];
								break;
							case "2":
								dis.picShow.filters=[LEVEL2_COLOR_FILTER];
								break;
							case "3":
								dis.picShow.filters=[LEVEL3_COLOR_FILTER];
								break;
							case "4":
								dis.picShow.filters=[LEVEL4_COLOR_FILTER];
								break;
							case "0":
							default:
								break;
						}
						pm.disGroup.addElement(dis);
						drawLine2(bigDis, dis);
					}
//					if (i < 12)
//					{
//						i++;
//					}
//					else
//					{
//						i=0;
//						j=j + 0.5;
//					}
				}
				var evtAreaSpec:CustSceneEvent=new CustSceneEvent(CustSceneEvent.LOAD_OVERAREA_SPECS);
				evtAreaSpec.param=new Object;
				evtAreaSpec.param.cust_id=cust_id;
				evtAreaSpec.param.cityId=city_Id;
				evtAreaSpec.param.custName=cust_name;
				msgDispatcher(evtAreaSpec);
			}

			//缓存省级跨地市专线对象方便移动画线
			private var areaAZList:ArrayCollection=new ArrayCollection();

			[MessageHandler(selector="LOAD_OVERAREA_SPECS_COMP")]
			public function drawOverAreaSpec(event:CustSceneEvent):void
			{
				var cityMapWork:MapWork=cityMapArr[city_Id];
				areaAZList.removeAll();
				areaAZList.refresh();
				var aCity:ImageComp;
				var zCity:ImageComp;
				var amapNode:MapNode;
				var ax:Number;
				var ay:Number;
				var zmapNode:MapNode;
				var zx:Number;
				var zy:Number;
				var temp:Object;
				var ate:Object;
				var zte:Object;
				var aCityList:ArrayCollection;
				var zCityList:ArrayCollection;
				for each (var data:Object in pm.dm.overAreaSpecList)
				{
					temp=new Object;
					ate=new Object;
					aCity=new ImageComp();
					if (cityForSpecMap[data.a_county] && cityForSpecMap[data.a_county] != null)
					{
						log.info("acityList exit");
						//aCity=cityForSpecMap[data.a_county];
						aCityList=cityForSpecMap[data.a_county] as ArrayCollection;
						log.info("acityList exit end");
					}
					else
					{
						log.info("creat new ate");
						amapNode=cityMapWork.elementBox.getElementById(data.a_county + "_a") as MapNode;
						//amapNode=cityMapWork.elementBox.getElementById("000104_a") as MapNode;
						ax=amapNode.centerPoint.x;
						ay=amapNode.centerPoint.y;
						aCity.id="a_" + data.prod_no;
						aCity.toolTip=data.specName;
						aCity.w=20;
						aCity.h=30;
						aCity.height=30;
						aCity.width=20;
						aCity.show=false;
						aCity.url=picUrl;
						if (data.ax && data.ax != "" && data.ay && data.ay != "")
						{
							aCity.x=data.ax;
							aCity.y=data.ay;
						}
						else
						{
							aCity.x=ax;
							aCity.y=ay;
						}

						aCity.addEventListener(MouseEvent.MOUSE_DOWN, function(e:MouseEvent):void
							{
								(e.currentTarget as ImageComp).startDrag();
							});

						aCity.addEventListener(MouseEvent.MOUSE_UP, function(e:MouseEvent):void
							{
								(e.currentTarget as ImageComp).stopDrag();
								grapCitySpec.clear();
								for each (var az:Object in areaAZList)
								{
									drawLineCityOverArea((az["A"] as ImageComp), (az["Z"] as ImageComp));
								}
								for each (var t:Object in citySaveList)
								{
									if (t.item_type == "3")
									{
										var item_nameTemp:String=(e.currentTarget as ImageComp).id;
										if (item_nameTemp == t.item_name)
										{
											t.x=(e.currentTarget as ImageComp).x;
											t.y=(e.currentTarget as ImageComp).y;
										}
									}
								}
							});
						aCityList=new ArrayCollection();
						aCityList.addItem(aCity);
						cityForSpecMap[data.a_county]=aCityList;
						//cityForSpecMap[data.a_county]=aCity;
						pm.disGroup.addElement(aCity);
						log.info("creat new ate end");
					}
					ate.city_id=city_Id;
					ate.cust_no=cust_id;
					ate.item_name="a_" + data.prod_no;
					ate.x=aCity.x;
					ate.y=aCity.y;
					ate.item_type="3";
					citySaveList.addItem(ate);
					temp["A"]=aCity;
					log.info("a end");

					zte=new Object;
					zCity=new ImageComp();
					if (cityForSpecMap[data.z_county] && cityForSpecMap[data.z_county] != null)
					{
						log.info("zte user zcity");
						zCityList=cityForSpecMap[data.z_county] as ArrayCollection;
							//zCity=cityForSpecMap[data.z_county];
					}
					else
					{
						log.info("zte creat new");
						zmapNode=cityMapWork.elementBox.getElementById(data.z_county + "_a") as MapNode;
						//zmapNode=cityMapWork.elementBox.getElementById("000103_a") as MapNode;
						zx=zmapNode.centerPoint.x;
						zy=zmapNode.centerPoint.y;
						zCity.id="z_" + data.prod_no;
						zCity.toolTip=data.specName;
						zCity.w=20;
						zCity.h=30;
						zCity.width=20;
						zCity.height=30;
						zCity.show=false;
						zCity.url=picUrl;
						if (data.zx && data.zy && data.za != "" && data.zy != "")
						{
							zCity.x=data.zx;
							zCity.y=data.zy;
						}
						else
						{
							zCity.x=zx;
							zCity.y=zy;
						}

						zCity.addEventListener(MouseEvent.MOUSE_DOWN, function(e:MouseEvent):void
							{
								(e.currentTarget as ImageComp).startDrag();
							});

						zCity.addEventListener(MouseEvent.MOUSE_UP, function(e:MouseEvent):void
							{
								(e.currentTarget as ImageComp).stopDrag();
								grapCitySpec.clear();
								for each (var az:Object in areaAZList)
								{
									drawLineCityOverArea((az["A"] as ImageComp), (az["Z"] as ImageComp));
								}
								for each (var t:Object in citySaveList)
								{
									if (t.item_type == "3")
									{
										var item_nameTemp:String=(e.currentTarget as ImageComp).id;
										if (item_nameTemp == t.item_name)
										{
											t.x=(e.currentTarget as ImageComp).x;
											t.y=(e.currentTarget as ImageComp).y;
										}
									}
								}
							});
						zCityList=new ArrayCollection();
						zCityList.addItem(zCity);
						cityForSpecMap[data.z_county]=zCityList;
						//cityForSpecMap[data.z_county]=zCity;
						pm.disGroup.addElement(zCity);
					}
					zte.city_id=city_Id;
					zte.cust_no=cust_id;
					zte.item_name="z_" + data.prod_no;
					zte.x=zCity.x;
					zte.y=zCity.y;
					zte.item_type="3";
					citySaveList.addItem(zte);
					temp["Z"]=zCity;
					//areaAZList.addItem(temp);
					//drawLineCityOverArea(aCity, zCity);
					var t:Object;
					for each (var a:ImageComp in aCityList)
					{
						for each (var z:ImageComp in zCityList)
						{
							t=new Object();
							t["A"]=a;
							t["Z"]=z;
							areaAZList.addItem(t);
							drawLineCityOverArea(a, z);
						}
					}
				}
			}

			[Bindable]
			private var areaId:String="";
			[Bindable]
			private var userCustId:String="";
			[Bindable]
			private var userCustName:String="";

			private function disPicClick(e:MouseEvent):void
			{
				flag=3;
				areaId=(e.currentTarget as ImageComp).id;
				userCustId=(e.currentTarget as ImageComp).cust_id;
				userCustName=(e.currentTarget as ImageComp).cuName;
				mapWork.visible=false;
				picLine.visible=false;
				picLineProOverCity.visible=false;
				districtGroup.visible=false;
				tupoGroup.visible=true;
				var evt1:CustSceneEvent=new CustSceneEvent(CustSceneEvent.LOAS_BIG_CUST_DATA);
				var param1:Object=new Object();
				//param1.cust_id=cust_id;
				param1.cust_id=(e.currentTarget as ImageComp).cust_id;
				param1.groupId=cust_id;
				param1.cityId=city_Id;
				param1.cust_name=userCustName;
				param1.districtId=areaId;
				evt1.param=param1;
				msgDispatcher(evt1);


				var evt3:CustSceneEvent=new CustSceneEvent(CustSceneEvent.LOAD_USER_CUST_BY_BIGCUST);
				var param3:Object=new Object();
				param3.custNo=cust_id;
				param3.type=3;
				param3.userNo=userCustId;
				evt3.param=param3;
				msgDispatcher(evt3);
				if (log.infoEnabled)
					log.info("load spec tupu");
			}

			[Bindable]
			private var city_Id:String="";
			private var cityMapWork:MapWork=null;

			private function userCustPicClick(e:MouseEvent):void
			{
				
				log.info("2222222]]]]]]]]]]]");
				flag=2;
				cId=(e.currentTarget as ImageComp).id;
				city_Id=cId;
				cityMapWork=cityMapArr[city_Id];

				mapWork.visible=false;
				districtGroup.visible=true;
				picLine.visible=false;
				tupoGroup.visible=false;
				picLineProOverCity.visible=false;

				citySaveList.removeAll();
				citySaveList.refresh();
				cityCustLineList.removeAll();
				cityCustLineList.refresh();
				cityForSpecMap=new Array();
				if (pm.disGroup)
				{
					try
					{
						cityMapWork.removeElement(pm.disGroup);
					}
					catch (e:Error)
					{

					}
				}
				grapCityCust.clear();
				cityCustLine.removeAllElements();
				grapCitySpec.clear();

				var evt1:CustSceneEvent=new CustSceneEvent(CustSceneEvent.LOAD_SPECOUNT_INDISTRICT);
				var param1:Object=new Object();
				param1.cust_id=cust_id;
				param1.cityId=cId;
				param1.custName=cust_name;
				evt1.param=param1;
				msgDispatcher(evt1);

				var evt3:CustSceneEvent=new CustSceneEvent(CustSceneEvent.LOAD_USER_CUST_BY_BIGCUST);
				var param3:Object=new Object();
				param3.custNo=cust_id;
				param3.type=2;
				param3.cityId=city_Id;
				evt3.param=param3;
				msgDispatcher(evt3);

				var evtPanel:CustSceneEvent=new CustSceneEvent(CustSceneEvent.LOAD_PANEL_DATA_BY_CITYID);
				var paramPanel:Object=new Object();
				paramPanel.cust_id=cust_id;
				paramPanel.cityId=city_Id;
				evtPanel.param=paramPanel;
				msgDispatcher(evtPanel);
			}

			//加载是否有告警返回函数   为图片作色
			[MessageHandler(selector="queryHasAlarmComp")]
			public function hasAlarm(event:CustSceneEvent):void
			{
				var tempPic:Image;
				log.info("[hasAlarm]hasAlarmList length" + pm.dm.hasAlarmList.length);
				for each (var temp:Object in pm.dm.hasAlarmList)
				{
					if (temp.alarmnum && temp.alarmnum > 0)
					{
						if (imgMap[temp.custno] is Image)
						{
							tempPic=imgMap[temp.custno] as Image;
						}
						else
						{
							log.info("imgMap[temp.custno]" + temp.custno + " is not Image");
						}
						log.info("[alarmnum] count" + temp.alarmnum);
						tempPic.filters=[LEVEL1_COLOR_FILTER];
					}
					else
					{
						log.info("[alarmnum] no alarmnum or alarmnum<=0 ");
					}
				}
			}

			//绘制线
			private function drawLine(startImg:ImageComp, endImg:ImageComp):void
			{
				graphic.lineStyle(1, 0xFF00FF, 1);
//				log.info("drawLine" + "sx" + startImg.x + "sy" + startImg.y + "sw" + startImg.width / 2 + "sh" + startImg.height / 2);
//				log.info("drawLine" + "ex" + endImg.x + "ey" + endImg.y + "ew" + endImg.width / 2 + "eh" + endImg.height / 2);
				graphic.moveTo(startImg.x + startImg.width / 2, startImg.y + startImg.height / 2 - 3);
				graphic.lineTo(endImg.x + endImg.width / 2, endImg.y + endImg.height / 2 - 3);
				var numLabel:Label=new Label();
				numLabel.text=endImg.speNum;
				numLabel.x=(startImg.x + endImg.x) / 2;
				numLabel.y=(startImg.y + endImg.y) / 2;
				picLine.addElement(numLabel);
			}
			//清除线
			private function clearDrawLine():void
			{
				graphic.clear();
				picLine.removeAllElements();
			}

			private function drawLineProOverCity(aimg:ImageComp, zimg:ImageComp):void
			{
//				log.info("drawLineProOverCityax" + aimg.x + "ay" + aimg.y + "aw" + aimg.width / 2 + "ah" + aimg.height / 2);
//				log.info("drawLineProOverCityzx" + zimg.x + "zy" + zimg.y + "zw" + zimg.width / 2 + "zh" + zimg.height / 2);
				graphicProOverCity.lineStyle(1, 0xFFFF00, 1);
				graphicProOverCity.moveTo(aimg.x + aimg.width / 2, aimg.y + aimg.height / 2 - 6);
				graphicProOverCity.lineTo(zimg.x + zimg.width / 2, zimg.y + zimg.height / 2 - 6);
			}

			//绘制线2
			private function drawLine2(startImg:ImageComp, endImg:ImageComp):void
			{
				grapCityCust.lineStyle(1, 0xFF00FF, 1);
				grapCityCust.moveTo(startImg.x + startImg.width / 2, startImg.y + startImg.height / 2 - 3);
				grapCityCust.lineTo(endImg.x + endImg.width / 2, endImg.y + endImg.height / 2 - 3);

				var numLabel:Label=new Label();
				numLabel.text=endImg.speNum;
				numLabel.x=(startImg.x + endImg.x) / 2;
				numLabel.y=(startImg.y + endImg.y) / 2;
				cityCustLine.addElement(numLabel);
			}

			private function drawLineCityOverArea(aimg:ImageComp, zimg:ImageComp):void
			{
				grapCitySpec.lineStyle(1, 0xFFFF00, 1);
				grapCitySpec.moveTo(aimg.x + aimg.width / 2, aimg.y + aimg.height / 2 - 6);
				grapCitySpec.lineTo(zimg.x + zimg.width / 2, zimg.y + zimg.height / 2 - 6);
			}

			//绘制线3
			private function drawLine3(startImg:ImageComp, endImg:ImageComp):void
			{
				graphicUser.lineStyle(1, 0xFF00FF, 1);
				graphicUser.moveTo(startImg.x + startImg.width / 2, startImg.y + startImg.height / 2 - 3);
				graphicUser.lineTo(endImg.x + endImg.width / 2, endImg.y + endImg.height / 2 - 3);
			}


			//外层地图上分布图片点击进入详细拓扑显示
			private function userClick(e:MouseEvent):void
			{

			}

			private function imgClick(event:MouseEvent):void
			{
				log.info("点击客户图片");
				funPerfComp.showFirst=true;
				funPerfComp.big="2";
				var custId:String;
				var qId:String;
				//cust_id=(event.target as Image).id;
				if (event.currentTarget is ImageComp)
				{
					perfCustName=(event.currentTarget as ImageComp).cuName;
					perfCustId=(event.currentTarget as ImageComp).id.split("_")[0];
					custId=(event.currentTarget as ImageComp).id.split("_")[0];
					qId =(event.currentTarget as ImageComp).cust_id;
					//custId=(event.currentTarget as ImageComp).id;
				}
				else
				{
					log.info("event.currentTarget is not ImageComp");
				}
				log.info("[imgClick]  custid new" + custId+"=====qId="+qId);

//				var evtPanel:CustSceneEvent=new CustSceneEvent(CustSceneEvent.LOAD_PANEL_DATA_BY_CUSTID);
//				var paramPanel:Object=new Object();
//				paramPanel.cust_id=custId;
//				evtPanel.param=paramPanel;
//				msgDispatcher(evtPanel);

				var evt:CustSceneEvent=new CustSceneEvent(CustSceneEvent.LOAD_OTHER_DATA_BYCUSTBYID_BY_TOPU);
				var param:Object=new Object();
				param.cust_id=custId;
				evt.param=param;
				msgDispatcher(evt);

//				var evt2:CustSceneEvent=new CustSceneEvent(CustSceneEvent.LOAD_SERVER_TYPE_BY_CUSTID);
//				var param2:Object=new Object();
//				param2.cust_id=custId;
//				evt2.param=param2;
//				msgDispatcher(evt2);

//				 var evt3:CustSceneEvent=new CustSceneEvent(CustSceneEvent.LOAD_USER_CUST_BY_BIGCUST);
//				   var param3:Object=new Object();
//				   param3.custNo=custId;
//				   param3.cityId=cId;
//				   evt3.param=param3;
//				 msgDispatcher(evt3); 

//				/var filter:String="groupcustomerid=\"" + custId + "\"";
				filter="groupcustomerid=\"" + custId + "\"";
				log.info("[imgClick]filter" + filter);
				alarmWindow.loadAlarm(filter);
				log.info("alarm load over");
				log.info("[imgClick] disEvent over");

				var url:String="/cms/cms/webtopo/topo/topolocate.action?specId=spk&moId=" + qId + "&topoName=default-topo-jtkh";
				navigateToURL(new URLRequest(url));
			}

			private function onMouseMove(event:MouseEvent):void
			{

				var img:Image=new Image();
				if (event.currentTarget is Image)
				{
					img=event.currentTarget as Image;
				}
				else
				{
					log.info("event.currentTarget is not Image");
				}
				if (event.buttonDown)
				{
					var x:Number=event.stageX - oldX;
					var y:Number=event.stageY - oldY;
					oldX=event.stageX;
					oldY=event.stageY;
					img.move(img.x + x, img.y + y);
					graphicUser.clear();
					var endImg:ImageComp;
					for (var i:int=1; i < count; i++)
					{
						if (custGroup.getElementAt(i) is ImageComp)
						{
							endImg=custGroup.getElementAt(i) as ImageComp;
						}
						else
						{
							log.info("pm.columnarGroup.getElementAt(i) is not Image");
						}
						drawLine3(bigCust, endImg);
					}
				}

			}

			private function onMouseDown(event:MouseEvent):void
			{
				oldX=event.stageX;
				oldY=event.stageY;
			}

			private function onMouseUp(event:MouseEvent):void
			{
//				graphic.clear();
//				for (var i:int=1; i <= count; i++)
//				{
//					log.info("onMouseUp count:{0}", count);
//					var endImg:Image=pm.columnarGroup.getElementAt(i) as Image;
//					drawLine(startImg, endImg);
//				}
			}

			protected function alarmWindow_maximizeHandler(event:WindowExtEvent):void
			{
				if (alarmWindowHeight == 0)
				{
					alarmWindowHeight=alarmWindow.height;
				}
//				topuWindow.visible=false;
//				topuWindow.includeInLayout=false;
//				runWindow.visible=false;
//				runWindow.includeInLayout=false;
//				faultWindow.visible=false;
//				faultWindow.includeInLayout=false;
//				complintWindow.visible=false;
//				complintWindow.includeInLayout=false;

				alarmWindow.restoreButton.visible=true;
				alarmWindow.restoreButton.includeInLayout=true;
				alarmWindow.maximizeButton.visible=false;
				alarmWindow.maximizeButton.includeInLayout=false;
				alarmWindow.minimizeButton.visible=true;
				alarmWindow.minimizeButton.includeInLayout=true;
				//alarmWindow.height=allGroup.height;
				alarmWindow.percentHeight=100;
				alarmWindow.contentGroup.visible=true;
				alarmWindow.contentGroup.includeInLayout=true;
			}

			protected function alarmWindow_minimizeHandler(event:WindowExtEvent):void
			{
				if (alarmWindowHeight == 0)
				{
					alarmWindowHeight=alarmWindow.height;
				}
//				topuWindow.visible=true;
//				topuWindow.includeInLayout=true;
//				runWindow.visible=true;
//				runWindow.includeInLayout=true;
//				faultWindow.visible=true;
//				faultWindow.includeInLayout=true;
//				complintWindow.visible=true;
//				complintWindow.includeInLayout=true;

				alarmWindow.height=alarmWindow.minHeight;
				alarmWindow.contentGroup.visible=false;
				alarmWindow.contentGroup.includeInLayout=false;
				alarmWindow.restoreButton.visible=true;
				alarmWindow.restoreButton.includeInLayout=true;
				alarmWindow.maximizeButton.visible=true;
				alarmWindow.maximizeButton.includeInLayout=true;
				alarmWindow.minimizeButton.visible=false;
				alarmWindow.minimizeButton.includeInLayout=false;

			}

			protected function alarmWindow_restoreHandler(event:WindowExtEvent):void
			{
				if (alarmWindowHeight == 0)
				{
					return;
				}
//				topuWindow.visible=true;
//				topuWindow.includeInLayout=true;
//				runWindow.visible=true;
//				runWindow.includeInLayout=true;
//				faultWindow.visible=true;
//				faultWindow.includeInLayout=true;
//				complintWindow.visible=true;
//				complintWindow.includeInLayout=true;

				alarmWindow.height=alarmWindowHeight;
				alarmWindow.contentGroup.visible=true;
				alarmWindow.contentGroup.includeInLayout=true;
				alarmWindow.restoreButton.visible=false;
				alarmWindow.restoreButton.includeInLayout=false;
				alarmWindow.minimizeButton.visible=true;
				alarmWindow.minimizeButton.includeInLayout=true;
				alarmWindow.maximizeButton.visible=true;
				alarmWindow.maximizeButton.includeInLayout=true;
			}

			protected function topuWindow_maximizeHandler(event:WindowExtEvent):void
			{
				if (topuWindowHeight == 0)
				{
					topuWindowHeight=topuWindow.height;
				}
//				alarmWindow.visible=false;
//				alarmWindow.includeInLayout=false;
//				runWindow.visible=false;
//				runWindow.includeInLayout=false;
//				faultWindow.visible=false;
//				faultWindow.includeInLayout=false;
//				complintWindow.visible=false;
//				complintWindow.includeInLayout=false;

				topuWindow.restoreButton.visible=true;
				topuWindow.restoreButton.includeInLayout=true;
				topuWindow.maximizeButton.visible=false;
				topuWindow.maximizeButton.includeInLayout=false;
				topuWindow.minimizeButton.visible=true;
				topuWindow.minimizeButton.includeInLayout=true;
				//topuWindow.height=allGroup.height;
				topuWindow.percentHeight=100;
				topuWindow.contentGroup.visible=true;
				topuWindow.contentGroup.includeInLayout=true;
			}

			protected function topuWindow_minimizeHandler(event:WindowExtEvent):void
			{
				if (topuWindowHeight == 0)
				{
					topuWindowHeight=topuWindow.height;
				}
//				alarmWindow.visible=true;
//				alarmWindow.includeInLayout=true;
//				runWindow.visible=true;
//				runWindow.includeInLayout=true;
//				faultWindow.visible=true;
//				faultWindow.includeInLayout=true;
//				complintWindow.visible=true;
//				complintWindow.includeInLayout=true;

				topuWindow.height=topuWindow.minHeight;
				topuWindow.contentGroup.visible=false;
				topuWindow.contentGroup.includeInLayout=false;
				topuWindow.restoreButton.visible=true;
				topuWindow.restoreButton.includeInLayout=true;
				topuWindow.maximizeButton.visible=true;
				topuWindow.maximizeButton.includeInLayout=true;
				topuWindow.minimizeButton.visible=false;
				topuWindow.minimizeButton.includeInLayout=false;
			}

			protected function topuWindow_restoreHandler(event:WindowExtEvent):void
			{
				if (topuWindowHeight == 0)
				{
					return;
				}
//				alarmWindow.visible=true;
//				alarmWindow.includeInLayout=true;
//				runWindow.visible=true;
//				runWindow.includeInLayout=true;
//				faultWindow.visible=true;
//				faultWindow.includeInLayout=true;
//				complintWindow.visible=true;
//				complintWindow.includeInLayout=true;

				topuWindow.height=topuWindowHeight;
				topuWindow.contentGroup.visible=true;
				topuWindow.contentGroup.includeInLayout=true;
				topuWindow.restoreButton.visible=false;
				topuWindow.restoreButton.includeInLayout=false;
				topuWindow.minimizeButton.visible=true;
				topuWindow.minimizeButton.includeInLayout=true;
				topuWindow.maximizeButton.visible=true;
				topuWindow.maximizeButton.includeInLayout=true;
			}

			protected function runWindow_maximizeHandler(event:WindowExtEvent):void
			{
				if (runWindowHeight == 0)
				{
					runWindowHeight=runWindow.height;
				}
//				alarmWindow.visible=false;
//				alarmWindow.includeInLayout=false;
//				topuWindow.visible=false;
//				topuWindow.includeInLayout=false;
//				faultWindow.visible=false;
//				faultWindow.includeInLayout=false;
//				complintWindow.visible=false;
//				complintWindow.includeInLayout=false;

				runWindow.restoreButton.visible=true;
				runWindow.restoreButton.includeInLayout=true;
				runWindow.maximizeButton.visible=false;
				runWindow.maximizeButton.includeInLayout=false;
				runWindow.minimizeButton.visible=true;
				runWindow.minimizeButton.includeInLayout=true;
				//runWindow.height=allGroup.height;
				runWindow.percentHeight=100;
				runWindow.contentGroup.visible=true;
				runWindow.contentGroup.includeInLayout=true;
			}

			protected function runWindow_minimizeHandler(event:WindowExtEvent):void
			{
				if (runWindowHeight == 0)
				{
					runWindowHeight=runWindow.height;
				}
//				topuWindow.visible=true;
//				topuWindow.includeInLayout=true;
//				alarmWindow.visible=true;
//				alarmWindow.includeInLayout=true;
//				faultWindow.visible=true;
//				faultWindow.includeInLayout=true;
//				complintWindow.visible=true;
//				complintWindow.includeInLayout=true;

				runWindow.height=runWindow.minHeight;
				runWindow.contentGroup.visible=false;
				runWindow.contentGroup.includeInLayout=false;
				runWindow.restoreButton.visible=true;
				runWindow.restoreButton.includeInLayout=true;
				runWindow.maximizeButton.visible=true;
				runWindow.maximizeButton.includeInLayout=true;
				runWindow.minimizeButton.visible=false;
				runWindow.minimizeButton.includeInLayout=false;

			}

			protected function runWindow_restoreHandler(event:WindowExtEvent):void
			{
				if (runWindowHeight == 0)
				{
					return;
				}
//				alarmWindow.visible=true;
//				alarmWindow.includeInLayout=true;
//				topuWindow.visible=true;
//				topuWindow.includeInLayout=true;
//				faultWindow.visible=true;
//				faultWindow.includeInLayout=true;
//				complintWindow.visible=true;
//				complintWindow.includeInLayout=true;

				runWindow.height=runWindowHeight;
				runWindow.contentGroup.visible=true;
				runWindow.contentGroup.includeInLayout=true;
				runWindow.restoreButton.visible=false;
				runWindow.restoreButton.includeInLayout=false;
				runWindow.minimizeButton.visible=true;
				runWindow.minimizeButton.includeInLayout=true;
				runWindow.maximizeButton.visible=true;
				runWindow.maximizeButton.includeInLayout=true;
			}

			protected function faultWindow_maximizeHandler(event:WindowExtEvent):void
			{
				if (faultWindowHeight == 0)
				{
					faultWindowHeight=faultWindow.height;
				}
//				alarmWindow.visible=false;
//				alarmWindow.includeInLayout=false;
//				topuWindow.visible=false;
//				topuWindow.includeInLayout=false;
//				runWindow.visible=false;
//				runWindow.includeInLayout=false;
//				complintWindow.visible=false;
//				complintWindow.includeInLayout=false;

				faultWindow.restoreButton.visible=true;
				faultWindow.restoreButton.includeInLayout=true;
				faultWindow.maximizeButton.visible=false;
				faultWindow.maximizeButton.includeInLayout=false;
				faultWindow.minimizeButton.visible=true;
				faultWindow.minimizeButton.includeInLayout=true;
				//faultWindow.height=allGroup.height;
				faultWindow.percentHeight=100;
				faultWindow.contentGroup.visible=true;
				faultWindow.contentGroup.includeInLayout=true;
			}

			protected function faultWindow_minimizeHandler(event:WindowExtEvent):void
			{
				if (faultWindowHeight == 0)
				{
					faultWindowHeight=faultWindow.height;
				}
//				topuWindow.visible=true;
//				topuWindow.includeInLayout=true;
//				alarmWindow.visible=true;
//				alarmWindow.includeInLayout=true;
//				runWindow.visible=true;
//				runWindow.includeInLayout=true;
//				complintWindow.visible=true;
//				complintWindow.includeInLayout=true;

				faultWindow.height=faultWindow.minHeight;
				faultWindow.contentGroup.visible=false;
				faultWindow.contentGroup.includeInLayout=false;
				faultWindow.restoreButton.visible=true;
				faultWindow.restoreButton.includeInLayout=true;
				faultWindow.maximizeButton.visible=true;
				faultWindow.maximizeButton.includeInLayout=true;
				faultWindow.minimizeButton.visible=false;
				faultWindow.minimizeButton.includeInLayout=false;

			}

			protected function faultWindow_restoreHandler(event:WindowExtEvent):void
			{
				if (faultWindowHeight == 0)
				{
					return;
				}
//				alarmWindow.visible=true;
//				alarmWindow.includeInLayout=true;
//				topuWindow.visible=true;
//				topuWindow.includeInLayout=true;
//				runWindow.visible=true;
//				runWindow.includeInLayout=true;
//				complintWindow.visible=true;
//				complintWindow.includeInLayout=true;

				faultWindow.height=faultWindowHeight;
				faultWindow.contentGroup.visible=true;
				faultWindow.contentGroup.includeInLayout=true;
				faultWindow.restoreButton.visible=false;
				faultWindow.restoreButton.includeInLayout=false;
				faultWindow.minimizeButton.visible=true;
				faultWindow.minimizeButton.includeInLayout=true;
				faultWindow.maximizeButton.visible=true;
				faultWindow.maximizeButton.includeInLayout=true;
			}

			protected function complintWindow_maximizeHandler(event:WindowExtEvent):void
			{
				if (complintWindowHeight == 0)
				{
					complintWindowHeight=complintWindow.height;
				}
//				alarmWindow.visible=false;
//				alarmWindow.includeInLayout=false;
//				topuWindow.visible=false;
//				topuWindow.includeInLayout=false;
//				runWindow.visible=false;
//				runWindow.includeInLayout=false;
//				faultWindow.visible=false;
//				faultWindow.includeInLayout=false;

				complintWindow.restoreButton.visible=true;
				complintWindow.restoreButton.includeInLayout=true;
				complintWindow.maximizeButton.visible=false;
				complintWindow.maximizeButton.includeInLayout=false;
				complintWindow.minimizeButton.visible=true;
				complintWindow.minimizeButton.includeInLayout=true;
				//complintWindow.height=allGroup.height;
				complintWindow.percentHeight=100;
				complintWindow.contentGroup.visible=true;
				complintWindow.contentGroup.includeInLayout=true;
			}

			protected function complintWindow_minimizeHandler(event:WindowExtEvent):void
			{
				if (complintWindowHeight == 0)
				{
					complintWindowHeight=complintWindow.height;
				}
//				topuWindow.visible=true;
//				topuWindow.includeInLayout=true;
//				alarmWindow.visible=true;
//				alarmWindow.includeInLayout=true;
//				runWindow.visible=true;
//				runWindow.includeInLayout=true;
//				faultWindow.visible=true;
//				faultWindow.includeInLayout=true;

				complintWindow.height=complintWindow.minHeight;
				complintWindow.contentGroup.visible=false;
				complintWindow.contentGroup.includeInLayout=false;
				complintWindow.restoreButton.visible=true;
				complintWindow.restoreButton.includeInLayout=true;
				complintWindow.maximizeButton.visible=true;
				complintWindow.maximizeButton.includeInLayout=true;
				complintWindow.minimizeButton.visible=false;
				complintWindow.minimizeButton.includeInLayout=false;
			}

			protected function complintWindow_restoreHandler(event:WindowExtEvent):void
			{
				if (complintWindowHeight == 0)
				{
					return;
				}
//				alarmWindow.visible=true;
//				alarmWindow.includeInLayout=true;
//				topuWindow.visible=true;
//				topuWindow.includeInLayout=true;
//				runWindow.visible=true;
//				runWindow.includeInLayout=true;
//				faultWindow.visible=true;
//				faultWindow.includeInLayout=true;

				complintWindow.height=complintWindowHeight;
				complintWindow.contentGroup.visible=true;
				complintWindow.contentGroup.includeInLayout=true;
				complintWindow.restoreButton.visible=false;
				complintWindow.restoreButton.includeInLayout=false;
				complintWindow.minimizeButton.visible=true;
				complintWindow.minimizeButton.includeInLayout=true;
				complintWindow.maximizeButton.visible=true;
				complintWindow.maximizeButton.includeInLayout=true;
			}

			protected function speLine_minimizeHandler(event:WindowEvent):void
			{
				speLineWindow.height=faultWindow.minHeight;
				speLineWindow.width=100;
			}

			protected function runCountWindow_minimizeHandler(event:WindowEvent):void
			{
				runCountWindow.height=faultWindow.minHeight;
				runCountWindow.width=100;
			}

			protected function functionWindow_minimizeHandler(event:WindowEvent):void
			{
				functionWindow.height=functionWindow.minHeight;
				functionWindow.width=100;
			}

			protected function typeRadioGroup_clickHandler(event:MouseEvent):void
			{
				pm.type=typeRadioGroup.selection.value.toString();
				pm.loadBaseTree();
			}

			protected function advanceddatagrid1_itemClickHandler(e:ListEvent):void
			{
				var fil:String="custcity=\"" + e.target.dataProvider[e.rowIndex]['cityname'] + "\"";
				if (flag == 1)
				{
					filter=pm.dm.userInSql;
				}
				if ("全省" == e.target.dataProvider[e.rowIndex]['cityname'])
				{
					fil="";
				}
				if ("alarmnum" == runDG.columns[e.columnIndex].dataField)
				{
					log.info("===filter" + filter);
					if ("" != filter)
					{
						if ("全省" != e.target.dataProvider[e.rowIndex]['cityname'])
						{
							fil=filter + "&" + fil;
						}
						else
						{
							fil=filter;
						}

					}
					log.info("fil=" + fil);
					alarmWindow.loadAlarm(fil);
					alarmWindow.visible=true;
				}
				else if ("complaintsnum" == runDG.columns[e.columnIndex].dataField)
				{
					log.info("defFirstFlag" + defFirstFlag);
					if (defFirstFlag)
					{
						var evt:CustSceneEvent=new CustSceneEvent(CustSceneEvent.LOAD_COMPLAINTS_ORDER_INIT);
						evt.param=new Object;
						if ("全省" != e.target.dataProvider[e.rowIndex]['cityname'])
						{
							evt.param.cityName=e.target.dataProvider[e.rowIndex]['cityname'];
						}
						msgDispatcher(evt);
						log.info("msgDispatcher========= over");
					}
					complintWindow.visible=true;
				}
				else if ("faultnum" == runDG.columns[e.columnIndex].dataField)
				{
					log.info("defFirstFlag" + defFirstFlag);
					if (defFirstFlag)
					{
						var evt2:CustSceneEvent=new CustSceneEvent(CustSceneEvent.LOAD_FAULT_ORDER_INIT);
						evt2.param=new Object;
						if ("全省" != e.target.dataProvider[e.rowIndex]['cityname'])
						{
							evt2.param.cityName=e.target.dataProvider[e.rowIndex]['cityname'];
						}
						msgDispatcher(evt2);
						log.info("msgDispatcher========= over");
					}
					faultWindow.visible=true;
				}
			}

			protected function button1_clickHandler(event:MouseEvent):void
			{
				log.info("11111]]]]]]]]]]]");
				topuWindow.title="陕西移动集团大客户场景监控图(" + cust_name + ")";
				defFirstFlag=false;
				navTree.selectedItem=treeOpenItem
				funPerfComp.showFirst=true;
				funPerfComp.big="1";
				picWindow.visible=false
				//加载完再加载所有客户的流水
				log.info("treeChang load big cust data");
				var evtPanel:CustSceneEvent=new CustSceneEvent(CustSceneEvent.LOAD_PANEL_DATA_BY_CUSTID);
				var paramPanel:Object=new Object();
				paramPanel.cust_id=cust_id;
				evtPanel.param=paramPanel;
				msgDispatcher(evtPanel);

				var evt1:CustSceneEvent=new CustSceneEvent(CustSceneEvent.LOAS_USER_CUST_DATA);
				var param1:Object=new Object();
				param1.cust_id=cust_id;
				evt1.param=param1;
				msgDispatcher(evt1);

				var evt2:CustSceneEvent=new CustSceneEvent(CustSceneEvent.LOAD_OTHER_DATA_BYCUSTBYID);
				var param2:Object=new Object();
				param2.cust_id=cust_id;
				evt2.param=param2;
				msgDispatcher(evt2);

			/* 	var evt3:CustSceneEvent=new CustSceneEvent(CustSceneEvent.LOAD_SPE_LINE_FAULT_ANALYSIS);
				var param3:Object=new Object();
				param3.cust_id=cust_id;
				evt3.param=param3;
				msgDispatcher(evt3);
				
				var evt4:CustSceneEvent=new CustSceneEvent(CustSceneEvent.LOAD_SPE_LINE_COMP_ANALYSIS);
				var param4:Object=new Object();
				param4.cust_id=cust_id;
				evt4.param=param4;
				msgDispatcher(evt4); */

//				var evt3:CustSceneEvent=new CustSceneEvent(CustSceneEvent.LOAD_SERVER_TYPE_BY_CUSTID);
//				var param3:Object=new Object();
//				param3.cust_id=cust_id;
//				evt3.param=param3;
//				msgDispatcher(evt3);

				var evt3:CustSceneEvent=new CustSceneEvent(CustSceneEvent.LOAD_USER_CUST_BY_BIGCUST);
				var param3:Object=new Object();
				param3.custNo=cust_id;
				param3.type=1;
				evt3.param=param3;
				msgDispatcher(evt3);

				if (pm.columnarGroup)
				{
					try
					{
						mapWork.removeElement(pm.columnarGroup);
					}
					catch (e:Error)
					{
					}
				}
				graphic.clear();
				picLine.removeAllElements();
//				if (custRealPerfComp)
//				{
//					custRealPerfComp.clear();
//				}
				funPerfComp.clear();
				visPanel();
			}

			private var fileRefer:FileReference=new FileReference();
			private var fileUpDownLoad:FileUpDownLoad;
			private var fileName:String="";
			private var imagesFilter:FileFilter=new FileFilter("Images", "*.jpg;*.gif;*.png");

			protected function upload_clickHandler(event:MouseEvent):void
			{
				fileUpDownLoad=new FileUpDownLoad();
				fileUpDownLoad.fileFilters=new Array();
				fileUpDownLoad.fileFilters.push(imagesFilter);
				log.info("cust_id" + cust_id);
				var upLoadUrl:URLRequest=new URLRequest("/cms/groupscene/groupscene!fileUpload.action");
				var upLoadData:URLVariables=new URLVariables();
				upLoadData.custNo=cust_id;
				upLoadUrl.method="POST";
				upLoadUrl.data=upLoadData;
				upLoadUrl.contentType="multipart/form-data";
				fileUpDownLoad.upLoadURLRequest=upLoadUrl;
				fileUpDownLoad.upLoad();
				fileUpDownLoad.fileRefer.addEventListener(ProgressEvent.PROGRESS, progressHandler);
				fileUpDownLoad.fileRefer.addEventListener(Event.COMPLETE, onCompleteHandler);
				fileUpDownLoad.fileRefer.addEventListener(IOErrorEvent.IO_ERROR, onIOErrorHandler);
			}

			private function onCompleteHandler(e:Event):void
			{
				var le:Number=String(e.target.name).split(".").length;
				picUrl=user.context + "custLogo/" + cust_id + "." + String(e.target.name).split(".")[le - 1];
				showImg.source=picUrl;
				treeOpenItem.@path="custLogo/" + cust_id + "." + String(e.target.name).split(".")[le - 1];
				log.info("url" + picUrl);
			}

			private function onIOErrorHandler(event:IOErrorEvent):void
			{
				Alert.show("上传失败", "失败");
			}

			private function progressHandler(event:ProgressEvent):void
			{
				progressBar.setProgress(event.bytesLoaded, event.bytesTotal);
			}

			protected function returnMap_clickHandler(event:MouseEvent=null):void
			{
				flag=1;
				citySaveList.removeAll();
				citySaveList.refresh();
				cityCustLineList.removeAll();
				cityCustLineList.refresh();
				cityForSpecMap=new Array();
				
				if (pm.disGroup)
				{
					
					try
					{
						cityMapWork.removeElement(pm.disGroup);
					}
					catch (e:Error)
					{

					}
				}

				grapCitySpec.clear();
				grapCityCust.clear();
				cityCustLine.removeAllElements();
				tupoGroup.visible=false;
				districtGroup.visible=false;
				mapWork.visible=true;
				picLine.visible=true;
				picLineProOverCity.visible=true;
				var evt3:CustSceneEvent=new CustSceneEvent(CustSceneEvent.LOAD_USER_CUST_BY_BIGCUST);
				var param3:Object=new Object();
				param3.custNo=cust_id;
				param3.type=1;
				evt3.param=param3;
				msgDispatcher(evt3);

				var evtPanel:CustSceneEvent=new CustSceneEvent(CustSceneEvent.LOAD_PANEL_DATA_BY_CUSTID);
				var paramPanel:Object=new Object();
				paramPanel.cust_id=cust_id;
				evtPanel.param=paramPanel;
				msgDispatcher(evtPanel);
			}

			protected function returnDistrict_clickHandler(event:MouseEvent=null):void
			{
				flag=2;
				tupoGroup.visible=false;
				districtGroup.visible=true;
				mapWork.visible=false;
				picLine.visible=false;
				picLineProOverCity.visible=false;

				var evt3:CustSceneEvent=new CustSceneEvent(CustSceneEvent.LOAD_USER_CUST_BY_BIGCUST);
				var param3:Object=new Object();
				param3.custNo=cust_id;
				param3.type=2;
				param3.cityId=city_Id;
				evt3.param=param3;
				msgDispatcher(evt3);
			}

			[MessageHandler(selector="SHOW_CHART")]
			public function showChart(e:CustSceneEvent):void
			{
				runWindow.visible=true;
//				custRealPerfComp.cusId=e.param.custId;
//				custRealPerfComp.servTypeId=e.param.servTypeId;
//				custRealPerfComp.servTypeName=e.param.cust_serv_type_name;
				var param:Object=new Object;
				param.servTypeId=e.param.servTypeId;
				var evt:CustSceneEvent=new CustSceneEvent(CustSceneEvent.LOAD_KPI_GROUP_BY_CUST_ID);
				evt.param=param;
				msgDispatcher(evt);
			}


			[MessageHandler(selector="CUST_PANEL_INIT_DATA_COMP")]
			public function resiseLeftDataGrid(e:CustSceneEvent):void
			{
				leftDataGird.rowCount=pm.dm.panelLeftList.length - 1;
				leftDataGird.height=pm.dm.panelLeftList.length * 22;
			}

			public var tempParam:Object;

			[MessageHandler(selector="SHOWPERFPANEL")]
			public function showPerfPanel(e:CustSceneEvent):void
			{
				runGrid.param=e.param;
				runWindow.visible=true;
				runGrid.query_clickHandler();
			}

			private function visPanel():void
			{
				alarmWindow.visible=false;
				runWindow.visible=false;
				faultWindow.visible=false;
				complintWindow.visible=false;
			}

			private function resizeWindow(id:Number):void
			{
				if (!leftNormalWidth || leftNormalWidth == 0)
				{
					leftNormalWidth=leftGroup.width;
				}
				switch (id)
				{
					case 3:
						if (isLeftShow && isRightShow)
						{
							leftGroup.visible=false;
							leftGroup.includeInLayout=false;
							isLeftShow=false;
							mapWork.left=30;
							picLine.left=30;
						}
						else
						{
							leftGroup.width=leftNormalWidth;
							allGroup.visible=true;
							allGroup.includeInLayout=true;
							isRightShow=true;
						}

						break;
					case 4:
						if (!isLeftShow && isRightShow)
						{
							leftGroup.visible=true;
							leftGroup.includeInLayout=true;
							isLeftShow=true;
							mapWork.left=50;
							picLine.left=50;
						}
						else
						{
							allGroup.visible=false;
							allGroup.includeInLayout=false;
							leftGroup.percentWidth=100;
							isRightShow=false;
						}
						break;
				}
			}

			protected function setCust_clickHandler(event:MouseEvent):void
			{
				custSetPanel.visible=true;
			}

			protected function save_clickHandler(event:MouseEvent):void
			{
				var evt:CustSceneEvent=new CustSceneEvent(CustSceneEvent.SAVE_SET_CUSTS);
				msgDispatcher(evt);
			}

			protected function rightall_clickHandler(event:MouseEvent):void
			{
				pm.dm.selUsersList.addAll(pm.dm.usersList as IList);
				pm.dm.selUsersList.refresh();
				pm.dm.usersList.removeAll();
				pm.dm.usersList.refresh();
			}

			protected function rightMove_clickHandler(event:MouseEvent):void
			{
				log.info("[rightMove]");
				var arr:Array=unselCustGrid.selectedItems;
				var index:Number=-1;
				for each (var obj:Object in arr)
				{
					index=pm.dm.usersList.getItemIndex(obj);
					pm.dm.selUsersList.addItem(obj);
					pm.dm.usersList.removeItemAt(index);
				}
				pm.dm.selUsersList.refresh();
				pm.dm.usersList.refresh();

			}

			protected function leftMove_clickHandler(event:MouseEvent):void
			{
				log.info("[leftMove]");
				var arr:Array=selCustGrid.selectedItems;
				var index:Number=-1;
				for each (var obj:Object in arr)
				{
					index=pm.dm.selUsersList.getItemIndex(obj);
					pm.dm.usersList.addItem(obj);
					pm.dm.selUsersList.removeItemAt(index);
				}
				pm.dm.selUsersList.refresh();
				pm.dm.usersList.refresh();

			}

			protected function leftMoveAll_clickHandler(event:MouseEvent):void
			{
				pm.dm.usersList.addAll(pm.dm.selUsersList as IList);
				pm.dm.usersList.refresh();
				pm.dm.selUsersList.removeAll();
				pm.dm.selUsersList.refresh();

			}

			protected function queryCust_clickHandler(event:MouseEvent):void
			{
				var evt:CustSceneEvent=new CustSceneEvent(CustSceneEvent.QUERY_CUST_BY_CONDITION);
				var param:Object=new Object;
				param.industry=industryDD.selectedItem.industry;
				param.servLvl=servLvlDD.selectedItem.servLvlId;
				param.custName=custName.text;
				param.userLvl=userLvlDD.selectedItem.userLvlId;
				param.cityId=cityDD.selectedItem.cityId;
				evt.param=param;
				msgDispatcher(evt);
			}

			private var modifyId:String;
			private var type:String="0";

			protected function modifyCustNameButton_clickHandler(event:MouseEvent):void
			{
				var evt:CustSceneEvent=new CustSceneEvent(CustSceneEvent.MODIFY_CUST_NAME);
				evt.param=new Object;
				evt.param.cust_name=custNameInput.text;
				evt.param.cust_no=modifyId;
				evt.param.type=type;
				msgDispatcher(evt);
			}

			[Bindable]
			private var flag:Number=1;

			protected function saveLocation_clickHandler(event:MouseEvent):void
			{
				var evt:CustSceneEvent=new CustSceneEvent(CustSceneEvent.SAVE_CUST_LOCATION);
				evt.param=new Object();
				if (1 == flag)
				{
					log.info("1 == flag");
					evt.param=proSaveList;
				}
				else if (2 == flag)
				{
					log.info("2 == flag");
					evt.param=citySaveList;
				}
				else
				{
					log.info("3 == flag");
					evt.param=spceSaveList;
				}
				log.info("saveLocation_clickHandler");
				log.info(evt.param);
				msgDispatcher(evt);
			}

			protected function button2_clickHandler(event:MouseEvent):void
			{
				selDataGird.visible=true;
				selDataGird.includeInLayout=true;
				returnMap_clickHandler();
				var evt:CustSceneEvent=new CustSceneEvent(CustSceneEvent.LOAD_SELECTLIST_BYNAME);
				evt.param=new Object;
				evt.param.type=typeRadioGroup.selection.value.toString();
				evt.param.name=nameInput.text;
				msgDispatcher(evt);

			}

			private var tempData:Object;
			//是否是点击小图标加载的树
			private var flagTag:Boolean=true;

			protected function selDataGird_itemClickHandler(e:ListEvent):void
			{
				var data:Object=pm.dm.selCustList[e.rowIndex];
				tempData=data;
				forEachTree(pm.dm.treeData, function(node:XML):void
					{
						log.info("a=" + String(node.@A) + "node=" + String(data["node"]));
						if (String(node.@B) == String(data["node"]))
						{
							treeOpenItem=node;
							flagTag=false;
							var evtCust:CustSceneEvent=new CustSceneEvent(CustSceneEvent.LOAD_PAGE_TREE_DATA);
							var paramCust:Object=new Object();
							paramCust.name=String(node.@B);
							paramCust.cp="1";
							paramCust.type=typeRadioGroup.selection.value.toString();
							evtCust.param=paramCust;
							msgDispatcher(evtCust);
						}
					});
			}

			//向下迭代
			private function forEachTree(node:XML, callback:Function=null):void
			{
				for each (var child:XML in node.children())
				{
					if (callback is Function)
					{
						callback.call(null, child);
					}
					if (child.hasComplexContent())
					{
						forEachTree(child, callback);
					}
				}
			}

			protected function modifyColButton_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				var evt:CustSceneEvent=new CustSceneEvent(CustSceneEvent.MODIFY_COLOR);
				evt.param=new Object;
				evt.param.level=String(flag);
				evt.param.type=type;
				evt.param.color=fColorPicker.selectedColor.toString(16);
				msgDispatcher(evt);
			}

			protected function returnBack_clickHandler(event:MouseEvent):void
			{
				if (flag == 2)
				{
					returnMap_clickHandler();
				}
				else if (flag == 3)
				{
					returnDistrict_clickHandler();
				}
			}
			
			protected function emprotData_clickHandler():void
			{
				var monthSpace:Number = exportEndTime.selectedDate.month - exportStartTime.selectedDate.month;
				var startTimeDay:Number = exportStartTime.selectedDate.getTime();
				var endTimeDay:Number = exportEndTime.selectedDate.getTime();
				
				log.info("monthSpace="+monthSpace+"--startTimeDay="+startTimeDay+"--endTimeDay="+endTimeDay);
				
				if(monthSpace != 0)
				{
					Alert.show("开始时间与结束时间必须在同一个月范围内","提示");
					exportStartTime.selectedDate = new Date();
					exportEndTime.selectedDate = new Date();
				}else
				{
					if(startTimeDay > endTimeDay)
					{
						Alert.show("开始时间必须小于结束时间","提示");
						exportStartTime.selectedDate = new Date();
						exportEndTime.selectedDate = new Date();
					}else
					{
						
						var evt2:CustSceneEvent=new CustSceneEvent(CustSceneEvent.LOAD_SPE_LINE_FAULT_ANALYSIS);
						var param2:Object=new Object();
						param2.cust_no=cust_id;
						param2.cust_name=cust_name;
						param2.startTime = exportStartTime.text;
						param2.endTime = exportEndTime.text;
						evt2.param=param2;
						msgDispatcher(evt2);
						
						var evt3:CustSceneEvent=new CustSceneEvent(CustSceneEvent.LOAD_SPE_LINE_COMP_ANALYSIS);
						var param3:Object=new Object();
						param3.cust_no=cust_id;
						param3.cust_name=cust_name;
						param3.startTime = exportStartTime.text;
						param3.endTime = exportEndTime.text;
						param3.startTime1 = exportStartTime.text;
						param3.endTime1 = exportEndTime.text;
						evt3.param=param3;
						msgDispatcher(evt3);
						log.info("exportStartTime.text="+exportStartTime.text+"exportEndTime="+exportEndTime.text);
					}
				}
				
				
				
				
			}
			
//			[MessageHandler(selector="FINISH_CHART")]
//			protected function finishChartExport(event:CustSceneEvent):void
			protected function finishChartExport():void
			{
				speLineWindow.visible = false;
				runCountWindow.visible = false;
				functionWindow.visible = false;
				exportDataPanel.visible = false;
				topContainer.visible = false;
				mapScroller.verticalScrollBar.visible = false;
					
				log.info("FINISH_CHART  speLineFaultAnalysisChartFinish="+speLineFaultAnalysisChartFinish+"--speLineComplaintsAnalysisChartFinish="+speLineComplaintsAnalysisChartFinish);
				
				if(speLineFaultAnalysisChartFinish == true && speLineComplaintsAnalysisChartFinish == true)
				{
					var ohSnap:ImageSnapshot = ImageSnapshot.captureImage(topuWindow); 
					setTimeout(function():void
					{
						log.info("2000 ---exportStartTime.text"+exportStartTime.text+"===exportEndTime.text="+exportEndTime.text);
						
						speLineFaultAnalysisWindow.visible = true;
						speLineComplaintsAnalysisWindow.visible = true;
						
						var ohSnap1:ImageSnapshot = ImageSnapshot.captureImage(speLineFaultAnalysisWindow); 
						var ohSnap2:ImageSnapshot = ImageSnapshot.captureImage(speLineComplaintsAnalysisWindow); 
						var params:URLVariables  = new URLVariables();
						
						params.startTime = exportStartTime.text;
						params.endTime = exportEndTime.text;
						params.perfCustId = perfCustId;
						params.gcId = cust_id;
						params.type = myDDL.selectedItem["type"];
						params.gcName = encodeURI(perfCustName);
						
						params.groupCustomerTopoImg  = ImageSnapshot.encodeImageAsBase64(ohSnap);
						params.lineAnalysisImg = ImageSnapshot.encodeImageAsBase64(ohSnap1);
						params.complainAnalysisImg = ImageSnapshot.encodeImageAsBase64(ohSnap2);
						
						params.totalComplaintCount = totalComplaintCount;
						params.totalComplaintTime = totalComplaintTime;
						params.totalFaultCount = totalFaultCount;
						params.totalFaultTime = totalFaultTime;
						
						var url:String = "/cms/groupscene/groupexport.action";
						
						log.info("导出信息");
						log.info(params);
						
						ExternalInterface.call("export2word", url,params);
						
						speLineWindow.visible = true;
						runCountWindow.visible = true;
						functionWindow.visible = true;
						speLineFaultAnalysisWindow.visible = false;
						speLineComplaintsAnalysisWindow.visible = false;
						topContainer.visible = true;
						mapScroller.verticalScrollBar.visible = true;
						
						speLineFaultAnalysisChartFinish = false;
						speLineComplaintsAnalysisChartFinish = false;
						
					}, 2000);
					
					
					
					
				}
				
			}
			
			protected function exportDataImg_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				if(perfCustId == null || perfCustId == "")
				{
					Alert.show("请选择集团客户", "提示");
				}else{
					exportDataPanel.visible = true;
					exportDataPanel.includeInLayout = true;
				}
			}
			
			[MessageHandler(selector="SHOW_SPE_LINE_FAULT_ANALYSIS_DATA")]
			public function showFaultChart(event:CustSceneEvent):void
			{
				log.debug("[展示专线故障分析数据！]");
				
				/* PopUpManager.addPopUp(speLineFaultAnalysisWindow, this.parent as DisplayObject);
				speLineFaultAnalysisWindow.x = (this.stage.width - speLineFaultAnalysisWindow.width) / 2 - 150;
				speLineFaultAnalysisWindow.y = (this.stage.height - speLineFaultAnalysisWindow.height) / 2 - 50; */
				
				log.info("展示专线故障分析数据 柱状图：！" + pm.ccdm.speLineFaultList.length+"pm.ccdm.totalFaultTime="+pm.ccdm.totalFaultTime+"--pm.ccdm.totalFaultCount="+pm.ccdm.totalFaultCount);
				totalFaultTime = pm.ccdm.totalFaultTime;
				totalFaultCount = pm.ccdm.totalFaultCount;
				
				var p1:SerialParam = new SerialParam('sheetusetime','故障时长');
				p1.chartType = PrettyChartType.CHART_TYPE_COLUMN;
				var p2:SerialParam = new SerialParam('faultCount','故障次数');
				p2.chartType = PrettyChartType.CHART_TYPE_COLUMN;
				p2.yAxis = "right";
				
				var charParam:ChartParam = new ChartParam();
				charParam.xAxisProperty = "faultTime";
				charParam.showLegend = true;
				charParam.legendPositon = "bottom";
				log.info("charParam.legendPositon.length="+charParam.legendPositon.length);
				charParam.use3DColumn = false;
				this.speLineFaultAnalysisChart.chartParam = charParam;
				
				
				this.speLineFaultAnalysisChart.series = new ArrayCollection([p1,p2]);
				speLineFaultAnalysisChart.chartData(pm.ccdm.speLineFaultList, true);
				
				speLineFaultAnalysisChart.percentWidth = 100;
				speLineFaultAnalysisChart.height = 260;
				
				speLineFaultAnalysisChartFinish = true;
				
				finishChartExport();
			}
			
			[MessageHandler(selector="SHOW_SPE_LINE_COMP_ANALYSIS_DATA")]
			public function showCompChart(event:CustSceneEvent):void
			{
				log.debug("[展示专线1111分析数据------！]");
				
				/* PopUpManager.addPopUp(speLineFaultAnalysisWindow, this.parent as DisplayObject);
				speLineFaultAnalysisWindow.x = (this.stage.width - speLineFaultAnalysisWindow.width) / 2 - 150;
				speLineFaultAnalysisWindow.y = (this.stage.height - speLineFaultAnalysisWindow.height) / 2 - 50; */
				
				log.info("展示专线1111分析数据 柱状图：！" + pm.ccdm.speLineCompList.length+"pm.ccdm.totalComplaintCount="+pm.ccdm.totalComplaintCount+"--pm.ccdm.totalComplaintTime="+pm.ccdm.totalComplaintTime);
				totalComplaintCount = pm.ccdm.totalComplaintCount;
				totalComplaintTime = pm.ccdm.totalComplaintTime;
				
				var p1:SerialParam = new SerialParam('sheetusetime','投诉处理时长');
				p1.chartType = PrettyChartType.CHART_TYPE_COLUMN;
				var p2:SerialParam = new SerialParam('complaintCount','投诉次数');
				p2.chartType = PrettyChartType.CHART_TYPE_COLUMN;
				p2.yAxis = "right";
				
				var charParam:ChartParam = new ChartParam();
				charParam.xAxisProperty = "complaintTime";
				charParam.use3DColumn = false;
				charParam.showLegend = true;
				charParam.legendPositon = "bottom";
				this.speLineComplaintsAnalysisChart.chartParam = charParam;
				
				
				this.speLineComplaintsAnalysisChart.series = new ArrayCollection([p1,p2]);
				speLineComplaintsAnalysisChart.chartData(pm.ccdm.speLineCompList, true);
				
				speLineComplaintsAnalysisChart.percentWidth = 100;
				speLineComplaintsAnalysisChart.height = 260;
				speLineComplaintsAnalysisChartFinish = true;
				
				finishChartExport();
			}

//			protected function exportEndTime_changeHandler(event:CalendarLayoutChangeEvent):void
//			{
//				var monthSpace:Number = exportEndTime.selectedDate.month - exportEndTime.selectedDate.month;
//				var startTimeDay:Number = exportStartTime.selectedDate.getTime();
//				var endTimeDay:Number = exportEndTime.selectedDate.getTime();
//				
//				log.info("monthSpace="+monthSpace+"--startTimeDay="+startTimeDay+"--endTimeDay="+endTimeDay);
//				
//				if(monthSpace != 0)
//				{
//					Alert.show("开始时间与结束时间必须在同一个月范围内","提示");
//				}
//				
//				if(startTimeDay > endTimeDay)
//				{
//					Alert.show("开始时间必须小于结束时间","提示");
//				}
//			}
			
		]]>
	</fx:Script>

	<s:Group id="leftGroup"
			 width="260"
			 height="100%">
		<s:Button id="setCust"
				  buttonMode="true"
				  label="客户配置"
				  left="194"
				  top="28"
				  click="setCust_clickHandler(event)"/>
		<s:VGroup width="100%"
				  height="100%"
				  top="3">
			<s:HGroup width="100%"
					  verticalAlign="middle">
				<s:TextInput id="nameInput"
							 width="190"/>
				<mx:Image source="@Embed('../img/query.png')"
						  click="button2_clickHandler(event)"/>
				<!--<s:Button label="查询"
					 click="button2_clickHandler(event)"/>-->
			</s:HGroup>
			<mx:AdvancedDataGrid id="selDataGird"
								 top="23"
								 width="190"
								 visible="false"
								 rowCount="5"
								 includeInLayout="false"
								 dataProvider="{pm.dm.selCustList}"
								 itemClick="selDataGird_itemClickHandler(event)"
								 showHeaders="false">
				<mx:columns>
					<mx:AdvancedDataGridColumn dataField="cust_name"/>
				</mx:columns>
			</mx:AdvancedDataGrid>
			<s:TabBar dataProvider="{leftViewStack}"
					  buttonMode="true"
					  styleName="commonTabBar"
					  top="23"
					  width="160"/>
			<mx:ViewStack id="leftViewStack"
						  width="100%"
						  height="100%"
						  top="46"
						  creationPolicy="all"
						  styleName="commonViewStack">
				<s:NavigatorContent id="treeNav"
									label="导航树"
									width="100%"
									height="100%">
					<s:VGroup width="100%"
							  height="100%">
						<s:HGroup width="100%"
								  horizontalAlign="center"
								  verticalAlign="middle">
							<s:RadioButton label="行业"
										   value="1"
										   id="tradeRadio"
										   groupName="typeRadioGroup"
										   selected="true"
										   click="typeRadioGroup_clickHandler(event)"/>
							<s:RadioButton label="业务范围"
										   value="2"
										   id="busRadio"
										   groupName="typeRadioGroup"
										   click="typeRadioGroup_clickHandler(event)"/>
							<s:RadioButton label="客户级别"
										   value="3"
										   id="cusRadio"
										   groupName="typeRadioGroup"
										   click="typeRadioGroup_clickHandler(event)"/>
						</s:HGroup>
						<components:NavTree id="navTree"
											dataProvider="{pm.dm.treeData}"/>
					</s:VGroup>
				</s:NavigatorContent>
			</mx:ViewStack>
		</s:VGroup>
		<panel:Window width="230"
					  left="5"
					  top="240"
					  visible="false"
					  id="picWindow"
					  maximizable="false"
					  minimizable="false"
					  closable="true"
					  dragable="true"
					  close="picWindow.visible=false">
			<s:VGroup width="100%"
					  horizontalAlign="center">
				<s:HGroup width="100%"
						  horizontalAlign="center">
					<!--<s:TextInput width="100%"
						 text="{picUrl}"
						 enabled="true"/>-->
					<mx:Image source="{picUrl}"
							  width="80"
							  height="35"
							  id="showImg"/>
					<s:Button label="配置图标"
							  id="upload"
							  click="upload_clickHandler(event)"/>
				</s:HGroup>
				<s:Button label="加载集团大客户场景监控图"
						  height="100%"
						  click="button1_clickHandler(event)"/>
			</s:VGroup>
		</panel:Window>
	</s:Group>
	<s:VGroup width="5"
			  height="100%"
			  verticalAlign="middle">
		<mx:Image id="img3"
				  source="{pic11}"
				  click="resizeWindow(3);"
				  buttonMode="true">
		</mx:Image>
		<mx:Image id="img4"
				  source="{pic21}"
				  click="resizeWindow(4);"
				  buttonMode="true">
		</mx:Image>
	</s:VGroup>
	<s:VGroup width="100%"
			  height="100%"
			  gap="0"
			  id="allGroup">
		<cms:WindowExt width="100%"
					   height="100%"
					   id="topuWindow"
					   minimize="topuWindow_minimizeHandler(event)"
					   maximize="topuWindow_maximizeHandler(event)"
					   restore="topuWindow_restoreHandler(event)"
					   closable="false"
					   minimizable="false"
					   maximizable="false"
					   resizable="false"
					   title="陕西移动集团大客户场景监控图">
			<s:Group width="100%"
					 height="100%"
					 id="topuPicPanel">
				<s:Scroller width="100%"
							height="100%"
							verticalScrollPolicy="auto"
							horizontalScrollPolicy="auto"
							id="mapScroller">
					<s:Group width="100%"
							 height="100%"
							 id="mapGroup">
						<cms:MapWork id="mapWork"
									 width="100%"
									 height="100%"
									 left="50"
									 top="30">
						</cms:MapWork>
						<s:Group width="100%"
								 height="100%"
								 id="picLine"
								 left="50"
								 top="30"/>
						<s:Group width="100%"
								 height="100%"
								 id="picLineProOverCity"
								 left="50"
								 top="30"/>
						<s:Group width="100%"
								 height="100%"
								 id="districtGroup"
								 visible="false">
							<cms:MapWork id="xianMap"
										 width="100%"
										 height="100%"
										 left="50"
										 top="100"
										 visible="{city_Id=='0001'}"
										 includeInLayout="{city_Id=='0001'}"/>
							<cms:MapWork id="shangLuoMap"
										 width="100%"
										 height="100%"
										 left="50"
										 top="100"
										 visible="{city_Id=='0006'}"
										 includeInLayout="{city_Id=='0006'}"/>
							<cms:MapWork id="tongChuanMap"
										 width="100%"
										 height="100%"
										 left="50"
										 top="100"
										 visible="{city_Id=='0007'}"
										 includeInLayout="{city_Id=='0007'}"/>
							<cms:MapWork id="weiNanMap"
										 width="100%"
										 height="100%"
										 left="50"
										 top="100"
										 visible="{city_Id=='0008'}"
										 includeInLayout="{city_Id=='0008'}"/>
							<cms:MapWork id="baoJiMap"
										 width="100%"
										 height="100%"
										 left="50"
										 top="100"
										 visible="{city_Id=='0002'}"
										 includeInLayout="{city_Id=='0002'}"/>
							<cms:MapWork id="anKangMap"
										 width="100%"
										 height="100%"
										 left="50"
										 top="100"
										 visible="{city_Id=='0004'}"
										 includeInLayout="{city_Id=='0004'}"/>
							<cms:MapWork id="hanZhongMap"
										 width="100%"
										 height="100%"
										 left="50"
										 top="100"
										 visible="{city_Id=='0005'}"
										 includeInLayout="{city_Id=='0005'}"/>
							<cms:MapWork id="yanAnMap"
										 width="100%"
										 height="100%"
										 left="50"
										 top="100"
										 visible="{city_Id=='0009'}"
										 includeInLayout="{city_Id=='0009'}"/>
							<cms:MapWork id="yuLinMap"
										 width="100%"
										 height="100%"
										 left="50"
										 top="100"
										 visible="{city_Id=='0010'}"
										 includeInLayout="{city_Id=='0010'}"/>
							<cms:MapWork id="xianYangMap"
										 width="100%"
										 height="100%"
										 left="50"
										 top="100"
										 visible="{city_Id=='0003'}"
										 includeInLayout="{city_Id=='0003'}"/>
							<s:VGroup verticalAlign="middle"
									  horizontalAlign="center"
									  left="456"
									  top="420"
									  visible="{city_Id=='0001'}"
									  includeInLayout="{city_Id=='0001'}">
								<s:Label text="1 莲湖区"/>
								<s:Label text="2 新城区"/>
								<s:Label text="3 碑林区"/>
								<s:Label text="4 雁塔区"/>
							</s:VGroup>
							<s:Group id="cityCustLine"
									 width="100%"
									 height="100%"
									 left="50"
									 top="100"/>
							<s:Group id="citySpecLine"
									 width="100%"
									 height="100%"
									 left="50"
									 top="100"/>
							<!--<s:Button label="返回地图 "
								 left="274"
								 top="30"
								 click="returnMap_clickHandler(event)"/>-->
						</s:Group>
						<s:Group width="100%"
								 height="100%"
								 visible="false"
								 id="tupoGroup">
							<!--<s:Button label="返回区县"
								 left="274"
								 top="30"
								 click="returnDistrict_clickHandler(event)"/>-->
						</s:Group>
						<s:BorderContainer right="5"
										   borderVisible="true"
										   borderAlpha="1"
										   cornerRadius="10"
										   width="60"
										   height="20"
										   top="0" 
										   id="topContainer">
							<s:HGroup horizontalAlign="center"
									  verticalAlign="middle"
									  gap="3"
									  height="100%">
								<mx:Image source="@Embed('../img/return.png')"
										  id="returnBack"
										  buttonMode="true"
										  toolTip="返回上一级页面"
										  visible="{flag==2||flag==3}"
										  includeInLayout="{flag==2||flag==3}"
										  click="returnBack_clickHandler(event)"/>
								<mx:Image source="@Embed('../img/saveLocation.png')"
										  id="saveLocationImg"
										  buttonMode="true"
										  toolTip="保存位置"
										  click="saveLocation_clickHandler(event)"/>
								<mx:Image source="@Embed('../img/icon_export.png')"
										  id="exportDataImg"
										  buttonMode="true"
										  toolTip="导出"
										  click="exportDataImg_clickHandler(event)"/>
							</s:HGroup>
						</s:BorderContainer>
						<!--<s:Button label="保存位置 "
							 left="400"
							 top="30"
							 id="saveLocation"
							 click="saveLocation_clickHandler(event)"/>-->
					</s:Group>
				</s:Scroller>
				<panel:Window left="5"
							  top="15"
							  title="集团专线业务规模统计表"
							  id="speLineWindow"
							  minimize="speLine_minimizeHandler(event)"
							  closable="false"
							  maximizable="false">
					<mx:AdvancedDataGrid dataProvider="{pm.dm.panelLeftList}"
										 width="200"
										 headerWordWrap="true"
										 showHeaders="false"
										 dragEnabled="false"
										 rowCount="{pm.dm.panelLeftList.length}"
										 id="leftDataGird">
						<mx:columns>
							<mx:AdvancedDataGridColumn dataField="name"
													   textAlign="center"/>
							<mx:AdvancedDataGridColumn dataField="num"
													   textAlign="center"/>
						</mx:columns>
					</mx:AdvancedDataGrid>
				</panel:Window>
				<panel:Window left="5"
							  top="210"
							  title="专线故障分析"
							  id="speLineFaultAnalysisWindow"
							  closable="false"
							  maximizable="false"
							  visible="false" 
							  width="400"
							  height="300">
					<ailk_chart:PrettyChart id="speLineFaultAnalysisChart"
											width="200"
											height="100"/>
				</panel:Window>
				<panel:Window left="5"
							  top="210"
							  title="专线投诉分析"
							  id="speLineComplaintsAnalysisWindow"
							  closable="false"
							  maximizable="false"
							  visible="false"
							  width="400"
							  height="300">
					<ailk_chart:PrettyChart id="speLineComplaintsAnalysisChart"
											width="200"
											height="100"/>
				</panel:Window>
				<panel:Window id="exportDataPanel" 
							  visible="false" 
							  includeInLayout="false"
							  close="this.exportDataPanel.visible=false"
							  left="250"
							  top="40">
					<s:VGroup>
						<s:HGroup>
							<s:Label text = "导出类型："/>
							<s:DropDownList id="myDDL" 
											width="80"
											labelField="type"
											selectedIndex="0"
											dataProvider="{myDP}"/>
						</s:HGroup>
						<s:HGroup>
							<s:Label text = "开始时间："/>
							<mx:DateField id="exportStartTime" 
										  width="120"
										  formatString="YYYY-MM-DD"
										  selectedDate="{new Date()}"/>
						</s:HGroup>
						<s:HGroup>
							<s:Label text = "结束时间："/>
							<mx:DateField id="exportEndTime" 
										  width="120"
										  formatString="YYYY-MM-DD"
										  selectedDate="{new Date()}"/>
						</s:HGroup>
						<s:Button id="emprotData" 
								  click="emprotData_clickHandler()" 
								  right="5"
								  label="导出"/>
					</s:VGroup>
				</panel:Window>
				<panel:Window width="450"
							  height="330"
							  right="5"
							  top="30"
							  id="runCountWindow"
							  minimize="runCountWindow_minimizeHandler(event)"
							  title="运维统计"
							  closable="false"
							  maximizable="false">
					<mx:AdvancedDataGrid dataProvider="{pm.dm.panelRightList}"
										 width="100%"
										 height="100%"
										 id="runDG"
										 headerWordWrap="true"
										 horizontalScrollPolicy="auto"
										 verticalScrollPolicy="auto"
										 itemClick="advanceddatagrid1_itemClickHandler(event)"
										 dragEnabled="false">
						<mx:columns>
							<mx:AdvancedDataGridColumn dataField="cityname"
													   headerText="地市"
													   textAlign="center"/>
							<mx:AdvancedDataGridColumn dataField="custservnum"
													   headerText="专线数"
													   textAlign="center"/>
							<mx:AdvancedDataGridColumn dataField="alarmnum"
													   headerText="告警总数"
													   textAlign="center"/>
							<mx:AdvancedDataGridColumn dataField="complaintsnum"
													   headerText="投诉工单总数"
													   textAlign="center"/>
							<mx:AdvancedDataGridColumn dataField="faultnum"
													   headerText="故障工单总数"
													   textAlign="center"/>
						</mx:columns>
					</mx:AdvancedDataGrid>
				</panel:Window>

				<panel:Window width="450"
							  right="5"
							  height="100%"
							  top="{runCountWindow.height+35}"
							  id="functionWindow"
							  minimize="functionWindow_minimizeHandler(event)"
							  title="性能统计"
							  closable="false">
					<components:FunPerfComp width="100%"
											height="100%"
											custName="{perfCustName}"
											cusId="{perfCustId}"
											id="funPerfComp"/>
				</panel:Window>

				<components:CustFlowAlarmWindow width="100%"
												height="350"
												bottom="0"
												id="alarmWindow"
												title="告警统计"
												params="{pm.params}"
												visible="false"
												closable="true"
												dragable="true"
												close="alarmWindow.visible=false"
												minimize="alarmWindow_minimizeHandler(event)"
												maximize="alarmWindow_maximizeHandler(event)"
												restore="alarmWindow_restoreHandler(event)"/>

				<panel:Window width="100%"
							  height="350"
							  id="runWindow"
							  visible="false"
							  closable="true"
							  dragable="true"
							  close="runWindow.visible=false"
							  title="性能统计">
					<!--<components:RealMonitorPerfComp id="custRealPerfComp"
						 width="100%"
						 height="100%"/>-->
					<components:RunComp id="runGrid"
										width="100%"
										height="100%"/>


				</panel:Window>
				<cms:WindowExt width="100%"
							   height="350"
							   top="140"
							   id="faultWindow"
							   closable="true"
							   visible="false"
							   dragable="true"
							   close="faultWindow.visible=false"
							   minimize="faultWindow_minimizeHandler(event)"
							   maximize="faultWindow_maximizeHandler(event)"
							   restore="faultWindow_restoreHandler(event)"
							   title="故障工单统计 ({pm.dm.faultDispatchList.length})条">
					<mx:AdvancedDataGrid dataProvider="{pm.dm.faultDispatchList}"
										 width="100%"
										 height="100%"
										 wordWrap="true"
										 dragEnabled="true">
						<mx:columns>
							<mx:AdvancedDataGridColumn dataField="serialno"
													   headerText="序号"
													   textAlign="center"/>
							<mx:AdvancedDataGridColumn dataField="cityname"
													   headerText="故障地市"
													   textAlign="center"/>
							<mx:AdvancedDataGridColumn dataField="sheetno"
													   headerText="工单编号"
													   textAlign="center"/>
							<mx:AdvancedDataGridColumn dataField="sheettitle"
													   headerText="工单主题"
													   textAlign="center"/>
							<mx:AdvancedDataGridColumn dataField="sendtime"
													   headerText="派单时间"
													   textAlign="center"/>
							<mx:AdvancedDataGridColumn dataField="canceltime"
													   headerText="告警清除时间"
													   textAlign="center"/>
							<mx:AdvancedDataGridColumn dataField="level"
													   headerText="告警级别"
													   textAlign="center"/>
						</mx:columns>
					</mx:AdvancedDataGrid>
				</cms:WindowExt>
				<cms:WindowExt width="100%"
							   height="350"
							   top="140"
							   visible="false"
							   id="complintWindow"
							   closable="true"
							   dragable="true"
							   close="complintWindow.visible=false"
							   minimize="complintWindow_minimizeHandler(event)"
							   maximize="complintWindow_maximizeHandler(event)"
							   restore="complintWindow_restoreHandler(event)"
							   title="投诉工单统计 ({pm.dm.complaintDispatch.length})条">
					<mx:AdvancedDataGrid dataProvider="{pm.dm.complaintDispatch}"
										 width="100%"
										 height="100%"
										 wordWrap="true"
										 dragEnabled="true">
						<mx:columns>
							<mx:AdvancedDataGridColumn dataField="cityname"
													   headerText="投诉地市"
													   textAlign="center"/>
							<mx:AdvancedDataGridColumn dataField="sheetno"
													   headerText="工单编号"
													   textAlign="center"/>
							<mx:AdvancedDataGridColumn dataField="sheettitle"
													   headerText="工单主题"
													   textAlign="center"/>
							<mx:AdvancedDataGridColumn dataField="sendtime"
													   headerText="派单时间"
													   textAlign="center"/>
						</mx:columns>
					</mx:AdvancedDataGrid>
				</cms:WindowExt>
				<panel:Window title="修改客户名称"
							  visible="false"
							  width="200"
							  height="80"
							  top="250"
							  left="250"
							  dragable="true"
							  id="modifyCustNamePanl"
							  close="modifyCustNamePanl.visible=false;"
							  maximizable="false"
							  minimizable="false"
							  resizable="false">
					<s:HGroup width="100%"
							  height="100%"
							  verticalAlign="middle"
							  horizontalAlign="center">
						<s:TextInput id="custNameInput"/>
						<s:Button label="修改"
								  id="modifyCustNameButton"
								  click="modifyCustNameButton_clickHandler(event)"/>
					</s:HGroup>
				</panel:Window>

				<panel:Window title="修改字体颜色"
							  visible="false"
							  width="200"
							  height="80"
							  top="250"
							  left="250"
							  dragable="true"
							  id="modifyColPanl"
							  close="modifyColPanl.visible=false;"
							  maximizable="false"
							  minimizable="false"
							  resizable="false">
					<s:HGroup width="100%"
							  height="100%"
							  verticalAlign="middle"
							  horizontalAlign="center">
						<mx:ColorPicker id="fColorPicker"/>
						<s:Button label="修改"
								  id="modifyColButton"
								  click="modifyColButton_clickHandler(event)"/>
					</s:HGroup>
				</panel:Window>

				<panel:Window title="客户配置"
							  visible="false"
							  width="1070"
							  height="460"
							  left="-100"
							  top="50"
							  close="this.custSetPanel.visible=false"
							  maximizable="false"
							  minimizable="false"
							  resizable="false"
							  id="custSetPanel">
					<s:VGroup width="100%"
							  height="100%"
							  verticalAlign="middle"
							  horizontalAlign="center">
						<s:HGroup width="100%"
								  height="100%"
								  verticalAlign="middle"
								  horizontalAlign="center">
							<s:VGroup verticalAlign="middle"
									  horizontalAlign="center"
									  height="100%"
									  width="45%">
								<s:HGroup width="100%"
										  verticalAlign="middle"
										  horizontalAlign="center">
									<s:Label text="地市:"
											 width="64"/>
									<s:DropDownList id="cityDD"
													width="180"
													labelField="cityName"
													selectedIndex="0"
													requireSelection="true"
													dataProvider="{pm.dm.cityList}"/>
									<s:Label text="所属行业:"
											 width="64"/>
									<s:DropDownList id="industryDD"
													width="180"
													labelField="industry"
													selectedIndex="0"
													requireSelection="true"
													dataProvider="{pm.dm.industryList}"/>
								</s:HGroup>
								<s:HGroup width="100%"
										  verticalAlign="middle"
										  horizontalAlign="center">
									<s:Label text="客户级别:"
											 width="64"/>
									<s:DropDownList id="userLvlDD"
													width="180"
													labelField="userLvlName"
													selectedIndex="0"
													requireSelection="true"
													dataProvider="{pm.dm.userLvl}"/>
									<s:Label text="服务级别:"
											 width="64"/>
									<s:DropDownList id="servLvlDD"
													width="180"
													labelField="servLvlName"
													selectedIndex="0"
													requireSelection="true"
													dataProvider="{pm.dm.servLvl}"/>
								</s:HGroup>
								<s:HGroup width="100%"
										  verticalAlign="middle"
										  horizontalAlign="center">
									<s:Label text="客户名称:"
											 width="64"/>
									<s:TextInput id="custName"/>
									<s:HGroup width="100%"
											  height="100%"
											  verticalAlign="middle"
											  horizontalAlign="center">
										<s:Button label="查询"
												  id="queryCust"
												  click="queryCust_clickHandler(event)"/>
									</s:HGroup>
								</s:HGroup>
								<mx:AdvancedDataGrid id="unselCustGrid"
													 sortableColumns="false"
													 sortExpertMode="true"
													 width="100%"
													 height="100%"
													 showHeaders="false"
													 allowMultipleSelection="true"
													 dataProvider="{pm.dm.usersList}"
													 verticalScrollPolicy="auto">
									<mx:columns>
										<mx:AdvancedDataGridColumn dataField="cust_name"/>
									</mx:columns>
								</mx:AdvancedDataGrid>
							</s:VGroup>
							<s:VGroup verticalAlign="middle"
									  horizontalAlign="center"
									  height="100%"
									  width="10%">
								<s:Button label=">>"
										  id="rightMoveAll"
										  width="50"
										  click="rightall_clickHandler(event)"/>
								<s:Button label=">"
										  id="rightMove"
										  width="50"
										  click="rightMove_clickHandler(event)"/>
								<s:Button label="&lt;"
										  width="50"
										  id="leftMove"
										  click="leftMove_clickHandler(event)"/>
								<s:Button label="&lt;&lt;"
										  width="50"
										  id="leftMoveAll"
										  click="leftMoveAll_clickHandler(event)"/>
							</s:VGroup>
							<s:VGroup verticalAlign="middle"
									  horizontalAlign="center"
									  height="100%"
									  width="45%">
								<s:Label text="已选择集客"/>
								<mx:AdvancedDataGrid id="selCustGrid"
													 sortableColumns="false"
													 sortExpertMode="true"
													 width="100%"
													 height="100%"
													 showHeaders="false"
													 allowMultipleSelection="true"
													 dataProvider="{pm.dm.selUsersList}"
													 verticalScrollPolicy="auto">
									<mx:columns>
										<mx:AdvancedDataGridColumn dataField="cust_name"/>
									</mx:columns>
								</mx:AdvancedDataGrid>
							</s:VGroup>
						</s:HGroup>
						<s:Button label="保存配置"
								  id="save"
								  click="save_clickHandler(event)"/>
					</s:VGroup>
				</panel:Window>
			</s:Group>
		</cms:WindowExt>
	</s:VGroup>
</s:HGroup>

