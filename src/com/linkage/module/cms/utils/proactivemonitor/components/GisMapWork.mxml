<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%" 
		 xmlns:gis="com.linkage.gis.*">
	<s:layout>
		<s:BasicLayout/>
	</s:layout>

	<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ properties of parent ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
	
	<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
	
	<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Style ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
	
	<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Script ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
	<fx:Script>
		<![CDATA[
			import com.linkage.gis.core.GisFeature;
			import com.linkage.gis.core.metry.GisPoint;
			import com.linkage.gis.core.styles.GisMarkerPictureStyle;
			import com.linkage.gis.core.styles.GisTextStyle;
			import com.linkage.gis.event.MapEvent;
			import com.linkage.module.cms.proactivemonitor.event.GisMapWorkEvent;
			
			import mx.controls.Alert;
			
			import spark.filters.GlowFilter;
			protected function mapwork_mapCreationCompleteHandler(event:MapEvent):void
			{
				// TODO Auto-generated method stub
				this.addEventListener(GisMapWorkEvent.FEATURECHANGE,onFeatureChange);
				this.addEventListener(GisMapWorkEvent.FEATURESITE,onFeatureSite);
				gisMapWork.map.level=1;
			}
			
			private function onFeatureChange(event:GisMapWorkEvent):void{
				gisMapWork.map.clearAll();
				var moList:Object = event.param;
				for each(var data:Object in moList){
					var point:GisPoint = new GisPoint(Number(data.longitude),Number(data.latitude));
					var gisFeature:GisFeature = new GisFeature(point,new GisMarkerPictureStyle(data.icon));
					var attributes:Object = new Object;
					attributes.mo_id=data.mo_id;
					attributes.mo_type_id=data.mo_type_id;
					gisFeature.toolTip = String(data.mo_name);
					gisFeature.attributes=attributes;
					var labelFeature0:GisFeature = new GisFeature(point,new GisTextStyle(String(data.flag),0x000000,false,0,false,0xffffff,0,"middle",0,4));
					labelFeature0.toolTip = String(data.mo_name);
					labelFeature0.attributes = attributes;
					gisMapWork.map.addGisFeature(gisFeature);
					gisMapWork.map.addGisFeature(labelFeature0);
					if(data.menus){
						for each(var menu:Object in data.menus){
							gisMapWork.map.addGisFeatureMenu(gisFeature,menu.name,menu.fun);
							gisMapWork.map.addGisFeatureMenu(labelFeature0,menu.name,menu.fun);
						}
					}
				}
				gisMapWork.map.viewRefresh();
			}
			
			private function onFeatureSite(event:GisMapWorkEvent):void{
				gisMapWork.map.clearAll();
				var data:Object = event.param;
				var point:GisPoint = new GisPoint(Number(data.longitude),Number(data.latitude));
				var gisFeature:GisFeature = new GisFeature(point,new GisMarkerPictureStyle(data.icon));
				gisFeature.filters = [new spark.filters.GlowFilter(0xff0000,1,10,10,2)];
				var attributes:Object = new Object;
				attributes.mo_id=data.mo_id;
				attributes.mo_type_id=data.mo_type_id;
				gisFeature.attributes = attributes;
				gisFeature.toolTip = String(data.mo_name);
				var textFormat:TextFormat = new TextFormat("宋体",12,null,true);
				var labelFeature0:GisFeature = new GisFeature(point,new GisTextStyle(String(data.flag),0x000000,false,0,false,0xffffff,0,"middle",0,4));
				labelFeature0.toolTip = String(data.mo_name);
				labelFeature0.attributes = attributes;
				var labelFeature:GisFeature = new GisFeature(point,new GisTextStyle(String(data.mo_name),0x000000,false,0,false,0xffffff,0,"middle",0,-20,null,textFormat));
				labelFeature.filters = [new spark.filters.GlowFilter(0xff0000,1,10,10,2)];
				gisMapWork.map.addGisFeature(gisFeature);
				gisMapWork.map.addGisFeature(labelFeature0);
				gisMapWork.map.addGisFeature(labelFeature);
				gisMapWork.map.zoomToScale(32000,point);
				if(data.menus){
					for each(var menu:Object in data.menus){
						gisMapWork.map.addGisFeatureMenu(gisFeature,menu.name,menu.fun);
						gisMapWork.map.addGisFeatureMenu(labelFeature0,menu.name,menu.fun);
					}
				}
			}
		]]>
	</fx:Script>

	<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Declarations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ UI Components ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
	<gis:MapWork id="gisMapWork" width="100%" height="100%" showOverView="false" showToolBar="false" mapCreationComplete="mapwork_mapCreationCompleteHandler(event)">
		
	</gis:MapWork>
</s:Group>
