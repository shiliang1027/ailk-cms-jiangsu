<?xml version="1.0" encoding="utf-8"?>
<s:BorderContainer xmlns:fx="http://ns.adobe.com/mxml/2009"
				   xmlns:s="library://ns.adobe.com/flex/spark"
				   xmlns:mx="library://ns.adobe.com/flex/mx"
				   styleName="bgstyle1"
				   visible="false"
				   maxHeight="300"
				   xmlns:parsley="http://www.spicefactory.org/parsley"
				   show="kpiChooseView_showHandler(event)">
	<!--
		 ***************************************
		 This is Content
		 @author shiliang (66614)
		 @version 1.0
		 @date 2012-11-22
		 @langversion 3.0
		 @playerversion Flash 11
		 @productversion Flex 4
		 @copyright Ailk NBS-Network Mgt. RD Dept.
		 ***************************************
	-->
	<fx:Script>
		<![CDATA[
			import com.ailk.common.system.logging.ILogger;
			import com.ailk.common.system.logging.Log;
			import com.linkage.module.cms.oneline.event.wireless.WirelessEvent;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			[Bindable]
			[Inject("wirelessViewPM")]
			public var pm:WirelessViewPM;
			[MessageDispatcher]
			public var dispatcher:Function;

			private var kpis:Dictionary;
			private var log:ILogger=Log.getLoggerByClass(KpiChooseView);

			protected function selectedAll_changeHandler(event:Event):void
			{
				for each (var item:*in pm.dm.moKpis)
				{
					item.selected=CheckBox(event.currentTarget).selected;
				}
				pm.dm.moKpis.refresh();
			}

			protected function unSelected_changeHandler(event:Event):void
			{
				for each (var item:*in pm.dm.moKpis)
				{
					item.selected=!item.selected;
				}
				pm.dm.moKpis.refresh();
			}

			private function do_handler(event:MouseEvent):void
			{
				for each (var item:*in pm.dm.moKpis)
				{
					kpis[String(item.id)]=item.selected;
				}
				this.visible=false;
				dispatcher(new WirelessEvent(WirelessEvent.DOLOADKPICOLORDATA));
			}

			private function cancel_handler(event:MouseEvent):void
			{
				kpis = null;
				this.visible=false;
			}

			protected function kpiChooseView_showHandler(event:FlexEvent):void
			{
				// TODO Auto-generated method stub
				var item:*;
				if (!kpis)
				{
					kpis=new Dictionary();
					for each (item in pm.dm.moKpis)
					{
						kpis[String(item.id)]=item.selected;
					}
				}else{
					for each (item in pm.dm.moKpis)
					{
						item.selected=kpis[String(item.id)];
					}
					pm.dm.moKpis.refresh();
				}
				selectedAllCB.selected=false;

				unSelectedCB.selected=false;
			}
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
		<parsley:Configure/>
	</fx:Declarations>
	<s:layout>
		<s:VerticalLayout paddingLeft="5"
						  paddingRight="5"
						  paddingTop="2"
						  paddingBottom="2"
						  gap="2"/>
	</s:layout>
	<s:Scroller width="100%"
				height="100%"
				styleName="sceneScroller">
		<s:DataGroup width="100%"
					 height="100%"
					 dataProvider="{pm.dm.moKpis}"
					 itemRenderer="com.linkage.module.cms.oneline.view.components.wireless.renderer.CheckBoxKpiItemRenderer">
			<s:layout>
				<s:TileLayout requestedColumnCount="3"
							  columnAlign="justifyUsingWidth"
							  columnWidth="80"/>
			</s:layout>
		</s:DataGroup>
	</s:Scroller>
	<s:HGroup width="100%">
		<s:CheckBox label="全选"
					id="selectedAllCB"
					change="selectedAll_changeHandler(event)"/>
		<s:CheckBox label="反选"
					id="unSelectedCB"
					change="unSelected_changeHandler(event)"/>
	</s:HGroup>
	<s:HGroup width="100%"
			  horizontalAlign="center">
		<s:Button label="确定"
				  buttonMode="true"
				  click="do_handler(event)"/>
		<s:Button label="取消"
				  buttonMode="true"
				  click="cancel_handler(event)"/>
	</s:HGroup>
</s:BorderContainer>
