<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%" 
		 creationComplete="dummyMapWork_creationCompleteHandler(event)" 
		 xmlns:local="*" xmlns:map="com.linkage.module.cms.groupclientalarm.map.*">
	<s:layout>
		<s:BasicLayout/>
	</s:layout>
	<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ properties of parent ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
	<s:states>
		<s:State name="cityAll"/>
		<s:State name="cityProvince"/>
		<s:State name="cityTransProvince"/>
		<s:State name="city"/>
	</s:states>
	<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
	<fx:Metadata>
		[Event(name="init", type="com.linkage.module.cms.groupclientalarm.event.DummyMapWorkEvent")]
		[Event(name="cityLayerNoSelected", type="com.linkage.module.cms.groupclientalarm.event.DummyMapWorkEvent")]
		[Event(name="cityLayerChange", type="com.linkage.module.cms.groupclientalarm.event.DummyMapWorkEvent")]
		[Event(name="mapCitySelected", type="com.linkage.module.cms.groupclientalarm.event.DummyMapWorkEvent")]
	</fx:Metadata>
	<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Style ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
	
	<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Script ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
	<fx:Script>
		<![CDATA[
			import com.linkage.module.cms.common.GlowAnimal;
			import com.linkage.module.cms.groupclientalarm.Config;
			import com.linkage.module.cms.groupclientalarm.event.DummyMapWorkEvent;
			import com.linkage.module.cms.groupclientalarm.map.MapNode;
			import com.linkage.module.cms.groupclientalarm.map.MapNodeEvent;
			import com.linkage.system.logging.ILogger;
			import com.linkage.system.logging.Log;
			
			import mx.events.FlexEvent;
			import mx.rpc.events.ResultEvent;
			
			private static var log:ILogger = Log.getLogger("com.linkage.module.cms.groupclient.control.GroupTotalModuleControl_GD");
			
			[Bindable]
			[Embed(source="com/linkage/module/cms/groupclient/assets/u46.png")]
			public var lever1:Class;
			[Bindable]
			[Embed(source="com/linkage/module/cms/groupclient/assets/u48.png")]
			public var lever2:Class;
			[Bindable]
			[Embed(source="com/linkage/module/cms/groupclient/assets/u50.png")]
			public var lever3:Class;
			[Bindable]
			[Embed(source="com/linkage/module/cms/groupclient/assets/u52.png")]
			public var lever4:Class;
			[Bindable]
			[Embed(source="com/linkage/module/cms/groupclient/assets/u65.png")]
			public var promIcon:Class;
			private var mapArray:Array=new Array();
			private var cityAlarmData:Array = new Array;
			private var suspInfoData:Array=new Array;
			private static const CITY_ALL:String="all";
			private static const CITY_TransProvince:String="0000";
			private static const CITY_Province:String="000";
			private var currentQueryParam:Object;
			private var user:Object;
			public static const CITY_LAYER1:Number = 1;
			public static const CITY_LAYER2:Number = 2;
			public static const CITY_LAYER3:Number = 3;
			protected function dummyMapWork_creationCompleteHandler(event:FlexEvent):void
			{
				// TODO Auto-generated method stub
				this.addEventListener(DummyMapWorkEvent.CITYALLSELECTED,onCityAllSelected);
				this.addEventListener(DummyMapWorkEvent.CITYPROVINCESELECTED,onCityProvinceSelected);
				this.addEventListener(DummyMapWorkEvent.CITYTRANSPROVINCESELECTED,onCityTransProvinceSelected);
				this.addEventListener(DummyMapWorkEvent.CITYSELECTED,onCitySelected);
				this.addEventListener(DummyMapWorkEvent.ALARMINFODATACHANGE,onAlarmInfoDataChange);
				this.addEventListener(DummyMapWorkEvent.ALARMNUMDATACHANGE,onAlarmNumDataChange);
				this.addEventListener(DummyMapWorkEvent.REFRESH,onRefresh);
				this.addEventListener(DummyMapWorkEvent.VIEWINIT,onViewInit);
				mapArray["3_a"]=gd_chaozhou_a;
				mapArray["4_a"]=gd_dongguan_a;
				mapArray["5_a"]=gd_foshan_a;
				mapArray["6_a"]=gd_guangzhou_a;
				mapArray["7_a"]=gd_heyuan_a;
				mapArray["8_a"]=gd_jiangmen_a;
				mapArray["9_a"]=gd_huizhou_a;
				mapArray["10_a"]=gd_jieyang_a;
				mapArray["11_a"]=gd_maoming_a;
				mapArray["12_a"]=gd_meizhou_a;
				mapArray["13_a"]=gd_qingyuan_a;
				mapArray["14_a"]=gd_shantou_a;
				mapArray["15_a"]=gd_shanwei_a;
				mapArray["16_a"]=gd_shaoguan_a;
				mapArray["17_a"]=gd_shenzhen_a;
				mapArray["18_a"]=gd_yangjiang_a;
				mapArray["19_a"]=gd_yunfu_a;
				mapArray["20_a"]=gd_zhanjiang_a;
				mapArray["21_a"]=gd_zhaoqing_a;
				mapArray["22_a"]=gd_zhongshan_a;
				mapArray["23_a"]=gd_zhuhai_a;
				mapArray["3_b"]=gd_chaozhou_b;
				mapArray["4_b"]=gd_dongguan_b;
				mapArray["5_b"]=gd_foshan_b;
				mapArray["6_b"]=gd_guangzhou_b;
				mapArray["7_b"]=gd_heyuan_b;
				mapArray["8_b"]=gd_jiangmen_b;
				mapArray["9_b"]=gd_huizhou_b;
				mapArray["10_b"]=gd_jieyang_b;
				mapArray["11_b"]=gd_maoming_b;
				mapArray["12_b"]=gd_meizhou_b;
				mapArray["13_b"]=gd_qingyuan_b;
				mapArray["14_b"]=gd_shantou_b;
				mapArray["15_b"]=gd_shanwei_b;
				mapArray["16_b"]=gd_shaoguan_b;
				mapArray["17_b"]=gd_shenzhen_b;
				mapArray["18_b"]=gd_yangjiang_b;
				mapArray["19_b"]=gd_yunfu_b;
				mapArray["20_b"]=gd_zhanjiang_b;
				mapArray["21_b"]=gd_zhaoqing_b;
				mapArray["22_b"]=gd_zhongshan_b;
				mapArray["23_b"]=gd_zhuhai_b;
				mapHttpService.send();
				zx_a.width=780;
				zx_a.height=390;
				zx_b.width=780;
				zx_b.height=390;
				zx_UI.addChild(zx_b);
				zx_UI.addChild(zx_a);
				var colorForm:ColorTransform = zx_a.transform.colorTransform;
				colorForm.color = 0xffff00;
				zx_a.transform.colorTransform=colorForm;
				zx_b.transform.colorTransform=colorForm;
				zx_UI.addEventListener(MouseEvent.MOUSE_OVER,onZXMouseOver);
				zx_UI.addEventListener(MouseEvent.MOUSE_OUT,onZXMouseOut);
			}
			
			private function onViewInit(event:DummyMapWorkEvent):void{
				user = event.param;
				if(Number(user.is_szx)==1){
					this.currentState="cityProvince";
				}else if(Number(user.is_szx)==2){
					this.currentState="cityTransProvince";
				}else if(Number(user.city_layer)==CITY_LAYER2){
					this.currentState="city";
				}else if(Number(user.city_layer)==CITY_LAYER1){
					this.currentState="cityAll";
				}
				log.info("[地图组件状态]:"+this.currentState+","+user);
				currentQueryParam = new Object();
				currentQueryParam.city_layer = String(user.city_layer);
				currentQueryParam.is_szx=String(user.is_szx);
				currentQueryParam.area_id=String(user.areaId);
				currentQueryParam.view_layer=String(user.view_layer);
				this.dispatchEvent(new DummyMapWorkEvent(DummyMapWorkEvent.REFRESH));
				
			}

			private function onRefresh(event:DummyMapWorkEvent):void{
				if(showAllCB.selected || showProvinceCB.selected || showTransProvinceCB.selected || showCityCB.selected){
					var evt:DummyMapWorkEvent = new DummyMapWorkEvent(DummyMapWorkEvent.CITYLAYERCHANGE);
					evt.param=currentQueryParam;
					this.dispatchEvent(evt);
					var alarmInfoLoadEvent:DummyMapWorkEvent = new DummyMapWorkEvent(DummyMapWorkEvent.ALARMINFOLOAD);
					alarmInfoLoadEvent.param=currentQueryParam;
					var alarmNumLoadEvent:DummyMapWorkEvent = new DummyMapWorkEvent(DummyMapWorkEvent.ALARMNUMLOAD);
					alarmNumLoadEvent.param=currentQueryParam;
					this.dispatchEvent(alarmInfoLoadEvent);
					this.dispatchEvent(alarmNumLoadEvent);
				}else{
					this.dispatchEvent(new DummyMapWorkEvent(DummyMapWorkEvent.CITYNOSELECTED));
				}
			}
			private function onZXMouseOver(event:MouseEvent):void{
				var cityId:String;
				if(showAllCB.selected){
					cityId = CITY_ALL;
				}else if(showProvinceCB.selected){
					cityId = CITY_Province;
				}else if(showTransProvinceCB.selected){
					cityId = CITY_TransProvince;
				}
				promptBC.x=10;
				promptBC.y=10;
				var alarmNumProm:AlarmNumPrompt = getCityAlarmByCityId(cityId) as AlarmNumPrompt;
				if(alarmNumProm){
					alarmNumProm.visible=true;
					alarmNumProm.dispatchEvent(new MouseEvent(MouseEvent.MOUSE_OVER));
				}
			}
			
			/**
			 *根据地市ID取该地市告警数据 
			 * @param cityId
			 * @return 
			 * 
			 */		
			private function getCityAlarmByCityId(cityId:String):Object{
				for(var key:String in cityAlarmData){
					if(key == cityId){
						return cityAlarmData[key];
					}
				}
				return null;
			}
			
			private function onZXMouseOut(event:MouseEvent):void{
				var cityId:String;
				if(showAllCB.selected){
					cityId = CITY_ALL;
				}else if(showProvinceCB.selected){
					cityId = CITY_Province;
				}else if(showTransProvinceCB.selected){
					cityId = CITY_TransProvince;
				}
				var alarmNumProm:AlarmNumPrompt = getCityAlarmByCityId(cityId) as AlarmNumPrompt;
				if(alarmNumProm && alarmNumProm.visible){
					alarmNumProm.visible=false;
					alarmNumProm.dispatchEvent(new MouseEvent(MouseEvent.MOUSE_OUT));
				}
				showModeLayer(false);
			}
			

			protected function mapHttpService_resultHandler(event:ResultEvent):void
			{
				// TODO Auto-generated method stub
				mapWork.xmlData=event.result as XML;
				mapWork.mapObjArray=mapArray;
				mapWork.showMap();
				mapWork.addEventListener(MapNodeEvent.MAPNODE_MOUSEOVER,onMapNodeOver);
				mapWork.addEventListener(MapNodeEvent.MAPNODE_MOUSEOUT,onMapNodeOut);
				mapWork.addEventListener(MapNodeEvent.MAPNODE_CLICK,onMapNodeClick);
				this.dispatchEvent(new DummyMapWorkEvent(DummyMapWorkEvent.INIT));
			}
			
			private function onMapNodeOver(event:MapNodeEvent):void{
				if(showAllCB.selected || showProvinceCB.selected || showTransProvinceCB.selected){
					showModeLayer(true);
				}
				var cityId:String = mapWork.getAreaId(event.mapNode.id);
				if(cityAlarmData && cityAlarmData[cityId]){
					var alarmNumProm:AlarmNumPrompt = cityAlarmData[cityId] as AlarmNumPrompt;
					if(alarmNumProm.visible){
						alarmNumProm.dispatchEvent(new MouseEvent(MouseEvent.MOUSE_OVER));
					}
				}
			}
			
			private function onMapNodeOut(event:MapNodeEvent):void{
				var cityId:String = mapWork.getAreaId(event.mapNode.id);
				if(cityAlarmData && cityAlarmData[cityId]){
					var alarmNumProm:AlarmNumPrompt = cityAlarmData[cityId] as AlarmNumPrompt;
					if(alarmNumProm.visible){
						alarmNumProm.dispatchEvent(new MouseEvent(MouseEvent.MOUSE_OUT));
					}
				}
			}
			
			private function onMapNodeClick(event:MapNodeEvent):void{
				log.info("mapNode click-->"+event.mapNode.id);
				var cityId:String = mapWork.getAreaId(event.mapNode.id);
				var evt:DummyMapWorkEvent = new DummyMapWorkEvent(DummyMapWorkEvent.MAPCITYSELECTED);
				evt.param = cityId;
				this.dispatchEvent(evt);
			}
			private function showModeLayer(flag:Boolean):void{
				zx_UI.visible=flag;
				zx_UI.includeInLayout=flag;
				mapWork.visible=!flag;
			}
			
			private function onCityAllSelected(event:DummyMapWorkEvent):void{
				currentQueryParam = new Object();
				currentQueryParam.area_id=String(user.areaId);
				currentQueryParam.city_layer = "1";
				currentQueryParam.is_szx="0";
				currentQueryParam.view_layer="1";
				this.dispatchEvent(new DummyMapWorkEvent(DummyMapWorkEvent.REFRESH));
			}
			
			private function onCityProvinceSelected(event:DummyMapWorkEvent):void{
				currentQueryParam = new Object();
				currentQueryParam.area_id=String(user.areaId);
				currentQueryParam.city_layer = "2";
				currentQueryParam.is_szx="1";
				currentQueryParam.view_layer="1";
				this.dispatchEvent(new DummyMapWorkEvent(DummyMapWorkEvent.REFRESH));
			}
			
			private function onCityTransProvinceSelected(event:DummyMapWorkEvent):void{
				currentQueryParam = new Object();
				currentQueryParam.area_id=String(user.areaId);
				currentQueryParam.city_layer = "2";
				currentQueryParam.is_szx="2";
				currentQueryParam.view_layer="1";
				this.dispatchEvent(new DummyMapWorkEvent(DummyMapWorkEvent.REFRESH));
			}
			
			private function onCitySelected(event:DummyMapWorkEvent):void{
				currentQueryParam = new Object();
				currentQueryParam.area_id=String(user.areaId);
				currentQueryParam.city_layer = "2";
				currentQueryParam.is_szx="0";
				currentQueryParam.view_layer="1";
				this.dispatchEvent(new DummyMapWorkEvent(DummyMapWorkEvent.REFRESH));
			}
			
			private function onAlarmInfoDataChange(event:DummyMapWorkEvent):void{
				var result:Object = event.param;
				for(var key:String in result){
					log.info("getSuspInfo data---->["+key+"]"+result[key]);
					suspInfoData[key]=result[key];
				}
			}
			private function onAlarmNumDataChange(event:DummyMapWorkEvent):void{
				var result:Object = event.param;
				mapWorkGroup.removeAllElements();
				for each(var data:Object in result){
					log.info("[地图告警数据] ---->[city_id:"+data.city_id+"][maxserverite:"+data.maxseverity+"][maxnum:"+data.maxnum+"][longitude:"+data.longitude+"][latitude:"+data.latitude+"]");
					drawAlarm(data);
				}
				var alarmNumPrompt:AlarmNumPrompt;
				var mapNode:MapNode;
				if(showAllCB.selected){
					for(var key:String in cityAlarmData){
						if(key == CITY_ALL){
						}else{
							(cityAlarmData[key] as AlarmNumPrompt).visible=false;
							mapNode = mapWork.elementBox.getElementById(key+"_a") as MapNode;
							if(mapNode){
								mapNode.reset();
							}
						}
					}		
				}else if(showProvinceCB.selected){
					for(var key1:String in cityAlarmData){
						if(key1 == CITY_Province){
						}else{
							(cityAlarmData[key1] as AlarmNumPrompt).visible=false;
							mapNode = mapWork.elementBox.getElementById(key1+"_a") as MapNode;
							if(mapNode){
								mapNode.reset();
							}
						}
					}	
				}else if(showTransProvinceCB.selected){
					for(var key2:String in cityAlarmData){
						if(key2 == CITY_TransProvince){
						}else{
							(cityAlarmData[key2] as AlarmNumPrompt).visible=false;
							mapNode = mapWork.elementBox.getElementById(key2+"_a") as MapNode;
							if(mapNode){
								mapNode.reset();
							}
						}
					}	
				}else if(showCityCB.selected){
					for(var key3:String in cityAlarmData){
						if(key3 == CITY_Province || key3==CITY_ALL || key3==CITY_TransProvince){
							(cityAlarmData[key3] as AlarmNumPrompt).visible=false;
						}else{
							alarmNumPrompt = cityAlarmData[key3] as AlarmNumPrompt;
							alarmNumPrompt.visible=true;
							alarmNumPrompt.startGlow();
							mapNode = mapWork.elementBox.getElementById(key3+"_a") as MapNode;
							mapNode.fillColor(Config.alarmColorConfig[(cityAlarmData[key3] as AlarmNumPrompt).maxseverity]);
						}
					}	
				}
			}

			protected function showAllCB_clickHandler(event:MouseEvent):void
			{
				if (event.target.selected)
				{
					showProvinceCB.selected=true;
					showCityCB.selected=true;
					showTransProvinceCB.selected=true;
					this.dispatchEvent(new DummyMapWorkEvent(DummyMapWorkEvent.CITYALLSELECTED));
				}else{
					showCityCB.selected=false;
					showProvinceCB.selected=false;
					showTransProvinceCB.selected=false;
					this.dispatchEvent(new DummyMapWorkEvent(DummyMapWorkEvent.CITYNOSELECTED));
				}
			}
			
			protected function showProvinceCB_clickHandler(event:Event):void
			{
				if (event.target.selected)
				{
					showAllCB.selected=false;
					showCityCB.selected=false;
					showTransProvinceCB.selected=false;
					this.dispatchEvent(new DummyMapWorkEvent(DummyMapWorkEvent.CITYPROVINCESELECTED));
				}else if(showTransProvinceCB.selected){
					showAllCB.selected=false;
					showCityCB.selected=false;
					this.dispatchEvent(new DummyMapWorkEvent(DummyMapWorkEvent.CITYTRANSPROVINCESELECTED));
				}else if (showCityCB.selected)
				{
					showAllCB.selected=false;
					showTransProvinceCB.selected=false;
					this.dispatchEvent(new DummyMapWorkEvent(DummyMapWorkEvent.CITYSELECTED));
				}
				else
				{
					this.dispatchEvent(new DummyMapWorkEvent(DummyMapWorkEvent.CITYNOSELECTED));
				}
			}
			
			protected function showTransProvinceCB_clickHandler(event:Event):void{
				if (event.target.selected)
				{
					showProvinceCB.selected=false;
					showCityCB.selected=false;
					showAllCB.selected=false;
					this.dispatchEvent(new DummyMapWorkEvent(DummyMapWorkEvent.CITYTRANSPROVINCESELECTED));
				}else if (showProvinceCB.selected)
				{
					showAllCB.selected=false;
					showCityCB.selected=false;
					this.dispatchEvent(new DummyMapWorkEvent(DummyMapWorkEvent.CITYPROVINCESELECTED));
				}else if(showCityCB.selected){
					showAllCB.selected=false;
					showProvinceCB.selected=false;
					this.dispatchEvent(new DummyMapWorkEvent(DummyMapWorkEvent.CITYSELECTED));
				}else
				{
					this.dispatchEvent(new DummyMapWorkEvent(DummyMapWorkEvent.CITYNOSELECTED));
				}
			}
			
			protected function showCityCB_clickHandler(event:Event):void
			{
				if (event.target.selected)
				{
					showProvinceCB.selected=false;
					showAllCB.selected=false;
					showTransProvinceCB.selected=false;
					this.dispatchEvent(new DummyMapWorkEvent(DummyMapWorkEvent.CITYSELECTED));
				}else if (showProvinceCB.selected)
				{
					showAllCB.selected=false;
					showTransProvinceCB.selected=false;
					this.dispatchEvent(new DummyMapWorkEvent(DummyMapWorkEvent.CITYPROVINCESELECTED));
				}else if(showTransProvinceCB.selected){
					showAllCB.selected=false;
					showCityCB.selected=false;
					this.dispatchEvent(new DummyMapWorkEvent(DummyMapWorkEvent.CITYTRANSPROVINCESELECTED));
				}else
				{
					this.dispatchEvent(new DummyMapWorkEvent(DummyMapWorkEvent.CITYNOSELECTED));
					for(var key:String in cityAlarmData){
						(cityAlarmData[key] as AlarmNumPrompt).visible=false;
						var mapNode:MapNode = mapWork.elementBox.getElementById(key+"_a") as MapNode;
						if(mapNode){
							mapNode.reset();
						}
					}	
				}
			}
			
			/**
			 *绘制地图告警信息 
			 * @param data
			 * 
			 */		
			public function drawAlarm(data:Object):void{
				if(Number(data.maxseverity)<=0){
					return;
				}
				var mapNode:MapNode;
				var alarmNumProm:AlarmNumPrompt = new AlarmNumPrompt();
				var x:Number = 0;
				var y:Number = 0;
				if(data.city_id == CITY_ALL){
					x = 450;
					y = 150;
				}else if(data.city_id == CITY_Province){
					x = 450;
					y = 150;
				}else if(data.city_id == CITY_TransProvince){
					x = 450;
					y = 150;
				}else{
					mapNode = mapWork.elementBox.getElementById(data.city_id+"_a") as MapNode;
					x = mapNode.x-10;
					y = mapNode.y+17;
				}
				alarmNumProm.label = data.maxnum;
				alarmNumProm.maxseverity = Number(data.maxseverity);
				alarmNumProm.cityId = String(data.city_id);
				alarmNumProm.source = getSource(Number(data.maxseverity));
				alarmNumProm.glow = new GlowAnimal([alarmNumProm],Config.alarmColorConfig[data.maxseverity],10);
				alarmNumProm.x = x;
				alarmNumProm.y = y;
				alarmNumProm.visible = false;
				mapWorkGroup.addElement(alarmNumProm);
				alarmNumProm.addEventListener(MouseEvent.MOUSE_OVER,onAlarmNumPromOver);
				alarmNumProm.addEventListener(MouseEvent.MOUSE_OUT,onAlarmNumPromOut);
				cityAlarmData[data.city_id]=alarmNumProm;
			}
			/**
			 *根据告警级别取相应图标 
			 * @param alarmLever
			 * @return 
			 * 
			 */		
			private function getSource(alarmLever:Number=0):Object{
				if(alarmLever == 1){
					return lever1;
				}else if(alarmLever == 2){
					return lever2;
				}else if(alarmLever == 3){
					return lever3;
				}else if(alarmLever == 4){
					return lever4;
				}
				return null;
			}
			
			private function onAlarmNumPromOver(event:MouseEvent):void{
				var data:Object = suspInfoData[event.target.cityId];
				log.info("onAlarmNumPromOver--->city_id:"+event.target.cityId+","+data);
				promptBC.removeAllElements();
				if(data && data.length>0){
					for each(var info:Object in data){
						//					log.info("info--->"+info["serv_type"]+","+info["total"]);
						var hgroup:HGroup = new HGroup();
						hgroup.verticalAlign = "middle";
						var image:Image = new Image();
						image.source = promIcon;
						var label:Label = new Label();
						label.text = info["serv_type"]+"："+info["total"];
						hgroup.addElement(image);
						hgroup.addElement(label);
						promptBC.addElement(hgroup);
					}
					showPrompt(new Point(event.target.x,event.target.y));
				}
			}
			private function onAlarmNumPromOut(event:MouseEvent):void{
				promptBC.visible=false;
			}
			
			private function showPrompt(point:Point):void{
				log.info("show prompt parent width:"+mapScroller.width+",height:"+mapScroller.height);
				promptBC.visible=true;
				if(showAllCB.selected || showProvinceCB.selected || showTransProvinceCB.selected){
					return;
				}
				//			point = app.leftBC.localToGlobal(point);
				if(point.x+promptBC.width>=mapScroller.width-20){
					promptBC.x = point.x-promptBC.width-20;
					if(promptBC.x+promptBC.width>=mapScroller.width-20){
						promptBC.x = mapScroller.width-promptBC.width-70;
					}
				}else{
					promptBC.x = point.x+20;
				}
				if(point.y+promptBC.height>=mapScroller.height-20){
					promptBC.y = point.y - promptBC.height;
					if(promptBC.y+promptBC.height>mapScroller.height-20){
						promptBC.y = mapScroller.height-promptBC.height-70;
					}
				}else{
					promptBC.y = point.y-20;
				}
				//			app.promptBC.x=event.target.x>660?event.target.x-app.promptBC.width:event.target.x+event.target.width;
				//			app.promptBC.y=event.target.y;
			}
			
		]]>
	</fx:Script>
	<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Declarations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
		<s:HTTPService id="mapHttpService"
					   url="xml/map_guangdong.xml"
					   method="get"
					   resultFormat="e4x" result="mapHttpService_resultHandler(event)"/>
		<local:chaozhou_a id="gd_chaozhou_a"/>
		<local:dongguan_a id="gd_dongguan_a"/>
		<local:foshan_a id="gd_foshan_a"/>
		<local:guangzhou_a id="gd_guangzhou_a"/>
		<local:heyuan_a id="gd_heyuan_a"/>
		<local:huizhou_a id="gd_huizhou_a"/>
		<local:jiangmen_a id="gd_jiangmen_a"/>
		<local:jieyang_a id="gd_jieyang_a"/>
		<local:maoming_a id="gd_maoming_a"/>
		<local:meizhou_a id="gd_meizhou_a"/>
		<local:qingyuan_a id="gd_qingyuan_a"/>
		<local:shantou_a id="gd_shantou_a"/>
		<local:shanwei_a id="gd_shanwei_a"/>
		<local:shaoguan_a id="gd_shaoguan_a"/>
		<local:shenzhen_a id="gd_shenzhen_a"/>
		<local:yangjiang_a id="gd_yangjiang_a"/>
		<local:yunfu_a id="gd_yunfu_a"/>
		<local:zhanjiang_a id="gd_zhanjiang_a"/>
		<local:zhaoqing_a id="gd_zhaoqing_a"/>
		<local:zhongshan_a id="gd_zhongshan_a"/>
		<local:zhuhai_a id="gd_zhuhai_a"/>
		<local:chaozhou_b id="gd_chaozhou_b"/>
		<local:dongguan_b id="gd_dongguan_b"/>
		<local:foshan_b id="gd_foshan_b"/>
		<local:guangzhou_b id="gd_guangzhou_b"/>
		<local:heyuan_b id="gd_heyuan_b"/>
		<local:huizhou_b id="gd_huizhou_b"/>
		<local:jiangmen_b id="gd_jiangmen_b"/>
		<local:jieyang_b id="gd_jieyang_b"/>
		<local:maoming_b id="gd_maoming_b"/>
		<local:meizhou_b id="gd_meizhou_b"/>
		<local:qingyuan_b id="gd_qingyuan_b"/>
		<local:shantou_b id="gd_shantou_b"/>
		<local:shanwei_b id="gd_shanwei_b"/>
		<local:shaoguan_b id="gd_shaoguan_b"/>
		<local:shenzhen_b id="gd_shenzhen_b"/>
		<local:yangjiang_b id="gd_yangjiang_b"/>
		<local:yunfu_b id="gd_yunfu_b"/>
		<local:zhanjiang_b id="gd_zhanjiang_b"/>
		<local:zhaoqing_b id="gd_zhaoqing_b"/>
		<local:zhongshan_b id="gd_zhongshan_b"/>
		<local:zhuhai_b id="gd_zhuhai_b"/>
		
		<local:guangdong_all_a id="zx_a"/>
		<local:guangdong_all_b id="zx_b"/>
	</fx:Declarations>
	<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ UI Components ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
	
	<s:Scroller id="mapScroller" width="100%" height="100%" horizontalScrollPolicy="auto" verticalScrollPolicy="auto">
		<s:Group width="100%" height="100%">
			<mx:UIComponent id="zx_UI" top="224" left="400" visible="false" includeInLayout="false">
			</mx:UIComponent>
			<map:MapWork id="mapWork"
						 width="100%"
						 height="100%"
						 top="30">
			</map:MapWork>
			<s:Group id="mapWorkGroup">
			</s:Group>
			<s:BorderContainer id="promptBC" styleName="promptBC"
							   visible="false">
				<s:layout>
					<s:VerticalLayout paddingLeft="15"
									  paddingRight="10"
									  paddingTop="5"
									  paddingBottom="5"/>
				</s:layout>
				
			</s:BorderContainer>
		</s:Group>
		
	</s:Scroller>
	<s:VGroup right="30"
			  top="20"
			  id="cbGroup">
		<s:HGroup>
			<s:CheckBox id="showAllCB" selected="true"
						label="全省" enabled.cityAll="true" enabled="false"
						click="showAllCB_clickHandler(event)"/>
		</s:HGroup>
		<s:HGroup paddingLeft="20">
			<s:CheckBox id="showProvinceCB" selected="true"
						label="省级" enabled="false" enabled.cityAll="true" enabled.cityProvince="true" 
						click="showProvinceCB_clickHandler(event)"/>
		</s:HGroup>
		<s:HGroup paddingLeft="20">
			<s:CheckBox id="showTransProvinceCB" selected="true"
						label="跨省" enabled="false" enabled.cityAll="true" enabled.cityTransProvince="true"
						click="showTransProvinceCB_clickHandler(event)"/>
		</s:HGroup>
		<s:HGroup paddingLeft="20">
			<s:CheckBox id="showCityCB" selected="true"
						label="市级" enabled="false" enabled.cityAll="true" enabled.city="true"
						click="showCityCB_clickHandler(event)"/>
		</s:HGroup>
	</s:VGroup>
	<s:VGroup left="10"
			  bottom="15" id="alarmTip">
		<s:HGroup verticalAlign="middle">
			<mx:Image source="{lever1}"/>
			<s:Label text="一级告警"/>
		</s:HGroup>
		<s:HGroup verticalAlign="middle">
			<mx:Image source="{lever2}"/>
			<s:Label text="二级告警"/>
		</s:HGroup>
		<s:HGroup verticalAlign="middle">
			<mx:Image source="{lever3}"/>
			<s:Label text="三级告警"/>
		</s:HGroup>
		<s:HGroup verticalAlign="middle">
			<mx:Image source="{lever4}"/>
			<s:Label text="四级告警"/>
		</s:HGroup>
	</s:VGroup>
	
	
</s:Group>
