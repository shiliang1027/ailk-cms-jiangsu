<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 xmlns:navbar="com.linkage.module.cms.components.navbar.*" xmlns:tree="com.linkage.system.component.tree.*">
	<s:layout>
		<s:BasicLayout/>
	</s:layout>
	<fx:Declarations>
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import com.linkage.module.cms.perfmonitor.subject.data.SubjectHotSpotService;
			import com.linkage.module.cms.perfmonitor.subject.data.SubjectInterfaceCommService;
			import com.linkage.system.rpc.http.HttpUtil;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			import mx.logging.ILogger;
			import mx.logging.Log;
			
			[Embed(source="../img/treeOpen.png")]
			[Bindable]
			public static var treeOpen:Class;
			
			[Embed(source="../img/treeClose.png")]
			[Bindable]
			public static var treeClose:Class;

			private var callBack:Function;
			
			private var _commonService:SubjectInterfaceCommService;
			
			private var _hotspotService:SubjectHotSpotService;
			
			//属地名称映射
			public var cityMap:Dictionary = new Dictionary();
			public var cityNameMap:Dictionary = new Dictionary();
			public var cityObjMap:Dictionary = new Dictionary();
			public var hotspotMap:Dictionary = new Dictionary();
			
			//日志
			public var log:ILogger = Log.getLogger("com.linkage.module.cms.perfmonitor.subjec.tree.HotspotTreeDiv");
			
			//当前用户属地
			private var userCItyId:String = "";
			
			private var testData:ArrayCollection = new ArrayCollection([{"city_id":"0","city_name":"江苏省","city_layer":"1","parent_id":"-1"},
				{"city_id":"001","city_name":"南京市","city_layer":"2","parent_id":"0"},
				{"city_id":"002","city_name":"淮安市","city_layer":"2","parent_id":"0"},
				{"city_id":"001001","city_name":"雨花区","city_layer":"3","parent_id":"001"},
				{"city_id":"001002","city_name":"鼓楼区","city_layer":"3","parent_id":"001"}]);
			
			private var testHotspotData:ArrayCollection = new ArrayCollection([
				{"hotspot_id":"1","hotspot_name":"test1","hotspot_type":"1","city_id":"001","county_id":"000101"},
				{"hotspot_id":"2","hotspot_name":"test2","hotspot_type":"1","city_id":"001","county_id":"000102"}]);
			
			private var txmlStr:String = 
				'<node label="江苏省" id="0" fullName="江苏省" level="1"> '+
				'<node label="南京市" id="001" fullName="江苏省南京市" level="2">'+
				'<node label="雨花区" id="001001" fullName="江苏省南京市雨花区" level="3"/>'+
				'<node label="鼓楼区" id="001002" fullName="江苏省南京市鼓楼区" level="3"/>'+
				'<node label="白下区" id="001003" fullName="江苏省南京市白下区" level="3"/>'+
				'<node label="秦淮区" id="001004" fullName="江苏省南京市秦淮区" level="3"/>'+
				'</node>'+
				'<node label="淮安市" id="002" fullName="江苏省淮安市" level="2"/>'+
				'<node label="徐州市" id="003" fullName="江苏省徐州市" level="2"/>'+
				'<node label="盐城市" id="004" fullName="江苏省盐城市" level="2"/>'+
				'<node label="常州市" id="005" fullName="江苏省常州市" level="2"/>'+
				'<node label="南通市" id="006" fullName="江苏省南通市" level="2"/>'+
				'<node label="镇江市" id="007" fullName="江苏省镇江市" level="2"/>'+
				'<node label="无锡市" id="008" fullName="江苏省无锡市" level="2"/>'+
				'<node label="苏州市" id="009" fullName="江苏省苏州市" level="2"/>'+
				'<node label="江阴市" id="010" fullName="江苏省江阴市" level="2"/>'+
				'<node label="泰州市" id="011" fullName="江苏省泰州市" level="2"/>'+
				'<node label="宿迁市" id="012" fullName="江苏省宿迁市" level="2"/>'+
				'<node label="扬州市" id="013" fullName="江苏省扬州市" level="2"/>'+
				'</node>';
			
			//属地对象
			private var cityObj:Object;
			
			//热点对象
			private var hotspotObj:Object;
			
			//热点类型编号
			private var hotspotTypeId:String;
			
			private var _isDebug:Boolean = false;
			
			public function get isDebug():Boolean
			{
				return _isDebug;
			}
			
			public function set isDebug(value:Boolean):void
			{
				_isDebug = value;
			}
			
			public function get commonService():SubjectInterfaceCommService
			{
				return _commonService;
			}
			
			public function set commonService(value:SubjectInterfaceCommService):void
			{
				_commonService = value;
			}
			
			public function get hotspotService():SubjectHotSpotService
			{
				return _hotspotService;
			}
			
			public function set hotspotService(value:SubjectHotSpotService):void
			{
				_hotspotService = value;
			}
			
			public function initTree(cityId:String, title:String, func:Function, hotspotType:String):void
			{
				userCItyId = cityId;
				callBack = func;
				legendBar.title = title;
				hotspotTypeId = hotspotType;
				
				_commonService.getAllCityTree(loadData, null, errData);
				//createTree(txmlStr);
			}
			
			public function loadData(obj:Object):void
			{
				if (obj != null)
				{
					log.info("查询属地信息成功！");
					cityObj = obj;
					initHotspot();
				}
				else
				{
					log.info("没有查询到属地数据！");
					if (_isDebug)
					{
						cityObj = testData;
						initHotspot();
					}
				}
			}
			
			public function errData(obj:Object):void
			{
				log.info("查询属地数据失败！");
				if (_isDebug)
				{
					cityObj = testData;
					initHotspot();
				}
			}
			
			//加载热点数据
			private function initHotspot():void
			{
				var paramMap:Object = new Object();
				paramMap.hotspot_type = hotspotTypeId;
				
				_hotspotService.hotspotList(paramMap,loadHotspotSucc,null,loadHotspotErr);
			}
			
			private function loadHotspotSucc(obj:Object):void
			{
				if (obj != null)
				{
					log.info("查询热点数据成功！");
					hotspotObj = obj;
					createTreeData();
				}
				else
				{
					log.info("没有查询到热点数据！");
					if (_isDebug)
					{
						hotspotObj = testHotspotData;
						createTreeData();
					}
				}
			}
			
			private function loadHotspotErr(obj:Object):void
			{
				log.info("查询热点数据失败！");
				if (_isDebug)
				{
					hotspotObj = testHotspotData;
					createTreeData();
				}
			}
			
			private function createTreeData():void
			{
				//取出省中心的属地信息
				var provinceCity:Object = null;
				for each (var city:Object in cityObj)
				{
					if (userCItyId != null && userCItyId != "")
					{
						if (city.city_id == userCItyId)
						{
							provinceCity = city;
						}
					}
					else
					{
						if (city.city_layer == "1")
						{
							provinceCity = city;
						}
					}
					
					cityMap[city.city_id] = city.city_name;
					cityNameMap[city.city_name] = city.city_id;
					cityObjMap[city.city_id] = city;
				}
				
				//缓存热点
				for each (var hotspot:Object in hotspotObj)
				{
					hotspotMap[hotspot.hotspot_id] = hotspot;
				}
				
				if (provinceCity != null)
				{
					createTree(parseXML(cityObj,provinceCity));
				}
				else
				{
					log.info("数据异常，缺少省中心");
					if (_isDebug)
					{
						createTree(txmlStr);
					}
				}
				
				//默认显示第一个热点
			}
			
			private function parseXML(obj:Object, curCity:Object):String
			{
				var str:String = "";
				//生成当前属地的XML
				str += '<node label="' + curCity.city_name + '" id="' + curCity.city_id + '" fullName="' + curCity.city_name + '" level="' + curCity.city_layer + '" p_id="' + curCity.parent_id + '">';
				
				//只有一级要下级				if (curCity.city_layer == "1")
				{
					for each (var city:Object in obj)
					{
						if (city.parent_id == curCity.city_id)
						{
							if (curCity.city_id != "0000")
							{
								str += parseXML(obj, city);
							}
						}
					}
				}
				
				//取属地下的热点
				if (curCity.city_layer == "2")
				{
					for each (var hotspot:Object in hotspotObj)
					{
						if (curCity.city_id == hotspot.city_id)
						{
							str += '<node label="' + hotspot.hotspot_name + '" id="' + hotspot.hotspot_id + '" fullName="' + curCity.city_name + '" level="99" p_id="' + curCity.city_id + '"></node>';
						}
					}
				}
				
				str += "</node>";
				return str;
			}
			
			private function createTree(txmlStr:String):void
			{
				var txml:XML = new XML(txmlStr);
				tree.dataProvider = txml;
				tree.openItems = txml;
				
//				if (hotspotObj.length > 0)
//				{
//					var hotspot:Object = hotspotObj.getItemAt(0);
//					var cityName:String = cityMap[hotspot.county_id];
//					callBack.call(null,hotspot.hotspot_id,hotspot.hotspot_name,cityName,"3",hotspot.county_id);
//				}
			}

			protected function tree_itemClickHandler(event:ListEvent):void
			{
				//只有热点需要点击事件
				callBack.call(null, 
					event.currentTarget.selectedItem.@id, 
					event.currentTarget.selectedItem.@label, 
					event.currentTarget.selectedItem.@fullName, 
					event.currentTarget.selectedItem.@level,
					event.currentTarget.selectedItem.@p_id
				);
			}

		]]>
	</fx:Script>
	
	<navbar:NavBar id="legendBar" location="right" top="10" x="5">
		<s:Group id="gp" width="140" height="350">
			<fx:Script>
				<![CDATA[
					import mx.events.ListEvent;
				]]>
			</fx:Script>
			<!--
			<mx:Tree id="tree" 
					 labelField="@label"  
					 showRoot="true" 
					 width="100%" 
					 height="100%" 
					 borderStyle="none" 
					 folderClosedIcon="{null}" 
					 folderOpenIcon="{null}" 
					 defaultLeafIcon="{null}" 
					 disclosureClosedIcon="{treeClose}" 
					 disclosureOpenIcon="{treeOpen}"
					 itemClick="tree_itemClickHandler(event)"
					 />
			-->
			
			<tree:AutoSizeTree id="tree" 
				labelField="@label"  
				showRoot="true" 
				width="100%" 
				height="100%" 
				borderStyle="none" 
				folderClosedIcon="{null}" 
				folderOpenIcon="{null}" 
				defaultLeafIcon="{null}" 
				disclosureClosedIcon="{treeClose}" 
				disclosureOpenIcon="{treeOpen}"
				itemClick="tree_itemClickHandler(event)"
				/>
		</s:Group>
	</navbar:NavBar>
</s:Group>
