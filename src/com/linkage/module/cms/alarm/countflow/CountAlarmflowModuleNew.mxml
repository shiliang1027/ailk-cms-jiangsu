<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
		   xmlns:s="library://ns.adobe.com/flex/spark"
		   xmlns:mx="library://ns.adobe.com/flex/mx"
		   width="100%"
		   height="100%"
		   xmlns:component="com.linkage.module.cms.alarm.countflow.component.*"
		   xmlns:pubflow="com.linkage.module.cms.alarm.pubflow.*"
		   xmlns:mdi="com.linkage.module.cms.alarm.countflow.component.mdi.*"
		   initialize="module1_preinitializeHandler(event)"
		   creationComplete="application_creationCompleteHandler(event)">
	<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ properties of parent ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->

	<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->

	<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Style ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
	<fx:Style source="com/linkage/module/cms/alarm/countflow/resource/css/statStyle.css"/>
	<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Script ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
	<fx:Script>
		<![CDATA[
			import com.linkage.module.cms.alarm.countflow.core.CountManagerNew;
			import com.linkage.module.cms.alarm.countflow.event.AlarmListWindowEvent;
			import com.linkage.system.logging.ILoggingTarget;
			import com.linkage.system.logging.Log;
			import com.linkage.system.logging.targets.DeMonsterTarget;
			import com.linkage.system.logging.targets.MonsterTarget2;
			
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			import mx.formatters.DateFormatter;
			import mx.logging.Log;
			import mx.managers.ToolTipManager;
			// 下面的分隔条向下样式
			private static const STYPE_BOTTOM_GO_BOTTOM:String = "bottomGoBottomDivider";
			// 下面的分隔条向上样式
			private static const STYPE_BOTTOM_GO_TOP:String = "bottomGoTopDivider";
			//统计管理类
			private var _countManager:CountManagerNew = null;
			//流水是否打开
			private var _flowIsOpen:Boolean = false;

			[Bindable]
			public var parameters:Object;

			protected var _timer:Timer = new Timer(5 * 60 * 1000);
			
			//窗口创建完成
			protected function application_creationCompleteHandler(event:FlexEvent):void
			{
				ToolTipManager.showDelay=5000;
//				parameters = parentApplication.parameters;
				System.useCodePage = true;
				//初始化统计管理类
//				_timer.addEventListener(TimerEvent.TIMER, reload);

				_countManager = new CountManagerNew(this.parameters);
				_countManager.relationStat = relationStat;
				_countManager.countAlarmflow = this;
//				_countManager.sheetStat = sheetStat;
				_countManager.sheetStat = new AlarmCountPanelNew();
				_countManager.cityAlarmStat = cityAlarmStat;
//				_countManager.warnStat = warnStat;
				_countManager.warnStatNew = warnStatNew;
				_countManager.alarmFlow = this;
				_countManager.wm = this.windowManager;
				_countManager.start();
				
				
				cityAlarmStat.addEventListener(AlarmListWindowEvent.ALARMCHANGE,cityAlarmShow);
				
				//初始化流水
				if (this.parameters.local == "true")
				{
					//flowAlarm.localTest();
				}
				else
				{
					flowAlarm.initInfo(null, 0);
				}

				//窗口布局
//				windowManager.tile();

				setTitle();
			}
			
			public function reload():void
			{
//				Alert.show("reload");
//				parameters = parentApplication.parameters;
				System.useCodePage = true;
				//初始化统计管理类
				_countManager = new CountManagerNew(this.parameters);
				_countManager.relationStat = relationStat;
				_countManager.countAlarmflow = this;
//				_countManager.sheetStat = sheetStat;
				_countManager.sheetStat = new AlarmCountPanelNew();
				_countManager.cityAlarmStat = cityAlarmStat;
//				_countManager.warnStat = warnStat;
				_countManager.warnStatNew = warnStatNew;
				_countManager.alarmFlow = this;
				_countManager.wm = this.windowManager;
				_countManager.start();
				
				cityAlarmStat.addEventListener(AlarmListWindowEvent.ALARMCHANGE,cityAlarmShow);

				//初始化流水
				if (this.parameters.local == "true")
				{
					//flowAlarm.localTest();
				}
				else
				{
					flowAlarm.initInfo(null, 0);
				}

				//窗口布局
//				windowManager.tile();

				setTitle();
			}
			

			private function setTitle():void
			{
				//告警处理展示过程 标题加入统计范围，刷新周期
				var t:String = "告警处理过程展示（统计范围：";
				var d1:Date = new Date();
//				var d:Date = new Date(d1.getFullYear(), d1.getMonth(), d1.getDate()); //modified by hurw at 3.17.2013

				var df:DateFormatter = new DateFormatter();
				df.formatString = "YYYY-MM-DD";
				var bt:String = df.format(d1);
				df.formatString = "JJ:NN:SS";
				var et:String = df.format(d1);

				t += bt + " 00:00:00～" + et + "，刷新周期：5分钟）";

				warnStatNew.title = t;

				//派单统计 标题加入统计范围，刷新周期
				var sst:String = "派单统计（统计范围：";
				sst += bt + " 00:00:00～" + et + "，刷新周期：5分钟）";
//				sheetStat.title = sst;
			}
			private function cityAlarmShow(e:AlarmListWindowEvent):void
			{
				warnStatNew.alarmShow(e);
			}

			// 点击隐藏/显示告警流水
			public function bottomDivider_clickHandler(isVisible:Boolean = false):void
			{
				if (!_flowIsOpen || isVisible)
				{
					_flowIsOpen = true;
					flowAlarm.visible = true;
					flowAlarm.includeInLayout = true;
					bottomDivider.styleName = STYPE_BOTTOM_GO_BOTTOM
				}
				else
				{
					_flowIsOpen = false;
					flowAlarm.visible = false;
					flowAlarm.includeInLayout = false;
					bottomDivider.styleName = STYPE_BOTTOM_GO_TOP
				}
			}

			protected function module1_preinitializeHandler(event:FlexEvent):void
			{
				parameters = parentApplication.parameters;
//				//1.初始化logger
//				var target:ILoggingTarget = new MonsterTarget2();
//				target.level = this.parameters.logLevel;
//				target.filters = [this.parameters.filters];
//				com.linkage.system.logging.Log.addTarget(target);
//
//				var target2:DeMonsterTarget = new DeMonsterTarget();
//				target2.level = this.parameters.logLevel;
//				target2.filters = [this.parameters.filters];
//				mx.logging.Log.addTarget(target2);
//				//2.初始化样式信息
//				if (this.parameters.local == "true")
//				{
//					styleManager.loadStyleDeclarations2("./css/common/show/ui.swf");
//				}
//				else
//				{
//					styleManager.loadStyleDeclarations2(this.parameters["styleUrl"]);
//				}
			}
		]]>
	</fx:Script>
	<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Declarations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ UI Components ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
	<s:Scroller width="100%"
				height="100%"
				horizontalScrollPolicy="off">
		<mdi:WindowManager width="100%"
						   height="100%"
						   versionType="2"
						   id="windowManager">
			<mdi:addwindows>
				<component:AlarmCountPanelNew id="warnStatNew"
											  width="100%"
											  minHeight="215"
											  height="264"
											  exportFlag="true"
											  title="告警处理过程展示（统计范围：，刷新周期：5分钟）"/>
				<!--	<component:AlarmCountPanelNew id="sheetStat"
				width="50%"
				colFlag="true"
				exportFlag="true"
				visible="false"
				includeInLayout="false"
				title="派单统计（统计范围: ，刷新周期：5分钟）"/>-->
				<component:NoChangeHeightAlarmCountPanel id="cityAlarmStat"
											  width="50%"
											  colFlag="false"
											  exportFlag="true"
											  title="地市一级告警统计（统计范围: ，刷新周期：5分钟）"/>
				<component:RelationCountPanelNew id="relationStat"
												 width="100%"
												 exportFlag="true"
												 height="{this.cityAlarmStat.height}"
												 rowCount="4"
												 title="关联告警统计"/>
				<!--<component:AlarmCountPanelNew id="warnStatNew"
					 width="100%"
					 minHeight="215"
					 height="50%"
					 rowCount="8"
					 title="告警处理过程展示（统计周期：天）"/>
					 <component:AlarmCountPanelNew id="sheetStat"
					 width="50%"
					 height="50%"
					 colFlag="true"
					 rowCount="6"
					 title="派单统计（统计周期：5分钟）"/>
					 <component:RelationCountPanelNew id="relationStat"
					 width="50%"
					 height="50%"
					 rowCount="4"
					 title="关联告警统计"/>-->
			</mdi:addwindows>
		</mdi:WindowManager>
	</s:Scroller>
	<s:VGroup id="flow"
			  width="100%"
			  minHeight="10"
			  bottom="0">
		<s:SkinnableContainer width="100%"
							  height="100%"
							  backgroundAlpha="1"
							  styleName="bgstyle1">
			<s:HGroup height="5"
					  width="100%"
					  horizontalAlign="center">
				<s:Button id="bottomDivider"
						  styleName="{STYPE_BOTTOM_GO_TOP}"
						  buttonMode="true"
						  click="bottomDivider_clickHandler()"/>
			</s:HGroup>
			<pubflow:alarm id="flowAlarm"
						   width="100%"
						   height="260"
						   visible="false"
						   includeInLayout="false"
						   moduleKey="statflowalarm"
						   params="{parentApplication.parameters}"/>
		</s:SkinnableContainer>
	</s:VGroup>
</s:Group>
