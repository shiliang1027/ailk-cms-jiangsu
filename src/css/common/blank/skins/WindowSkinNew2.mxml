<?xml version="1.0" encoding="utf-8"?>
<s:Skin xmlns:fx="http://ns.adobe.com/mxml/2009"
		xmlns:s="library://ns.adobe.com/flex/spark"
		xmlns:mx="library://ns.adobe.com/flex/mx">
	<!-- host component -->
	<fx:Metadata>
		[HostComponent("com.ailk.common.ui.components.window.standardwindow.Window")]
	</fx:Metadata>

	<fx:Script>
		<![CDATA[
			/**
			 *  @private
			 */
			override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number) : void
			{
				var backgroundColor:uint = getStyle("backgroundColor");
				var backgroundAlpha:Number = getStyle("backgroundAlpha");
				var borderColor:uint = getStyle("borderColor");
				var color:uint = getStyle("color");
//				if(backgroundColor){
//					bgFill.color=backgroundColor;
//				}
//				if(backgroundAlpha){
//					bgFill.alpha = backgroundAlpha;
//				}
//				if(borderColor){
//					borderFill.color=borderColor;
//				}
//				if(color){
//					titleDisplay.setStyle("color",color);
//					contentGroup.setStyle("color",color);
//				}
				super.updateDisplayList(unscaledWidth, unscaledHeight);
				
			}
		]]>
	</fx:Script>
	
	
	<!-- states -->
	<s:states>
		<s:State name="disabled"/>
		<s:State name="normal"/>
	</s:states>
	<s:Group left="0"
			 right="0"
			 top="0"
			 bottom="0">
		
		<s:Rect left="0"
				right="0"
				top="0"
				alpha="1" radiusX="5"
				bottom="0">
			<!--
			<s:filters>
				<s:DropShadowFilter alpha="1"
									angle="0"
									blurX="5" strength="2"
									blurY="5"
									distance="0"
									quality="100"/>
			</s:filters>
			-->
			<s:fill>
				<s:LinearGradient rotation="90">
					<s:GradientEntry color="0xf6f4f5" 
									 alpha="1"/>
					<s:GradientEntry color="0xf6f4f5" 
									 alpha="1"/>
				</s:LinearGradient>
			</s:fill>
			<s:stroke>
				<s:LinearGradientStroke rotation="90" weight="2">
					<s:GradientEntry color="0x929292" 
									 alpha="1"/>
					<s:GradientEntry color="0xffffff" 
									 alpha="0.8"/>
					<s:GradientEntry color="0x929292" 
									 alpha="0.8"/>
				</s:LinearGradientStroke>
				<!--
				<s:SolidColorStroke id="borderFill" caps="none"
									color="0x7297a9"
									joints="miter"
									miterLimit="4"
									weight="4" alpha="0.6"/>
				-->
			</s:stroke>
		</s:Rect>
		<!--
		<s:Rect left="1"
				right="1"
				top="1"
				alpha="1"
				radiusX="10"
				bottom="1">
			<s:fill>
				<s:SolidColor color="0xff0000" alpha="0"/>
			</s:fill>
			<s:stroke>
				<s:SolidColorStroke caps="none"
									joints="miter"
									miterLimit="4"
									weight="4" color="0x00ff00" alpha="0"/>
			</s:stroke>
		</s:Rect>
		-->
		<s:Group top="0"
				 left="0"
				 right="0" height="7">
			<s:BitmapImage smooth="true" source="@Embed(source='../assets/map_top.png')" fillMode="scale" left="0" right="0" top="0" bottom="0"/>
		</s:Group>
		
		<s:Group top="7"
				 left="0"
				 right="0"
				 height="37">
			<s:BitmapImage smooth="true" source="@Embed(source='../assets/menu_01.png')" fillMode="repeat" left="2" right="2" top="0" bottom="0"/>
			<s:Label id="titleDisplay" 
					 minHeight="36"
					 verticalAlign="middle"
					 maxDisplayedLines="1"
					 doubleClickEnabled="true"
					 fontWeight="bold" fontSize="18" color="0xffffff"  fontFamily="宋体" left="10" top="-6" right="0" bottom="0">
			</s:Label>
			
			<s:HGroup right="10" top="6" gap="0">
				<!---->
				<s:Button id="configButton"
				toolTip="配置" styleName="window_configBtnNew" buttonMode="true"/>
				<s:Button id="minimizeButton"
				toolTip="最小化" styleName="window_minimizeBtnNew" buttonMode="true"/>
				<s:Button id="restoreButton"
				toolTip="还原" styleName="window_restoreBtnNew" buttonMode="true"/>
				<s:Button id="maximizeButton"
				toolTip="最大化" styleName="window_maximizeBtnNew" buttonMode="true"/>
				
				<s:Button id="closeButton"
						  toolTip="关闭" styleName="window_closeBtnNew" buttonMode="true"/>
				
			</s:HGroup>
			
		</s:Group>
		
		
		
		<s:Button id="topResizeButton"
				  left="5"
				  right="5"
				  top="-2"
				  height="4"
				  alpha="0"/>
		<s:Button id="bottomResizeButton"
				  left="5"
				  right="5"
				  bottom="-2"
				  height="4"
				  alpha="0"/>
		<s:Button id="leftResizeButton"
				  left="-2"
				  top="5"
				  bottom="5"
				  width="4"
				  alpha="0"/>
		<s:Button id="rightResizeButton"
				  right="-2"
				  top="5"
				  bottom="5"
				  width="4"
				  alpha="0"/>
		<s:Button id="topLeftResizeButton"
				  left="-2"
				  top="-2"
				  width="7"
				  height="7"
				  alpha="0"/>
		<s:Button id="topRightResizeButton"
				  right="-2"
				  top="-2"
				  width="7"
				  height="7"
				  alpha="0"/>
		<s:Button id="bottomLeftResizeButton"
				  left="-2"
				  bottom="-2"
				  width="7"
				  height="7"
				  alpha="0"/>
		<s:Button id="bottomRightResizeButton"
				  right="-2"
				  bottom="-2"
				  width="7"
				  height="7"
				  alpha="0"/>
		<s:Group left="3"
				 top="45"
				 right="3"
				 bottom="12" minHeight="0">
			<s:Group id="contentGroup"
					 width="100%" left="0" right="0" bottom="0"
					 height="100%" minHeight="0" color="0xffffff">
			</s:Group>
		</s:Group>
		
		<s:Group bottom="0"
				 left="0"
				 right="0"
				 height="12">
			<s:BitmapImage smooth="true" source="@Embed(source='../assets/map_bottom.png')" fillMode="scale" left="0" top="0" bottom="0" right="0"/>
		</s:Group>
		<!-- SkinParts
			 name=maximizeButton, type=spark.components.Button, required=false
			 name=closeButton, type=spark.components.Button, required=false
			 name=bottomLeftResizeButton, type=spark.components.Button, required=false
			 name=minimizeButton, type=spark.components.Button, required=false
			 name=topRightResizeButton, type=spark.components.Button, required=false
			 name=rightResizeButton, type=spark.components.Button, required=false
			 name=bottomResizeButton, type=spark.components.Button, required=false
			 name=leftResizeButton, type=spark.components.Button, required=false
			 name=topLeftResizeButton, type=spark.components.Button, required=false
			 name=bottomRightResizeButton, type=spark.components.Button, required=false
			 name=restoreButton, type=spark.components.Button, required=false
			 name=topResizeButton, type=spark.components.Button, required=false
			 name=titleDisplay, type=spark.components.supportClasses.TextBase, required=false
			 name=controlBarGroup, type=spark.components.Group, required=false
			 name=contentGroup, type=spark.components.Group, required=false
		-->
	</s:Group>
</s:Skin>
