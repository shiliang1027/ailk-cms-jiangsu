<?xml version="1.0" encoding="utf-8"?>

<!--

	 ADOBE SYSTEMS INCORPORATED
	 Copyright 2008 Adobe Systems Incorporated
	 All Rights Reserved.

	 NOTICE: Adobe permits you to use, modify, and distribute this file
	 in accordance with the terms of the license agreement accompanying it.

-->

<!--- The default skin class for the Spark Button component.

	 @see spark.components.Button

	 @langversion 3.0
	 @playerversion Flash 10
	 @playerversion AIR 1.5
	 @productversion Flex 4
-->
<s:SparkSkin xmlns:fx="http://ns.adobe.com/mxml/2009"
			 xmlns:s="library://ns.adobe.com/flex/spark"
			 xmlns:fb="http://ns.adobe.com/flashbuilder/2009"
			 alpha.disabled="0.5"
			 xmlns:mx="library://ns.adobe.com/flex/mx"
			 minWidth="20"
			 minHeight="20">

	<!-- host component -->
	<fx:Metadata>
		<![CDATA[ 
		/** 
		* @copy spark.skins.spark.GroupSkin#hostComponent
		*/
		[HostComponent("spark.components.Button")]
		]]>
	</fx:Metadata>

	<fx:Script fb:purpose="styling">
		<![CDATA[
			/* Define the skin elements that should not be colorized.
			 For button, the graphics are colorized but the label is not. */
			static private const exclusions:Array=["labelDisplay"];

			/**
			 * @private
			 */
			override public function get colorizeExclusions():Array
			{
				return exclusions;
			}

			/**
			 * @private
			 */
			override protected function initializationComplete():void
			{
				useChromeColor=true;
				super.initializationComplete();
			}

			/**
			 *  @private
			 */
			override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void
			{
				var cr:Number=getStyle("cornerRadius");

				if (cornerRadius != cr)
				{
					cornerRadius=cr;
//					shadow.radiusX = cornerRadius;
//					fill.radiusX = cornerRadius;
//					lowlight.radiusX = cornerRadius;
//					highlight.radiusX = cornerRadius;
//					border.radiusX = cornerRadius;
				}

				if (highlightStroke)
					highlightStroke.radiusX=cornerRadius;
//				if (hldownstroke1) hldownstroke1.radiusX = cornerRadius;
//				if (hldownstroke2) hldownstroke2.radiusX = cornerRadius; 

				super.updateDisplayList(unscaledWidth, unscaledHeight);
			}

			private var cornerRadius:Number=2;
		]]>
	</fx:Script>

	<!-- states -->
	<s:states>
		<s:State name="up"/>
		<s:State name="over"/>
		<s:State name="down"/>
		<s:State name="disabled"/>
	</s:states>
	<s:Rect id="fill"
			left="1"
			right="1"
			top="1"
			bottom="1"
			radiusX="2">
		<s:fill>
			<s:SolidColor color="0xffffff"
						  alpha="0"
						  alpha.over="0.5"
						  alpha.down="0.8"/>
		</s:fill>
	</s:Rect>
	<!-- layer 5: highlight stroke (all states except down) -->
	<!--- @private -->
	<s:Rect id="highlightStroke"
			left="0"
			right="0"
			top="0"
			bottom="0"
			radiusX="2"
			excludeFrom="down">
	</s:Rect>

	<!-- layer 8: text -->
	<!--- @copy spark.components.supportClasses.ButtonBase#labelDisplay -->
	<s:Label id="labelDisplay"
			 textAlign="center"
			 verticalAlign="middle"
			 maxDisplayedLines="1"
			 horizontalCenter="0"
			 verticalCenter="1"
			 left="10"
			 right="10"
			 top="2"
			 bottom="2"
			 text="">
	</s:Label>

	<mx:Image source="@Embed('com/linkage/gis/tools/skins/black/assets/viewAll.png')"
			  horizontalCenter="0"
			  verticalCenter="0"/>

</s:SparkSkin>
